// Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
// Copyright (C) 2007-2008 - INRIA
// Copyright (C) 2009-2011 - DIGITEO
//
// This file must be used under the terms of the CeCILL.
// This source file is licensed as described in the file COPYING, which
// you should have received as part of this distribution.  The terms
// are also available at
// http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt

// Main Scilab initialisation file

mode(-1);  // silent execution mode

%pvm = with_module("pvm");
%tk = (with_module("tclsci") & getscilabmode() <> "NWNI");

// Default Obsolete Warning policy  ===================================
global %modalWarning;
// False -> Scilab will only display a Warning message in the console
//          if warnings are enabled [warning("on"/"off")].
// True  -> Scilab will show a blocking popup.
%modalWarning = %F;
clear %modalWarning;

// Create some configuration variables ================================
PWD = pwd();

// Startup message  ===================================================
//if (sciargs()<>"-nb") & ~fromjava() & ~fromc() then
if sciargs() <> "-nb" then
    banner();
    printf("\n\n%s\n", gettext("Startup execution:"));
    printf(gettext("  loading initial environment") + "\n");
end

// loads modules ======================================================
//function startModules()
//    modules    = getmodules();
//    for i=1:size(modules,"*")
//        exec("SCI/modules/" + modules(i) + "/etc/" + modules(i) + ".start", -1);
//    end
//endfunction

//startModules();
//clear startModules;

// Create some configuration variables ================================
home = getenv("HOME", SCI);
if getos() <> "Windows" then
    if getenv("PRINTERS", "ndef") == "ndef" then
        setenv("PRINTERS", "lp");
    end
end
setenv("VERSION", getversion());

// ATOMS ===============================================================
if with_module("atoms") then
    atomsSystemInit();
    atomsAutoload();
    clear atomsSystemInit atomsAutoload
end

// load contrib menu if present ========================================
function loadContrib()
    if isfile(SCI+"/contrib/loader.sce") then
        global %toolboxes;
        global %toolboxes_dir;
        exec(SCI+"/contrib/loader.sce");
    end
endfunction

loadContrib();
clear loadContrib;

// calling user initialization =========================================
function startUserConf()
    if sciargs()<>"-nouserstartup" then
        startupfiles = [ SCIHOME + filesep() + ".scilab"     ; .. // Home directory startup
        SCIHOME + filesep() + "scilab.ini" ];    //  ""      ""    startup

        if SCIHOME <> pwd() then
            startupfiles = [    startupfiles     ; ..
                                ".scilab"        ; .. // Working directory startup
                                "scilab.ini" ]   ;    //  ""         ""    startup
        end

        for i=1:size(startupfiles,"*")
            if isfile(startupfiles(i)) then
                exec(startupfiles(i),-1);
            end
        end
    end
endfunction

startUserConf();
clear startUserConf;

// Menus/toolbar can now be enabled ====================================
if getscilabmode() == "STD" then
    setmenu(gettext("&File"));
    setmenu(gettext("&Edit"));
    setmenu(gettext("&Preferences"));
    setmenu(gettext("&Control"));
    setmenu(gettext("&Applications"));

    if ~with_module("scinotes") then // Desactivate Editor menu
        unsetmenu(gettext("&Applications"), 1);
    end

    if ~with_module("xcos") then // Desactivate xcos menu
        unsetmenu(gettext("&Applications"), 3);
    end

    if ~with_module("m2sci") then // Desactivate mfile2sci menu
        unsetmenu(gettext("&Applications"), 5);
    end

    if ~with_module("atoms") then // Desactivate atoms menu
        unsetmenu(gettext("&Applications"), 7);
    end

    setmenu(gettext("&?"));
    setmenu(gettext("&Toolboxes"));
    toolbar(-1, "on");
end

// ====================================================================
clear ans
