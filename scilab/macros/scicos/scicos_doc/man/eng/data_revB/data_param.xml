<DATA flag="param">

<FILE name='ABS_VALUE' type='LATEX'>
%automatically generated, please edit
\begin{itemize}

  %use zero\_crossing (1: yes) (0:no)   1
  \item {\bf use zero\_crossing} \\
        Select to enable zero crossing detection. \\
        Properties : Type 'vec' of size 1.
\end{itemize}
</FILE>

<FILE name='AFFICH_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%Font number   1
\item {Font number:}  integer, the selected font number (see xset). 
%Font size   1
\item {Font size:}nteger, the selected font size (set xset) 
%Color   1
\item {Color:}  integer, the selected color for the text (see xset) 
%Total number of digits   9
\item {Total number of digits:} an integer greater than 3, the maximum
  number of digits used to represent the number (sign, integer part
  and rational part)  
%Number of rational part digits   2
\item {Number of rational part digits:} n integer greater than or
  equal 0, the number of digits used to represent the rational part  
%Block inherits (1) or not (0)   0
\item {Block inherits :} Options to choose event inheritance from
  regular input or from explicit event input (0). 
\end{itemize}
</FILE>

<FILE name='ANDBLK' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='ANDLOG_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='ANIMXY_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%color ($<$0) or mark ($>$0)   -4
\item {color :} an integer. It is the color number ($>=0$) or marker
  type ($<0$) used to draw the evolution of the input port signal. See
{\bf  xset()}  for color (dash type) definitions.   
%line or mark size   1
\item {line or mark size:}an integer. 
%Output window number   1
\item {Output window number:} The number of graphic window used for
  the display. It is often good to use high values to avoid conflict
  with palettes and Super Block windows. If you have more than one
  scope, make sure they don't have the same window numbers (unless
  superposition of the curves is desired).  
%Output window position   []
\item {Output window position:}a 2 vector specifying the coordinates
  of the upper left corner of the graphic window. Answer [] for
  default window position.  
%Output window sizes   []
\item {Output window sizes:}a 2 vector specifying the width and height
  of the graphic window. Answer [] for default window dimensions.  
%Xmin   -15
\item {Xmin:} Minimum values of the first input; used to set up the
  X-axis of the plot in the graphics window.  
%Xmax   15
\item {Xmax:}Maximum values of the first input; used to set up the
  X-axis of the plot in the graphics window.  
%Ymin   -15
\item {Ymin:}Minimum and maximum values of the second input; used to
  set up the Y-axis of the plot in the graphics window.  
%Ymax   15
\item {Ymax:}Maximum values of the second input; used to set up the
  Y-axis of the plot in the graphics window.  
%Buffer size   2
\item {Buffer size:} An integer value. In order to minimize the number
  of graphics outputs, data may buffered.  
\end{itemize}
</FILE>

<FILE name='BACKLASH' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%initial output   0
\item {initial output:}The initial output value. 
%gap   1
\item {gap:} The width of the deadband. 
%use zero-crossing (0:no, 1:yes)   1
\item {use zero-crossing :} Select to enable use of zero crossing
  detection to detect engagement with lower and upper thresholds.  
\end{itemize}
</FILE>

<FILE name='Bache' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Pression dans le ciel de la bache : Patm (Pa)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Atmospheric pressure inside the tank.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Section de la bache : A (m2)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Surface area of the tank.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Altitude du piquage d entrée 1: ze1 (m)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Altitude of the first input port
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Altitude du piquage d entrée 2: ze2 (m)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Altitude of the second input port
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Altitude du piquage de sortie 1: zs1 (m)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1.  Altitude of the first output port.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Altitude du piquage de sortie 2: zs2 (m)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Altitude of the second output port.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Altitude initiale du fluide : z0 (m)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Initial fluid level in the tank.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Température initiale du fluide : T0 (K)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Temperature of fluid in the tank
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Si &gt;0, masse volumique imposée du fluide : p_rho (kg/m3)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Density of fluid
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='CBLOCK' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%simulation function   toto
\item {simulation function:}  Name of the function to be generated.
%is block implicit? (y,n)   n
\item {is block implicit? :} If yes (y) is selected, it calls implicit
  solver (dasrt) else (n) it calls explicit solver, lsodar.
%input ports sizes   1
\item {input ports sizes:}  Number of regular input ports
%output ports sizes   1
\item {output ports sizes:} Number of regular output ports
%input event ports sizes   []
\item {input event ports sizes:} Number of envent input ports
%output events ports sizes   []
\item {output events ports sizes:} Number of event output ports
%initial continuous state   []
\item {initial continuous state:} Initial Conditions
%number of zero crossing surfaces   0
\item {number of zero crossing surfaces:} Select to enable zero
  crossing detection. 
%initial discrete state   [] 
\item {initial discrete state:} Initial conditions of the discrete states. 
%Real parameters vector   []
\item {Real parameters vector:} Real Parameter vector that the function
  accepts.  
%Integer parameters vector   []
\item {Integer parameters vector:} 
%initial firing vector ($<$0 for no firing)   []
\item {initial firing vector :} A vector. Size of this vector corresponds
  to the number of event outputs. The value of the i-th entry
  specifies the time of the preprogrammed event firing on the i-th
  output event port. If less than zero, no event is preprogrammed.  
%direct feedthrough (y or n)   \%t
\item {direct feedthrough :} The input to the block at the current time
  determine the output of the block at the current time. This forces
  the input to feed through to the output, as if the system were
  operating at steady-state.   
%time dependence (y or n)   \%f
\item {time dependence :}Create a signal that specifies the time dependence.
\end{itemize}
</FILE>

<FILE name='CLINDUMMY_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='CLKINV_f' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>Port number</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    an integer defining the port number.
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size 1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='CLKOUTV_f' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>Port number</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    an integer defining the port number.
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size 1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='CLKSOMV_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='CLOCK_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
 %Period   0.1
 \item {\bf Period} \\
       scalar. One over the frequency of the clock. Period is
       the time that separates two output events.  \\
       Properties : Type 'vec' of size 1.

 %Init time   0.1
 \item {\bf Init time} \\
        scalar. Starting date. if negative the clock never
        starts. \\
        Properties : Type 'vec' of size 1.
\end{itemize}
</FILE>

<FILE name='CLR_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
  %Numerator (s)   1
  \item {\bf Numerator} \\
        This parameter sets the numerator of the transfert function.\\
        This must be a polynomial in s.\\
        Properties : Type 'pol' of size 1.

  %Denominator (s)   1+s
  \item {\bf Denominator} \\
        This parameter sets the denominator of the transfert function.\\
        This must be a polynomial in s.\\
        Properties : Type 'pol' of size 1.

\end{itemize}
</FILE>

<FILE name='CLSS_f' type='LATEX'>
\begin{itemize}

 %A matrix   -1
 \item {\bf $A$ matrix} \\
       A square matrix. \\
       Properties : Type 'mat' of size [-1,-1].

 %B matrix   1
 \item {\bf B matrix} \\
       The $ B $ matrix,  []  if system has no input.\\
       Properties : Type 'mat' of size ["size(\%1,2)","-1"].

 %C matrix   1
 \item {\bf C matrix} \\
       The  $C$  matrix ,  []  if system has no output.\\
       Properties : Type 'mat' of size ["-1","size(\%1,2)"].

 %D matrix   0
 \item {\bf D matrix} \\
       The $ D$  matrix,  []  if system has no  D  term.\\
       Properties : Type 'mat' of size [-1,-1].

 %Initial state   0
 \item {\bf Initial state} \\
       A vector/scalar initial state of the system.\\
       Properties : Type 'vec' of size "size(\%1,2)".

\end{itemize}
</FILE>

<FILE name='CMSCOPE' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%Input ports sizes   1 1
\item {Input ports sizes:} It allows multiple  input ports. 
%Drawing colors ($>$0) or mark ($<$0)   1 3 5 7 9 11 13 15
\item {Drawing colors :} a vector of integers. The i-th element is the color
  number ($>0$) or dash type ($<0$) used to draw the evolution of the i-th
  input port signal. See  {\bf plot2d}  for color (dash type) definitions. 
%Output window number   1
\item {Output window number:} The number of graphic window used for 
  the display. It is often good to use high values to avoid conflict 
  with palettes and Super Block windows. If default value is used {\bf 
  (1)}, Scicos define the output window number.  
%Output window position   []
\item {Output window position:} a 2 vector specifying the coordinates
  of the upper left corner of the graphic window. Answer [] for 
  default window position.    
%Output window sizes   []
\item {Output window sizes:}a 2 vector specifying the coordinates of
  the upper left corner of the graphic window. Answer [] for default 
  window position.   
%Ymin vector   -1 -5
\item {Ymin vector:} Minimum  values of the input; used to set up the Y-axis
  of the plot in the graphics window. 
%Ymax vector   1 5
\item {Ymax vector:} Maximum values of the input; used to set up the Y-axis
  of the plot in the graphics window.  
%Refresh period   30
\item {Refresh period:}  Maximum value on the X-axis (time). The plot
  is redrawn when time reaches a multiple of this value.
%Buffer size   2
\item {Buffer size:} To improve efficiency it is possible to buffer the
  input data. The drawing is only done after each  {\bf Buffer size}
  call to the block.   
%Accept herited events 0/1   0
\item {Accept herited events 0/1:}if 0  {\bf CSCOPE\_f}  draws a new point
  only when an event occurs on its event input port. if 1  {\bf CSCOPE\_f}
  draws a new point when an event occurs on its event input port and
  when it's regular input changes due to an event on an other upstrem
  block (herited events).   
%Name of Scope (label\&Id)   
\item {Name of Scope :} Name/label of the block.
\end{itemize}
</FILE>

<FILE name='CONSTRAINT_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%Set number of constraints   1
\item {Set number of constraints:} no of algebric relations to be defined. 
\end{itemize}
</FILE>

<FILE name='CONST_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%Constant   1
\item {\bf Constant} \\
  a real vector. The vector size gives the size of the
  output port. The value  {\bf constants(i)}  is assigned to the ith
  component of the output.  \\
  Properties :  Type 'vec' of size -1.
\end{itemize}
</FILE>

<FILE name='CSCOPE' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%Color ($>$0) or mark ($<$0) vector (8 entries)   1 3 5 7 9 11 13 15
\item {Color :} a vector of integers. The i-th element is the color
  number ($>0$) or dash type ($<0$) used to draw the evolution of the i-th
  input port signal. See  {\bf plot2d}  for color (dash type) definitions.   
%Output window number (-1 for automatic)   -1
\item {Output window number :}The number of graphic window used for 
  the display. It is often good to use high values to avoid conflict 
  with palettes and Super Block windows. If default value is used {\bf 
  (1)}, Scicos define the output window number.  
%Output window position   [] 
\item {Output window position:}a 2 vector specifying the coordinates
  of the upper left corner of the graphic window. Answer [] for 
  default window position.   
%Output window sizes   [600;400] 
\item {Output window sizes:} a 2 vector specifying the coordinates of
  the upper left corner of the graphic window. Answer [] for default 
  window position.   
%Ymin   -15
\item {Ymin:} Minimum  values of the input; used to set up the Y-axis
  of the plot in the graphics window.   
%Ymax   15
\item {Ymax:} Maximum values of the input; used to set up the Y-axis
  of the plot in the graphics window.   
%Refresh period   30 
\item {Refresh period:} Maximum value on the X-axis (time). The plot
  is redrawn when time reaches a multiple of this value.  
%Buffer size   2
\item {Buffer size:}To improve efficiency it is possible to buffer the
  input data. The drawing is only done after each  {\bf Buffer size}
  call to the block.   
%Accept herited events 0/1   0
\item {Accept herited events 0/1:} if 0  {\bf CSCOPE\_f}  draws a new point
  only when an event occurs on its event input port. If 1  {\bf CSCOPE\_f}
  draws a new point when an event occurs on its event input port and
  when it's regular input changes due to an event on an other upstrem
  block (herited events).  
%Name of Scope (label\&Id)   
\item {Name of Scope :} Name/label of the block.
\end{itemize}
</FILE>

<FILE name='CURV_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='Capacitor' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>C (F)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. Capacitance
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Initial Voltage</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. Initial Voltage
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='ConstantVoltage' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>V (volt)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. Output voltage
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='CurrentSensor' type='XML'>
<PARAM>
<PARAM_INDENT>
</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='DEADBAND' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%End of dead band   0.5
\item {End of dead band:}The upper limit of the dead band. 
%Start of dead band   -0.5
\item {Start of dead band:}The lower limit of the dead band. 
%zero crossing (0:no, 1:yes)   1
\item {zero crossing :} Select to enable zero crossing detection to
  detect when the limits are reached.  
\end{itemize}
</FILE>

<FILE name='DEBUG_SCICOS' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='DEMUX' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%number of output ports or vector of sizes   2
\item {number of output ports or vector of sizes:}positive integer less than or equal to $8$. 
\end{itemize}
</FILE>

<FILE name='DERIV' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='DLR_f' type='LATEX'>
\begin{itemize}
  \item {\bf Numerator (z)} \\
        This parameter sets the numerator of the transfert function.\\
        This must be a polynomial in {\bf z}.\\
        Properties : Type 'pol' of size 1.

  \item {\bf Denominator (z)} \\
        This parameter sets the denominator of the transfert function.\\
        This must be a polynomial in {\bf z}.\\
        Properties : Type 'pol' of size 1.
\end{itemize}
</FILE>

<FILE name='DLSS_f' type='LATEX'>
\begin{itemize}

 %A matrix   -1
 \item {\bf $A$ matrix} \\
       A square matrix. \\
       Properties : Type 'mat' of size [-1,-1].

 %B matrix   1
 \item {\bf B matrix} \\
       The $ B $ matrix,  []  if system has no input.\\
       Properties : Type 'mat' of size ["size(\%1,2)","-1"].

 %C matrix   1
 \item {\bf C matrix} \\
       The  $C$  matrix ,  []  if system has no output.\\
       Properties : Type 'mat' of size ["-1","size(\%1,2)"].

 %D matrix   0
 \item {\bf D matrix} \\
       The $ D$  matrix,  []  if system has no  D  term.\\
       Properties : Type 'mat' of size [-1,-1].

 %Initial state   0
 \item {\bf Initial state} \\
       A vector/scalar initial state of the system.\\
       Properties : Type 'vec' of size "size(\%1,2)".

\end{itemize}
</FILE>

<FILE name='DOLLAR_f' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>initial condition</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    The output of the simulation for the first sampling period, during which the output of the Unit Delay block is otherwise undefined.  .
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size -1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
	<PARAM_NAME>Inherit (no:0, yes:1)</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    When "Inherit" is yes, the block inherit its event input.
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size -1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='Diode' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Saturation cuurent (A)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. Saturation current
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Voltage equivalent to temperature (Volt)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. Voltage equivalent of temperature
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Max exponent for linear continuation</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. Max exponent for linear continuation
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>R (ohm)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. Parallel ohmic resistance.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='EDGE_TRIGGER' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>rising (1), falling (-1), both (0)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='ESELECT_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%number of output event ports   2
\item {number of output event ports:}  A scalar. Number of output event ports.
%Inherit (1: no, 0: yes)   1
\item {Inherit :} If no, then it inherits the event from event input
  port, elseif yes, then event is activated by regular input port. 
%zero-crossing (0: no, 1: yes)   0
\item {zero-crossing :}Select to enable zero crossing detection.
\end{itemize}
</FILE>

<FILE name='EVENTSCOPE_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%Number of event inputs   1
\item {Number of event inputs:} an integer giving the number of event
  input ports colors : a vector of integers. The i-th element is the
  color number ($>=0$) or dash type ($<0$) used to draw the evolution of
  the i-th input port signal. See  {\bf xset}  for color (dash type)
  definitions.  
 
%colors c ($>$0) or mark ($<$0)   1
\item {colors c :} an integer. It is the color number ($>0$) or dash
  type ($<0$) used to draw the evolution of the input port signal. See
  {\bf plot2d}  for color (dash type) definitions.  
%Output window number   1
\item {Output window number:}The number of graphic window used for the
  display. It is often good to use high values to avoid conflict with
  palettes and Super Block windows. If you have more than one scope,
  make sure they don't have the same window numbers (unless
  superposition of the curves is desired). Output window position : a
  2 vector specifying the coordinates of the upper left corner of the
  graphic window. Answer [] for default window position.  
 
%Output window position   []
\item {Output window position:}

%Output window sizes   [600;400]
\item {Output window sizes:}a 2 vector specifying the width and height
  of the graphic window. Answer [] for default window dimensions.  
%Refresh period   30
\item {Refresh period:}Maximum value on the X-axis (time). The plot is
  redrawn when time reaches a multiple of this value.  
\end{itemize}
</FILE>

<FILE name='EVTDLY_f' type='LATEX'>
  %automatically generated, please edit
  \begin{itemize}

     %Delay   0.1
     \item {Delay:} scalar. Time delay between input and output event.

     %Date of initial output event   0.1
     \item {Date of initial output event:}scalar. If {\bf Auto-exec>=0 } block
             initially generates an output event at date{\bf  Auto-exec}.  
  \end{itemize}
</FILE>

<FILE name='EVTGEN_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%Event Time   0
\item {Event Time:} scalar. date of the initial event 
\end{itemize}
</FILE>

<FILE name='EVTVARDLY' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%Initial event firing time ($<$0 if absent)   -1
\item {Initial event firing time :}  One event is generated on the
  unique output event port if Event time is larger than equal to zero,
  if not, no event is generated. 
\end{itemize}
</FILE>

<FILE name='EXPBLK_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}

  %a ($>$0)  \%e
  \item {\bf a} \\
        A real positive scalar.\\
        Properties : Type 'vec' of size 1.

\end{itemize}
</FILE>

<FILE name='EXPRESSION' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%number of inputs   2
\item {number of inputs:} Block input can be a scalar or vector. 
%scilab expression   (u1$>$0)*sin(u2)\^2
\item {scilab expression:} The Scilab expression applied to the input. 
%use zero-crossing (0: no, 1 yes)   1
\item {use zero-crossing :}Select to enable zero crossing detection. 
\end{itemize}
</FILE>

<FILE name='EXTRACTOR' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%indices to extract   1
\item {indices to extract:} a regular input to be extracted from the
  multiple regular inputs.   
\end{itemize}
</FILE>

<FILE name='Extract_Activation' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='FSCOPE_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%Color ($>$0) or mark ($<$0) vector (8 entries)   1 3 5 7 9 11 13 15
\item {Color :} a vector of integers. The i-th element is the color
  number ($>0$) or dash type ($<0$) used to draw the evolution of the i-th
  input port signal. See  {\bf plot2d}  for color (dash type) definitions.   
%Output window number (-1 for automatic)   -1
\item {Output window number :}The number of graphic window used for 
  the display. It is often good to use high values to avoid conflict 
  with palettes and Super Block windows. If default value is used {\bf 
  (1)}, Scicos define the output window number.  
%Output window position   [] 
\item {Output window position:}a 2 vector specifying the coordinates
  of the upper left corner of the graphic window. Answer [] for 
  default window position.   
%Output window sizes   [600;400] 
\item {Output window sizes:} a 2 vector specifying the coordinates of
  the upper left corner of the graphic window. Answer [] for default 
  window position.   
%Ymin   -15
\item {Ymin:} Minimum  values of the input; used to set up the Y-axis
  of the plot in the graphics window.   
%Ymax   15
\item {Ymax:} Maximum values of the input; used to set up the Y-axis
  of the plot in the graphics window.   
%Refresh period   30 
\item {Refresh period:} Maximum value on the X-axis (time). The plot
  is redrawn when time reaches a multiple of this value.  
%Buffer size   2
\item {Buffer size:}To improve efficiency it is possible to buffer the
  input data. The drawing is only done after each  {\bf Buffer size}
  call to the block.   
%Links to view   1
\item {Links to view:} This parameter allows you to display the output
  of specified link.   
\end{itemize}
</FILE>

<FILE name='GENSIN_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}

  %Magnitude   1
  \item {\bf Magnitude} \\
        a scalar. 
        The magnitude M.\\
        Type 'vec' of size 1.

  %Frequency   1
  \item {\bf Frequency} \\
        a scalar. 
        The frequency F.\\
        Type 'vec' of size 1.

  %phase   0
  \item {\bf phase} \\
        a scalar. 
        The phase P.\\
        Type 'vec' of size 1.

\end{itemize}
</FILE>

<FILE name='GENSQR_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}

  %Amplitude   1
  \item {Amplitude}\\
         a scalar $M$.\\
         Type 'vec' of size 1.

\end{itemize}
</FILE>

<FILE name='Ground' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='HALT_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%State on halt   0
\item {State on halt:} A scalar value to be placed in the state of
  the block. For debugging purposes this allows to distinguish between
  different halts.  
\end{itemize}
</FILE>

<FILE name='HYSTHERESIS' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%switch on at   1
\item {switch on at:} The Switch on point parameter is converted to the input data type offline using round-to-nearest and saturation. 
%switch off at   0
\item {switch off at:} The Switch off point parameter is converted to
  the input data type offline using round-to-nearest and saturation.  
%output when on   1
\item {output when on:}The output when the relay is on.
%output when off   0
\item {output when off:} The output when the relay is off.
%use zero crossing: yes (1), no (0)   1
\item {use zero crossing: yes :}Select to enable zero crossing
  detection to detect switch-on and switch-off points. 
\end{itemize}
</FILE>

<FILE name='IFTHEL_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%Inherit (1: no, 0: yes)   1
\item {Inherit :} If no, then it inherits the event from event input
  port, elseif yes, then event is activated by regular input port.  
%zero-crossing (0: no, 1: yes)   1
\item {zero-crossing :} Select to enable zero crossing detection.
\end{itemize}
</FILE>

<FILE name='INIMPL_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}

  %Port number   1
  \item {\bf Port number} \\
        Specify the port number of the Inport block.\\
        Properties : Type 'vec' of size 1.
\end{itemize}
</FILE>

<FILE name='INTEGRAL' type='LATEX'>
\begin{itemize}
  %Initial Condition   0
  \item {\bf Initial Condition} \\
         A vector/scalar initial conditions.\\
         Properties : Type 'vec' of size -1.

  %With re-intialization (1:yes, 0:no)   0
  \item {\bf With re-intialization} \\
        To reset its state to the  specified
        initial condition based on an external signal select {\bf 1}.\\
        Properties : Type 'vec' of size 1.

  %With saturation (1:yes, 0:no)   0
  \item {\bf With saturation} \\
        If selected, limits the states to a value
        between the Lower saturation limit and Upper saturation limit
        parameters.\\
        Properties : Type 'vec' of size 1.

  %Upper limit   1
  \item {\bf Upper limit} \\
        The upper limit for the integral.\\
        Properties : Type 'vec' of size -1.

  %Lower limit   -1
  \item {\bf Lower limit} \\
        The lower limit for the integral.\\
        Properties : Type 'vec' of size -1.

\end{itemize}
</FILE>

<FILE name='INTRP2BLK_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}

  %X coord.   [0;1]
  \item {\bf X coord.} \\
        an n-vector (strictly increasing).\\
        Properties : Type 'vec' of size -1

  %Y coord.   [0;1]
  \item {\bf Y coord.} \\
        an m-vector (strictly increasing).\\
        Properties : Type 'vec' of size -1

  %Z values   [0,1;1,2]
  \item {\bf Z values} \\
        an $m \times n$ matrix.\\
        Properties : Type 'mat' of size [-1,-1]

\end{itemize}
</FILE>

<FILE name='INTRPLBLK_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}

  %X coord.   [0;1]
  \item {\bf X coord.}\\
        A vector (strictly increasing).\\
        Properties : Type 'vec' of size -1

  %Y coord.   [0;1]
  \item {\bf Y coord.}\\
        A vector (same size as $X$ coord).\\
        Properties : Type 'vec' of size -1

\end{itemize}
</FILE>

<FILE name='INVBLK_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='IN_f' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>Port number</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    an integer defining the port number.
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size 1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='ISELECT_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%number of outputs   2
\item {number of outputs:} a scalar. Number of regular and event outputs. 
%initial connected output   1
\item {initial connected output:} an integer. It must be between 1 and
  the number of inputs.   
\end{itemize}
</FILE>

<FILE name='Inductor' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>L (T)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. Inductance
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='LOGBLK_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}

  %Basis ($>$1)   \%e
  \item {\bf Basis} \\
        A real scalar greater than 1.\\
        Properties : Type 'vec' of size 1.

\end{itemize}
</FILE>

<FILE name='LOGICAL_OP' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%number of inputs   2
\item {number of inputs:} The number of block inputs. The value must
  be appropriate for the selected operator. 
%Operator: AND (0), OR (1), NAND (2), NOR (3), XOR (4), NOT (5)   0
\item {Operator: AND :} The logical operator to be applied to the
  block inputs. Valid choices are the operators from the list. 
\end{itemize}
</FILE>

<FILE name='LOOKUP_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MAXMIN' type='LATEX'>
%automatically generated, please edit
\begin{itemize}

  %Min (1) or Max (2)    2
  \item {\bf Min or Max} \\
        The function (min or max) to apply to the input.\\
        Properties : Type 'vec' of size 1.

  %Number of input vectors (1 or 2)   1
  \item {\bf Number of input vectors} \\
        The number of inputs to the block.\\
        Properties : Type 'vec' of size 1.

  %zero-crossing (1: yes, 0;no)   1
  \item {\bf zero-crossing} \\
        Select to enable zero crossing detection to
        detect minimum and maximum values.\\
        Properties : Type 'vec' of size 1.

\end{itemize}
</FILE>

<FILE name='MUX' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%number of input ports or vector of sizes   2
\item {number of input ports or vector of sizes:}integer greater than
  or equal to 1 and less than 8.   
\end{itemize}
</FILE>

<FILE name='M_SWITCH' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%number of inputs   2
\item {number of inputs:} Specify the number of data inputs to the block. 
%zero base indexing (0), otherwise 1   1
\item {zero base indexing :} If selected, the block uses zero-based
  indexing. Otherwise, the block uses one-based indexing.  
%rounding rule: int (0), round (1), ceil (2), floor (3)   3
\item {rounding rule: int :} Select the rounding mode for the
  output. 
\end{itemize}
</FILE>

<FILE name='Modulo_Count' type='LATEX'>
%automatically generated, please edit
\begin{itemize}

  %initial state ($>$=0)   0
  \item {\bf initial state} \\
         A scalar initial discrete state. \\
         Properties : Type 'vec' of size 1

  %Modulo what number ($>$0)   3
  \item {\bf Modulo what number} \\
         Number of required discrete signals.\\
         Properties : Type 'vec' of size 1

\end{itemize}
</FILE>

<FILE name='NEGTOPOS_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='NRMSOM_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%number of inputs   2
\item {number of inputs:}The number of input ports to be merged.
\end{itemize}
</FILE>

<FILE name='OUTIMPL_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}

  %Port number   1
  \item {\bf Port number} \\
        Specify the port number of the Outport block.\\
        Properties : Type 'vec' of size 1.
\end{itemize}
</FILE>

<FILE name='OUT_f' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>Port number</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    an integer defining the port number.
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size 1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='PDE' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>New block's name :</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'str' of size 1. The parameter description 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='POSTONEG_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='POWBLK_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}

  %to the power of   1.5
  \item {\bf to the power of} \\
        real scalar.\\
        Properties : Type 'vec' of size 1.

\end{itemize}
</FILE>

<FILE name='PRODUCT' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%Number of inputs or sign vector (multiplication: + 1, division: -1)   [1;-1]
\item {Number of inputs or sign vector :} Enter the number of inputs.  
\end{itemize}
</FILE>

<FILE name='PROD_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='PerteDP' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Longueur du tube : L (m)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Length of pipe
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Diamètre interne du tube : D (m)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Pipe diameter
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Coefficient de perte de charge-frottement(S.U) : lambda</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Coefficient of thermohydraluc resistance
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Altitude entrée tuyauterie : z1 (m)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Altitude of the first port (z1)
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Altitude sortie tuyauterie : z2 (m)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Altitude of the second port (z2)
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Si &gt;0, masse volumique imposée fu fluide : p_rho (kg/m3)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Fluid density
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='PotentialSensor' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='PuitsP' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Pression de la source : P0 (Pa)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Pressure of the thermohydraulic source
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Temperature de la source : T0 (K)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Temperature of the thermohydraulic source
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Enthalpie spécifique de la source : H0 (J/kg)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Specific Enthaly of the thermohydraulic source
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>1:température fixée - 2:enthalpie fixée : option_temperature</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Temperature option. 1: fixed temperature - 2: fixed enthalpy
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='QUANT_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}

  %Step   0.1
  \item {\bf Step}\\
        scalar, Quantization step \\
        Properties : Type 'vec' of size 1.

  %Quantization Type (1-4)   1
  \item {\bf Quantization Type}\\
        scalar with possible values 1,2,3 or 4 
        \begin{description}
           \item[1] Round method 
           \item[2] Truncation method 
           \item[3] Floor method 
           \item[4] Ceil method 
        \end{description}
        Properties : Type 'vec' of size 1.

\end{itemize}
</FILE>

<FILE name='RAMP' type='LATEX'>
%automatically generated, please edit
\begin{itemize}

  %Slope   0
  \item {\bf Slope} \\
        The rate of change of the generated signal.\\
        Properties : Type 'vec' of size 1.

  %Start time   0
  \item {\bf Start time} \\
        The time at which the signal begins to be generated.\\
        Properties : Type 'vec' of size 1.

  %Initial output   0
  \item {\bf Initial output} \\
        The initial value of the signal. \\
        Properties : Type 'vec' of size 1.

\end{itemize}
</FILE>

<FILE name='RAND_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
  \item {\bf flag} \\
        0 or 1.\\
        0 for uniform distribution on  [A,A+B]. \\
        1 for normal distribution.\\
        Properties : Type 'vec' of size 1.

  \item {\bf A} \\
        vector\\
        Properties : Type 'vec' of size 1.

  \item {\bf B} \\
        vector\\
        Properties : Type 'vec' of size 1.

  \item {\bf seed} \\
        scalar\\
        Seed value for a sequence of random number.\\
        Properties : Type 'vec' of size 1.
\end{itemize}
</FILE>

<FILE name='RATELIMITER' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%max slope   1
\item {max slope:}  The limit of the derivative of an increasing input signal.
%min slope   -1
\item {min slope:} The limit of the derivative of a decreasing input signal.
\end{itemize}
</FILE>

<FILE name='READAU_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}

  %Input file name   test.au
  \item {\bf Input file name} \\
        a character string defining the path of the file.\\
        Properties : Type 'str' of size 1

  %Buffer size   20
  \item {\bf Buffer size} \\
        To improve efficiency it is possible to buffer
        the input data. 
        Read on the file is only done after each  Buffer
        size call to the block.\\
        Properties : Type 'vec' of size 1

  %Swap mode 0/1   0
  \item {\bf Swap mode 0/1} \\
        With  {\bf Swap mode=1} the file is supposed to be
        coded in "little endian IEEE format" and data are swaped if
        necessary to match the IEEE format of the processor.
        If {\bf Swap mode=0} then automatic bytes swap is disabled.\\ 
        Properties : Type 'vec' of size 1

\end{itemize}
</FILE>

<FILE name='READC_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}

  %Time record selection []
  \item {\bf Time record selection} \\
        an empty matrix or a positive integer.\\
        If an integer  i  is given the  i th element of the read
        record is assumed to be the date of the output event.\\
        If empty no output event exists.\\
        Properties : Type 'vec' of size -1

  %Outputs record selection   1
  \item {\bf Outputs record selection} \\
        a vector of positive integer.\\
        $[k_1,\cdots,k_n]$ ,The  $k_i$ th element of the read record gives
        the value of  $i$th output.\\
        Properties : Type 'vec' of size -1

  %Input file name   foo
  \item {\bf Input file name} \\
        a character string defining the path of the file.\\
        Properties : Type 'str' of size 1

  %Input Format   d  
  \item {\bf Input Format} \\
        a character string defining the format to use.\\
        Properties : Type 'str' of size 1

  %Record size   1
  \item {\bf Record size} \\
        The file is supposed to be formed by a sequence of 
        data with same format. \\
        These data are organized in a sequence of record each 
        of them containing Record size data.\\
        Properties : Type 'vec' of size 1

  %Buffer size (in records)   20
  \item {\bf Buffer size} \\
        To improve efficiency it is possible to buffer the input data. 
        Read on the file is only done after each Buffer size call 
        to the block.\\
        Properties : Type 'vec' of size 1

  %Initial record index   1
  \item {\bf Initial record index} \\
        a scalar. This fixes the first record of the file to use.\\
        Properties : Type 'vec' of size 1

  %Swap mode 0/1   0
  \item {\bf Swap mode 0/1} \\
        With  {\bf Swap mode=1}  the file is supposed to be
        coded in "little endian IEEE format" and data are swaped if
        necessary to match the IEEE format of the processor.
        If {\bf Swap mode=0} then automatic bytes swap is disabled.\\
        Properties : Type 'vec' of size 1
\end{itemize}
</FILE>

<FILE name='REGISTER_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}

  %Register initial condition   0;0;0;0;0;0;0;0;0;0
  \item {\bf Register initial condition} \\
        A column vector. It contains the initial state of the register.\\
        Properties : Type 'vec' of size -1
\end{itemize}
</FILE>

<FILE name='RELATIONALOP' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%Operator: == (0), ~= (1), $<$ (2), $<$= (3), $>$= (4), $>$ (5)   2
\item {Operator: == :} Designate the relational operator used to
  compare the two inputs.  
%Use zero crossing (no: 0), (yes: 1)   0
\item {Use zero crossing :} Select to enable zero crossing detection. 
\end{itemize}
</FILE>

<FILE name='RELAY_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%number of inputs   2
\item {number of inputs:} a scalar. Number of regular and event inputs. 
%initial connected input   1
\item {initial connected input:} an integer. It must be between 1 and
  the number of inputs.  
\end{itemize}
</FILE>

<FILE name='RFILE_f' type='LATEX'>
\begin{itemize}
  %Time record selection   []
  \item {\bf Time record selection} \\
        an empty matrix or a positive integer. \\
        If an integer  $i$  is given the  $i$ th element of the read
        record is assumed to be the date of the output event.
        If empty no output event exists.\\
	Properties : Type 'vec' of size -1.

  %Outputs record selection   1
  \item {\bf Outputs record selection} \\
        a vector of positive integer.\\
        $[k_1,\cdots,k_n]$. The $k_i$ th element of the read record gives the value of  i th output.\\
	Properties : Type 'vec' of size -1.

  %Input file name   foo
  \item {\bf Input file name} \\
        a character string defining the path of the file.\\
	Properties : Type 'str' of size 1.

  %Input Format   (7(e10.3,1x))
  \item {\bf Input Format} \\
        a character string defining the Fortran format
	to use or nothing for an unformatted (binary) write. If given, the
	format must began by a left parenthesis and end by a right
	parenthesis. example: $(e10.3)$.\\
	Properties : Type 'str' of size 1.

  %Buffer size   2
  \item {\bf Buffer size} \\
        To improve efficiency it is possible to buffer
        the input data. read on the file is only done after each  {\bf Buffer size}  call to the block.\\
	Properties : Type 'vec' of size 1.
\end{itemize}
</FILE>

<FILE name='Resistor' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>R (ohm)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. Resistance
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='SAMPLEHOLD_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='SATURATION' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%Upper limit   1
\item {Upper limit:} Specify the upper bound on the input signal. When
  the input signal to the Saturation block is above this value, the
  output of the block is clipped to this value. 
%Lower limit   -1
\item {Lower limit:} Specify the lower bound on the input signal. When
  the input signal to the Saturation block is below this value, the
  output of the block is clipped to this value. 
%zero crossing (0:no, 1:yes)   1
\item {zero crossing :} Select to enable zero crossing detection.  
\end{itemize}
</FILE>

<FILE name='SAWTOOTH_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='SCALAR2VECTOR' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
  %size of output (-1: if don't know)   -1
  \item {\bf size of output} \\
        Number of component in vector output.\\
        Properties : Type 'vec' of size 1.

\end{itemize}
</FILE>

<FILE name='SCOPXY_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%color ($>$0) or mark ($<$0)   4
\item {color :} an integer. It is the color number ($>0$) or dash type
  ($<0$) used to draw the evolution of the input port signal. See
  {\bf plot2d}  for color (dash type) definitions.  
%line or mark size   1
\item {line or mark size:} an integer. 
%Output window number   1
\item {Output window number:}The number of graphic window used for the
  display. It is often good to use high values to avoid conflict with
  palettes and Super Block windows. If you have more than one scope,
  make sure they don't have the same window numbers (unless
  superposition of the curves is desired).  
%Output window position   []
\item {Output window position:} a 2 vector specifying the coordinates
  of the upper left corner of the graphic window. Answer [] for
  default window position.  
%Output window sizes   [600;400]
\item {Output window sizes:} a 2 vector specifying the width and
  height of the graphic window. Answer [] for default window
  dimensions.  
%Xmin   -15
\item {Xmin:}Minimum  values of the first input; used to
  set up the X-axis of the plot in the graphics window.  
%Xmax   15
\item {Xmax:} Maximum values of the first input; used to
  set up the X-axis of the plot in the graphics window. 
%Ymin   -15
\item {Ymin:}Minimum values of the second input; used to set up the
  Y-axis of the plot in the graphics window.  
%Ymax   15
\item {Ymax:}  Maximum values of the second input; used to set up the
  Y-axis of the plot in the graphics window. 
%Buffer size   2
\item {Buffer size:} To improve efficiency it is possible to buffer
  the input data. The drawing is only done after each  Buffer size
  call to the block.  
\end{itemize}
</FILE>

<FILE name='SELECT_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%number of inputs   2
\item {number of inputs:}a scalar. Number of regular and event inputs. 
%initial connected input   1
\item {initial connected input:} an integer. It must be between 1 and
  the number of inputs.  
\end{itemize}
</FILE>

<FILE name='SIGNUM' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%use zero\_crossing (1: yes) (0:no)   1
\item {use zero\_crossing :}Select to enable zero crossing detection. 
\end{itemize}
</FILE>

<FILE name='STEP_FUNCTION' type='LATEX'>
%automatically generated, please edit
\begin{itemize}

  %Step time   1
  \item {\bf Step time} \\
        The time, in seconds, when the output jumps from the
        Initial value parameter to the Final value parameter.\\
        Properties : Type 'vec' of size 1.

  %Initial value   0
  \item {\bf Initial value}\\
        The block output until the simulation time
        reaches the Step time parameter.\\
        Properties : Type 'vec' of size -1.

  %Final value   1
  \item {\bf Final value} \\
        The block output when the simulation time reaches
        and exceeds the Step time parameter.\\
        Properties : Type 'vec' of size -1.

\end{itemize}
</FILE>

<FILE name='SUM_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='SUPER_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='SWITCH2' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%pass first input if: u2$>$=a (0), u2$>$a (1), u2~=a (2)   0
\item {pass first input if: u2$>$=a :} Select the conditions under
  which the first input is passed. You can make the block check
  whether the control input is greater than or equal to the threshold
  value, purely greater than the threshold value, or nonzero. If the
  control input meets the condition set in this parameter, then the
  first input is passed. Otherwise, the third input is passed. 
%threshold a   0
\item {threshold a:}Assign the switch threshold that determines which
  input is passed to the output. 
%use zero crossing: yes (1), no (0)   1
\item {use zero crossing: yes :} Select to enable zero crossing detection. 
\end{itemize}
</FILE>

<FILE name='SWITCH_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%number of inputs   2
\item {number of inputs:} Specify the number of data inputs to the block.
%connected input   1
\item {connected input:} an integer. It must be between 1 and  the
  number of inputs. 
\end{itemize}
</FILE>

<FILE name='SourceP' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Pression de la source : P0 (Pa)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Pressure of the thermohydraulic source
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Temperature de la source : T0 (K)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Temperature of the thermohydraulic source
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Enthalpie spécifique de la source : H0 (J/kg)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Specific enthalpie of  the thermohydraulic source
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>1:température fixée - 2:enthalpie fixée : option_temperature</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Temperature option. 1: fixed temperature - 2: fixed enthalpy
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='TCLSS_f' type='LATEX'>
\begin{itemize}

 %A matrix   -1
 \item {\bf $A$ matrix} \\
       A square matrix. \\
       Properties : Type 'mat' of size [-1,-1].

 %B matrix   1
 \item {\bf B matrix} \\
       The $ B $ matrix,  []  if system has no input.\\
       Properties : Type 'mat' of size ["size(\%1,2)","-1"].

 %C matrix   1
 \item {\bf C matrix} \\
       The  $C$  matrix ,  []  if system has no output.\\
       Properties : Type 'mat' of size ["-1","size(\%1,2)"].

 %D matrix   0
 \item {\bf D matrix} \\
       The $ D$  matrix,  []  if system has no  D  term.\\
       Properties : Type 'mat' of size [-1,-1].

 %Initial state   0
 \item {\bf Initial state} \\
       A vector/scalar initial state of the system.\\
       Properties : Type 'vec' of size "size(\%1,2)".

\end{itemize}
</FILE>

<FILE name='TEXT_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%Text   Text
\item {Text:} a character string, Text to be displayed 
%Font number   2
\item {Font number:} a positive integer less than 6, number of
  selected font (see {\bf xset})  
%Font size   1
\item {Font size:} a positive integer, selected font size (see {\bf xset}).  
\end{itemize}
</FILE>

<FILE name='TIME_DELAY' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%Delay   1
\item {Delay:}The amount of simulation time that the input signal is
  delayed before being propagated to the output. The value must be
  nonnegative. 
%initial input   0
\item {initial input:} The output generated by the block between the
  start of the simulation and the Time delay. 
%Buffer size   1024
\item {Buffer size:}The initial memory allocation for the number of
  points to store. 
\end{itemize}
</FILE>

<FILE name='TIME_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='TrigFun' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%Function   sin
\item {Function:} The trigonometric function.
\end{itemize}
</FILE>

<FILE name='VARIABLE_DELAY' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%Max delay   1
\item {Max delay:}It defines the largest value the time delay input
  can have.The value cannot be negative.    
%initial input   0
\item {initial input:}The output generated by the block until the
  simulation time first exceeds the time delay input. 
%Buffer size   1024
\item {Buffer size:} The number of points the block can store. 
\end{itemize}
</FILE>

<FILE name='VVsourceAC' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Frequency (Hz)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Frequency of the output sinosoid voltage
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='VanneReglante' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Cvmax</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Cvmax (maximum opening of the valve)
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>p_rho</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Fluid density
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='VariableResistor' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='VoltageSensor' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='VsourceAC' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Amplitude (Volt)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Amplitude of the  output sinosoid voltage
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Frequency (Hz)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. Frequency of the output sinosoid voltage
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='WFILE_f' type='LATEX'>
\begin{itemize}
  %Input size   1
  \item {\bf Input size} \\
        a scalar. This fixes the input size.\\
        Properties : Type 'vec' of size 1.

  %Output file name   foo
  \item {\bf Output file name} \\
        a character string defining the path of the file.\\
	Properties : Type 'str' of size 1.

  %Ouput Format   (7(e10.3,1x))
  \item {\bf Output Format} \\
        a character string defining the Fortran format
	to use or nothing for an unformatted (binary) write. If given, the
	format must began by a left parenthesis and end by a right
	parenthesis. example: $(e10.3)$.\\
	Properties : Type 'str' of size 1.

  %Buffer size   2
  \item {\bf Buffer size} \\
        To improve efficiency it is possible to buffer
        the input data. Write on the file is only done after each 
        {\bf Buffer size} call to the block.\\
	Properties : Type 'vec' of size 1.
\end{itemize}
</FILE>

<FILE name='WRITEAU_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}

  %Buffer size   2
  \item {\bf Buffer size} \\
        To improve efficiency it is possible to buffer
        the input data. read on the file is only done after each  Buffer
        size call to the block.\\
        Properties : Type 'vec' of size 1

  %Swap mode 0/1   0
  \item {\bf Swap mode 0/1} \\
        With  {\bf Swap mode=1}  the file is supposed to be
        coded in "little endian IEEE format" and data are swaped if
        necessary to match the IEEE format of the processor. If  {\bf Swap
        mode=0} then automatic bytes swap is disabled.\\
        Properties : Type 'vec' of size 1

\end{itemize}
</FILE>

<FILE name='WRITEC_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}

  %Input size   1
  \item {\bf Input size} \\
        a scalar, the size of the input.\\
        Properties : Type 'vec' of size 1

  %Output file name   foo
  \item {\bf Output file name} \\
        a character string defining the output file name.\\
        Properties : Type 'str' of size 1

  %Output Format   c  
  \item {\bf Output Format} \\
        a character string defining the format to use.\\
        Properties : Type 'str' of size 1

  %Buffer size   2
  \item {\bf Buffer size} \\
        To improve efficiency it is possible to buffer the
        input data. read on the file is only done after each {\bf Buffer
        size} call to the block.\\
        Properties : Type 'vec' of size 1

  %Swap mode 0/1   0
  \item {\bf Swap mode 0/1} \\
        With {\bf Swap mode=1} the file is supposed to be
        coded in ``little endian IEEE format'' and data are swaped if
        necessary to match the IEEE format of the processor.
        If {\bf Swap mode=0} then automatic bytes swap is disabled.\\
        Properties : Type 'vec' of size 1

\end{itemize}
</FILE>

<FILE name='ZCROSS_f' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%Input size   1
\item {Input size:} a positive integer. 
\end{itemize}
</FILE>

<FILE name='buildouttb' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>outtb</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    a list of size n.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
	<PARAM_NAME>lnksz</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    That parameter gives the size of scilab object in outtb.
	  </SP>
	  <SP>
	    This matrix of integer or real numbers can have a n,2 or 2,n size.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
	<PARAM_NAME>lnktyp</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    That parameters gives the type of scilab object in outtb :
	  </SP>
	  <SP>
	    1 : double
	  </SP>
	  <SP>
	    2 : complex
	  </SP>
	  <SP>
	    3 : int32
	  </SP>
	  <SP>
	    4 : int16
	  </SP>
	  <SP>
	    5 : int8
	  </SP>
	  <SP>
	    6 : uint32
	  </SP>
	  <SP>
	    7 : uint16
	  </SP>
	  <SP>
	    8 : uint8
	  </SP>
	  <SP>
	    else : double
	  </SP>
	  <SP>
	    This matrix of integer or real numbers can have a n,1 or 1,n size.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='c_block' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%input ports sizes   1
\item {input ports sizes:}  Number of regular input ports
%output port sizes   1
\item {output port sizes:}  Number of regular output ports.
%System parameters vector   []
\item {System parameters vector:}  Number of parameters that this
  function accepts. 
%function name   toto
\item {function name:}  Name of the function to be generated
\end{itemize}
</FILE>

<FILE name='curblock' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>blk</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    the current block number in the compiled structure.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='fortran_block' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%input ports sizes   1
\item {input ports sizes:} Number of regular input ports.
%output port sizes   1
\item {output port sizes:}  Number of regular output ports.
%System parameters vector   []
\item {System parameters vector:} Number of parameters that this
  function accepts. 
%function name   forty
\item {function name:} Name of the function to be generated
\end{itemize}
</FILE>

<FILE name='freq_div' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%Phase (0 to division factor -1)   0
\item {Phase :} positive scalar.
%Division factor   3
\item {Division factor:} an integer greater than 1.
\end{itemize}
</FILE>

<FILE name='generic_block2' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%simulation function   sinblk
\item {simulation function:} Name of the function to be loaded.
%function type (0,1,2,..)   1
\item {function type :} Type of the computational function supported
  by  scicos.
%input ports sizes   1
\item {input ports sizes:} Number of regular input ports. 
%output port sizes   1
\item {output port sizes:} Number of regular input ports. 
%input event ports sizes   []
\item {input event ports sizes:}a vector of ones, size of event input
ports. The size of the vector gives the number of event input ports.
%output events ports sizes   []
\item {output events ports sizes:}a vector of ones, size of event
  output ports. The size of the vector gives the number of of event
  output ports. 
%initial continuous state   []
\item {initial continuous state:} A column vector of Initial State
  Conditions.  
%initial discrete state   []
\item {initial discrete state:}  A column vector Initial discrete  Conditions.
%Real parameters vector   []
\item {Real parameters vector:}  column vector. Any parameters used in the block can be defined here as a column vector.    
%Integer parameters vector   []
\item {Integer parameters vector:}  column vector. Any integer
  parameters used in the block can be defined here as a column
  vector. 
%number of modes   0
\item {number of modes:} Number of Right hand side functions in the
  system. 
%number of zero\_corssings   0
\item {number of zero\_corssings:} No. of zero-crossings
%initial firing vector ($<$0 for no firing)   []
\item {initial firing vector :}vector. Size of this vector corresponds
  to the number of event outputs. The value of the i-th entry
  specifies the time of the preprogrammed event firing on the i-th
  output event port. If less than zero, no event is preprogrammed. 
%direct feedthrough (y or n)   y
\item {direct feedthrough :} character "y" or "n", specifies if block
  has a direct input to output feedthrough. 
%time dependence (y or n)   n
\item {time dependence :}Time dependance : character "y" or "n",
  specifies if block output depends explicitly on time. 
\end{itemize}
</FILE>

<FILE name='getscicosvars' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>str,str1,str2,...</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    That parameter can be a string or a matrix of string. The following entries are allowed :
	  </SP>
	  <SP>
	    "x" :
	  </SP>
	  <SP>
	    "nx" :
	  </SP>
	  <SP>
	    "xptr" :
	  </SP>
	  <SP>
	    "zcptr" :
	  </SP>
	  <SP>
	    "z" :
	  </SP>
	  <SP>
	    "nz" :
	  </SP>
	  <SP>
	    "zptr" :
	  </SP>
	  <SP>
	    "noz" :
	  </SP>
	  <SP>
	    "oz" :
	  </SP>
	  <SP>
	    "ozsz" :
	  </SP>
	  <SP>
	    "oztyp" :
	  </SP>
	  <SP>
	    "ozptr" :
	  </SP>
	  <SP>
	    "rpar" :
	  </SP>
	  <SP>
	    "rpptr" :
	  </SP>
	  <SP>
	    "ipar" :
	  </SP>
	  <SP>
	    "ipptr" :
	  </SP>
	  <SP>
	    "opar" :
	  </SP>
	  <SP>
	    "oparsz" :
	  </SP>
	  <SP>
	    "opartyp" :
	  </SP>
	  <SP>
	    "opptr" :
	  </SP>
	  <SP>
	    "outtb" :
	  </SP>
	  <SP>
	    "inpptr" :
	  </SP>
	  <SP>
	    "outptr" :
	  </SP>
	  <SP>
	    "inplnk" :
	  </SP>
	  <SP>
	    "outlnk" :
	  </SP>
	  <SP>
	    "subs" :
	  </SP>
	  <SP>
	    "tevts" :
	  </SP>
	  <SP>
	    "evtspt" :
	  </SP>
	  <SP>
	    "pointi" :
	  </SP>
	  <SP>
	    "iord" :
	  </SP>
	  <SP>
	    "oord" :
	  </SP>
	  <SP>
	    "zord" :
	  </SP>
	  <SP>
	    "funtyp" :
	  </SP>
	  <SP>
	    "ztyp" :
	  </SP>
	  <SP>
	    "cord" :
	  </SP>
	  <SP>
	    "ordclk" :
	  </SP>
	  <SP>
	    "clkptr" :
	  </SP>
	  <SP>
	    "ordptr" :
	  </SP>
	  <SP>
	    "critev" :
	  </SP>
	  <SP>
	    "mod" :
	  </SP>
	  <SP>
	    "nmod" :
	  </SP>
	  <SP>
	    "iz" :
	  </SP>
	  <SP>
	    "izptr" :
	  </SP>
	  <SP>
	    "nblk" :
	  </SP>
	  <SP>
	    "outtbptr" :
	  </SP>
	  <SP>
	    "outtbpsz" :
	  </SP>
	  <SP>
	    "outtbtyp" :
	  </SP>
	  <SP>
	    "nlnk" :
	  </SP>
	  <SP>
	    "ncord" :
	  </SP>
	  <SP>
	    "nordptr" :
	  </SP>
	  <SP>
	    "iwa" :
	  </SP>
	  <SP>
	    "blocks" :
	  </SP>
	  <SP>
	    "ng" :
	  </SP>
	  <SP>
	    "g" :
	  </SP>
	  <SP>
	    "t0" :
	  </SP>
	  <SP>
	    "tf" :
	  </SP>
	  <SP>
	    "Atol" :
	  </SP>
	  <SP>
	    "rtol" :
	  </SP>
	  <SP>
	    "ttol" :
	  </SP>
	  <SP>
	    "deltat" :
	  </SP>
	  <SP>
	    "hmax" :
	  </SP>
	  <SP>
	    "nelem" :
	  </SP>
	  <SP>
	    "outtb_elem" :
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>

      <PARAM_ITEM>
	<PARAM_NAME>myvar</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
            That output parameter can be an int32 matrix, a double matrix or a Tlist. This is given by the input parameter.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='lincos' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>scs_m</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: a Scicos data structure
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>x0</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: column vector. Continuous state around which linearization to be done (default 0)
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>u0</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: column vector. Input around which linearization to be done (default 0)
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>param</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: param: list with two elements (default list(1.d-6,0))
param(1): scalar. Perturbation level for linearization; the following variation is used
del([x;u])_i = param(1)+param(1)*1d-4*abs([x;u])_i.
param(2): scalar. Time t.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>sys</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: state-space system
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>
</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='scicos' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>toto</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: either a Scicos diagram structure (scs_m) or a  character
string containing the path of the diagram file (.cos or .cosf
extension).  If no input argument is used, an empty diagram is
opened (default name Untitled).
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>scs_m</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Scicos diagram structure after edition.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>
</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='scicos_debug' type='XML'>
  <PARAM>
  <PARAM_INDENT>
    <PARAM_ITEM>
      <PARAM_NAME>level</PARAM_NAME>
      <PARAM_DESCRIPTION>
	<SP>
	  set/get the current level of the scicos simulation debugging.
	</SP>
	<PARAM_INDENT>
	  <PARAM_ITEM>
	    <PARAM_NAME>0</PARAM_NAME>
	    <PARAM_DESCRIPTION>
	      <SP>

	      </SP>
	    </PARAM_DESCRIPTION>
	  </PARAM_ITEM>
	</PARAM_INDENT>
	<PARAM_INDENT>
	  <PARAM_ITEM>
	    <PARAM_NAME>1</PARAM_NAME>
	    <PARAM_DESCRIPTION>
	      <SP>

	      </SP>
	    </PARAM_DESCRIPTION>
	  </PARAM_ITEM>
	</PARAM_INDENT>
	<PARAM_INDENT>
	  <PARAM_ITEM>
	    <PARAM_NAME>2</PARAM_NAME>
	    <PARAM_DESCRIPTION>
	      <SP>

	      </SP>
	    </PARAM_DESCRIPTION>
	  </PARAM_ITEM>
	</PARAM_INDENT>
	<PARAM_INDENT>
	  <PARAM_ITEM>
	    <PARAM_NAME>3</PARAM_NAME>
	    <PARAM_DESCRIPTION>
	      <SP>

	      </SP>
	    </PARAM_DESCRIPTION>
	  </PARAM_ITEM>
	</PARAM_INDENT>
      </PARAM_DESCRIPTION>
    </PARAM_ITEM>
  </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='scicos_simulate' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>scs_m</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>: scicos diagram (obtained by "load file.cos"). Note that the
version of file.cos must be the current version. If not, load into
scicos and save.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Info</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>: a list. It must be list() at the first call, then use output
Info as input Info for the next calls. Info contains compilation
and simulation information and is used to avoid recompilation when
not needed.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>%scicos_context</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>:  a scilab struct containing values of symbolic variables used
in the context and Scicos blocks. This is often used to change a
parameter in the diagram context. In that case, make sure that in
the diagram context the variable is defined such that it can be
modified. Say a variable "a" is to be defined in the context
having value 1, and later in batch mode, we want to change the
value of "a". In that case, in the context of the diagram place:
if ~exists('a') then a=1,end If you want then to run the
simulation in batch mode using the value a=2, set:
%scicos_context.a=2
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>flag</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: string. If it equals 'nw' (no window), then blocks using
graphical windows are not executed. Note that the list of such
blocks must be updated as new blocks are added.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Info</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: contains compilation and simulation information and is used
to avoid recompilation when not needed. Normally it should not be modified.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>
</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='scicos_time' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>t</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    that is the current simulated time returned in real number.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='scicosim' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>state</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Scilab tlist containing initial state. Usually generated by
Scicos Compile. After loading a compiled .cos file, it can be
found in %cpr.state.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>tcur</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: starting time of simulation. At the beginning it must be zero.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>tf</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: final simulation time.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>sim</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Scilab tlist containing compilation results. Usually generated by
Scicos Compile. After loading a compiled .cos file, it can be
found in %cpr.sim.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>str</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: 'start' , 'run' or 'finish'. Function must be first called
with 'start', then with 'run' one or more times, and finally with 'finish'.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>tol</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
:  vector [atol,rtol,ttol,deltat,realtimescale,solver,hmax]
where atol, rtol are respectively the absolute and relative
tolerances for ode or dae solver, ttol is the precision on
event dates (must be very small). deltat is maximum integration interval for each call
to ode solver (sometimes needed to force restaring the call to
solver). raltimescale is the correspondance between simulation
time and real time (0 means no slowing down). solver is the choice
of solver (0: lsodar, 100: daskr). hmax: max step size used by
solver. Default: [0.0001,1.000E-06,1.000E-10,100001,0,0]

</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>state</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: state after simulation
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>t</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: final reached time. Usually tf but not always.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>
</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='scifunc_block' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%input ports sizes   1
\item {input ports sizes:} a scalar. Number of regular input ports 
%output port sizes   1
\item {output port sizes:} a scalar. Number of regular output ports 
%input event ports sizes   []
\item {input event ports sizes:} a scalar. Number of input event ports 
%output events ports sizes   []
\item {output events ports sizes:} a scalar. Number of output event ports 
%initial continuous state   []
\item {initial continuous state:}a column vector. 
%initial discrete state   []
\item {initial discrete state:}  a column vector. 
%System parameters vector   []
\item {System parameters vector:}a string: c or d ({\bf CBB} or {\bf
  DBB}, other  types are not supported).   
%initial firing vector ($<$0 for no firing)   []
\item {initial firing vector :}vector. Size of this vector corresponds
  to the number of event outputs. The value of the i-th entry
  specifies the time of the preprogrammed event firing on the i-th
  output event port. If less than zero, no event is preprogrammed.  
%is block always active (0:no, 1:yes)   0
\item {is block always active :}other dialogues are opened
  consecutively where used may input Scilab code associated with the
  computations needed (block initialization, outputs, continuous and
  discrete state, output events date, block ending)
 \end{itemize}
</FILE>

<FILE name='steadycos' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>scs_m</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: a Scicos data structure
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>X</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: column vector. Continuous state. Can be set to [] if zero.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>U</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: column vector. Input. Can be set to [] if zero.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Y</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: column vector. Output. Can be set to [] if zero.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Indx</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: index of entries of X that are not fixed. If all can vary, set to 1:$
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Indu</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: index of entries of U that are not fixed. If all can vary, set to 1:$
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Indy</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: index of entries of Y that are not fixed. If all can vary, set to 1:$
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Indxp</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: index of entries of XP (derivative of x) that need not be
zero. If all can vary, set to 1:$. Default [].
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>param</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: list with two elements (default list(1.d-6,0)). param(1):
scalar. Perturbation level for linearization; the following
variation is used del([x;u])_i =
param(1)+param(1)*1d-4*abs([x;u])_i.
param(2): scalar. Time t.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>X</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: steady state X
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>U</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: stationary input U
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Y</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: output corresponding to steady state found
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>XP</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: derivative of the state corresponding to steady state found
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>
</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='var2vec' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>var</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    Input parameter. Can be any types of scilab objects.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
	<PARAM_NAME>vec</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    Output parameter. A vector of real numbers.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='vec2var' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>vec</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    Input parameter. A vector of real numbers.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
	<PARAM_NAME>var</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    Output parameter. Can be any types of scilab objects.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>


<FILE name='CUMSUM' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(1=real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the type of the output. It support only the two types double (1) and complex (2). If we input another entry in this label scicos will print the message "Datatype is not supported".
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Sum along (0=the first non singleton dimension  1=Rows  2=Columns)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. Indicate whether to sum across the rows, the columns or the first non singleton dimension.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='EXTRACT' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype (1=real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1.It indicates the type of the output. It support only the two types double (1) and complex (2). If we input another entry in this label scicos will print the message "Datatype is not supported".
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Lines to extract</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'mat' of size [1,-1]. It indicates the numbers of the lines to extract.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Columns to extract</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'mat' of size [1,-1]. It indicates the numbers of the columns to extract.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='EXTTRI' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(1=real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the type of the output. It support only the two types double (1) and complex (2). If we input another entry in this label scicos will print the message "Datatype is not supported".
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>extraction type (1=lower  2=upper  3=diagonal)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the form of the output matrix. It can be an upper triangle, a lower triangle or a diagonal matrix.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MATBKSL' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype (1=real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the type of the output. It support only the two types double (1) and complex (2). If we input another entry in this label scicos will print the message "Datatype is not supported".
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MATCATH' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(1=real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the type of the output. It support only the two types double (1) and complex (2). If we input another entry in this label scicos will print the message "Datatype is not supported".
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>number of columns of each matrix</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'mat' of size [-1,1]. It indicates the number of columns of the inputs matrices.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MATCATV' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(1=real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the type of the output. It support only the two types double (1) and complex (2). If we input another entry in this label scicos will print the message "Datatype is not supported".
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>number of line of each matrix</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'mat' of size [-1,1]. It indicates the number of rows of the inputs matrices.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MATDET' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(1=real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the type of the output. It support only the two types double (1) and complex (2). If we input another entry in this label scicos will print the message "Datatype is not supported".
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MATDIAG' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype (1=real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the type of the output. It support only the two types double (1) and complex (2). If we input another entry in this label scicos will print the message "Datatype is not supported".
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MATDIV' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(1=real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the type of the output. It support only the two types double (1) and complex (2). If we input another entry in this label scicos will print the message "Datatype is not supported".
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MATEIG' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(1=real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the type of the output. It support only the two types double (1) and complex (2). If we input another entry in this label scicos will print the message "Datatype is not supported".
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>decomposition type (1=eig values  2=eig values+eig vectors</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. To select the form of the output.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MATEXPM' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(1=real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1.It indicates the type of the output. It support only the two types double (1) and complex (2). If we input another entry in this label scicos will print the message "Datatype is not supported".
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MATINV' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(1=real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. The parameter description 1.It indicates the type of the output. It support only the two types double (1) and complex (2). If we input another entry in this label scicos will print the message "Datatype is not supported".
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MATLU' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(1=real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the type of the output. It support only the two types double (1) and complex (2). If we input another entry in this label scicos will print the message "Datatype is not supported".
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MATMAGPHI' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>decomposition type (1=Complex2MAG&amp;PHI 2=MAG&amp;PHI2Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the rule of the conversion.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MATMUL' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>Datatype(1=real double 2=Complex)</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    It indicates the type of the output. It support only the two types double (1) and complex (2). If we input another entry in this label scicos will print the message "Datatype is not supported".
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size 1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
	<PARAM_NAME>Multiplication rule (1= * 2= .* )</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    ?
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size 1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='MATPINV' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(1=real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the type of the output. It support only the two types double (1) and complex (2). If we input another entry in this label scicos will print the message "Datatype is not supported".
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MATRESH' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(1=real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1.It indicates the type of the output. It support only the two types double (1) and complex (2). If we input another entry in this label scicos will print the message "Datatype is not supported".
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>input size</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. It indicates the size of the input matrix.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>output size desired</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. It indicates the desired output's size.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MATSING' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(1=real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1.  It indicates the type of the output. It support only the two types double (1) and complex (2). If we input another entry in this label scicos will print the message "Datatype is not supported".
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>decomposition type (1=singular values  2=sing values+matrix U &amp; V)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the form of the output. When it is set to one, we have a unique vector output (singular values). When it is set to two we have three same sizes matrices(U,S,V).
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='ABSBLK_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='AFFICH_m' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Input Size</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'mat' of size [1,2].
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Font number</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Font size</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Color</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 4.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Total number of digits</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 5.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Number of rational part digits</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 6.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Block inherits (1) or not (0)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 7.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='BIGSOM_f' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>Inputs ports signs/gain</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    Set sign and a gain for each inputs.
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size -1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='CANIMXY' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Number of Curves</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>color (&lt;0) or mark (&gt;0)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>line or mark size</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Output window number (-1 for automatic)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 4.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Output window position</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 5.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Output window sizes</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 6.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Xmin</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 7.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Xmax</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 8.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Ymin</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 9.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Ymax</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 10.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Buffer size</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 11.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='CANIMXY3D' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Number of curves</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>color (&lt;0) or mark (&gt;0)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>line or mark size</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Output window number (-1 for automatic)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 4.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Output window position</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 5.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Output window sizes</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 6.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Xmin and Xmax</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 7.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Ymin and Ymax</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 8.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Zmin and Zmax</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 9.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Alpha and Theta</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 10.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Buffer size</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 11.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='CEVENTSCOPE' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Number of event inputs</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>colors c (&gt;0) or mark (&lt;0)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Output window number (-1 for automatic)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Output window position</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 4.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Output window sizes</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 5.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Refresh period</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 6.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='CFSCOPE' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Color (&gt;0) or mark (&lt;0) vector (8 entries)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 8.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Output window number (-1 for automatic)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Output window position</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Output window sizes</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 4.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Ymin</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 5.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Ymax</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 6.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Refresh period</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 7.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Buffer size</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 8.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Links to view</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 9.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='CLKIN_f' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>Port number</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    an integer defining the port number.
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size 1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='CLKOUT_f' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>Port number</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    an integer defining the port number.
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size 1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='CLKSOM_f' type='XML'>
<PARAM>

</PARAM>
</FILE>

<FILE name='CLR' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
  %Numerator (s)   1
  \item {\bf Numerator} \\
        This parameter sets the numerator of the transfert function.\\
        This must be a polynomial in s.\\
        Properties : Type 'pol' of size 1.

  %Denominator (s)   1+s
  \item {\bf Denominator} \\
        This parameter sets the denominator of the transfert function.\\
        This must be a polynomial in s.\\
        Properties : Type 'pol' of size 1.

\end{itemize}
</FILE>

<FILE name='CLSS' type='LATEX'>
\begin{itemize}

 %A matrix   -1
 \item {\bf $A$ matrix} \\
       A square matrix. \\
       Properties : Type 'mat' of size [-1,-1].

 %B matrix   1
 \item {\bf B matrix} \\
       The $ B $ matrix,  []  if system has no input.\\
       Properties : Type 'mat' of size ["size(\%1,2)","-1"].

 %C matrix   1
 \item {\bf C matrix} \\
       The  $C$  matrix ,  []  if system has no output.\\
       Properties : Type 'mat' of size ["-1","size(\%1,2)"].

 %D matrix   0
 \item {\bf D matrix} \\
       The $ D$  matrix,  []  if system has no  D  term.\\
       Properties : Type 'mat' of size [-1,-1].

 %Initial state   0
 \item {\bf Initial state} \\
       A vector/scalar initial state of the system.\\
       Properties : Type 'vec' of size "size(\%1,2)".

\end{itemize}
</FILE>

<FILE name='CMAT3D' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Bounds Vector X (-1 for standard)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
If you let -1 the x ticks would be between 0 and 1 else you can put your own vector.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Bounds Vector Y (-1 for standard)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
If you let -1 the x ticks would be between 0 and 1 else you can put your own vector.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>ColorMap</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The colormap is a range color linked to the window output of the scope. You can put a jetcolormap or hotcolormap or graycolormap or your own (see colormap help).
</SP>
<SP>
Properties : Must be a mx3 matrix and m >= 3
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Zmin</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
Minimum value in Z values
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Zmax</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
Maximum values in Z values
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='CMATVIEW' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>ColorMap</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The colormap is a range color linked to the window output of the scope. You can put a jetcolormap or hotcolormap or graycolormap or your own (see colormap help).
</SP>
<SP>
Properties : Must be a mx3 matrix and m >= 3
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Minimum level range</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The minimum level range is the minimum value who comes in the regular input port. It would be linked to the 'cold value' of the colormap.
</SP>
<SP>
Properties : A scalar
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Maximum level range</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The maximum level range is the maximum value who comes in the regular input port. It would be linked to the 'hot value' of the colormap.
</SP>
<SP>
Properties : A scalar
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='CONST' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>Constant</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    The constant value.
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size -1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='CONST_m' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>Constant</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    A matrix of any type.
	  </SP>
	  <SP>
            The size of the matrix gives the size of the regular output port.
	  </SP>
	  <SP> 
           The constant(i,j) value is the component(i,j) value of the
           output port.
	  </SP>
	  <SP>
	    From this value the block herits its data type.
	  </SP>
	  <SP>
	    Properties : Type 'mat' of size [-1,-2].
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='COSBLK_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='CSCOPXY' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Number of Curves</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>color (&gt;0) or mark (&lt;0)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>line or mark size</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Output window number (-1 for automatic)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 4.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Output window position</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 5.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Output window sizes</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 6.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Xmin</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 7.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Xmax</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 8.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Ymin</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 9.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Ymax</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 10.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Buffer size</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 11.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='CSCOPXY3D' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Number of curves</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>color (&gt;0) or mark (&lt;0)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Line or Mark Size</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Output window number (-1 for automatic)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 4.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Output window position</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 5.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Output window sizes</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 6.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Xmin and Xmax</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 7.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Ymin and Ymax</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 8.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Zmin and Zmax</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 9.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Alpha and Theta</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 10.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Buffer size</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 11.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='DELAYV_f' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Number of inputs</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Register initial condition</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Max delay</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='DELAY_f' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>Discretisation time step</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    Set the time period of the integrated clock.
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size 1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
	<PARAM_NAME>Register initial state</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    Set the length and the initial conditions of the register.
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size -1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='DEMUX_f' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>number of output ports or vector of sizes</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='DIFF_f' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Initial state</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Initial Derivative</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='DLR' type='LATEX'>
\begin{itemize}
  \item {\bf Numerator (z)} \\
        This parameter sets the numerator of the transfert function.\\
        This must be a polynomial in {\bf z}.\\
        Properties : Type 'pol' of size 1.

  \item {\bf Denominator (z)} \\
        This parameter sets the denominator of the transfert function.\\
        This must be a polynomial in {\bf z}.\\
        Properties : Type 'pol' of size 1.
\end{itemize}
</FILE>

<FILE name='DLRADAPT_f' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Vector of p mesh points</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Numerator roots (one line for each mesh)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'mat' of size [-1,-1].
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Denominator roots (one line for each mesh)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'mat' of size [&quot;size(%1,''*'')&quot;,&quot;-1&quot;].
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Vector of gain at mesh points</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 4.
</SP>
<SP>
Properties : Type 'vec' of size &quot;size(%1,''*'')&quot;.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>past inputs (Num degree values)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 5.
</SP>
<SP>
Properties : Type 'vec' of size &quot;size(%2,2)&quot;.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>past outputs (Den degree values)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 6.
</SP>
<SP>
Properties : Type 'vec' of size &quot;size(%3,2)&quot;.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='DLSS' type='LATEX'>
\begin{itemize}

 %A matrix   -1
 \item {\bf $A$ matrix} \\
       A square matrix. \\
       Properties : Type 'mat' of size [-1,-1].

 %B matrix   1
 \item {\bf B matrix} \\
       The $ B $ matrix,  []  if system has no input.\\
       Properties : Type 'mat' of size ["size(\%1,2)","-1"].

 %C matrix   1
 \item {\bf C matrix} \\
       The  $C$  matrix ,  []  if system has no output.\\
       Properties : Type 'mat' of size ["-1","size(\%1,2)"].

 %D matrix   0
 \item {\bf D matrix} \\
       The $ D$  matrix,  []  if system has no  D  term.\\
       Properties : Type 'mat' of size [-1,-1].

 %Initial state   0
 \item {\bf Initial state} \\
       A vector/scalar initial state of the system.\\
       Properties : Type 'vec' of size "size(\%1,2)".

\end{itemize}
</FILE>

<FILE name='FSV_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='GAINBLK_f' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>Gain</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    This parameter defined the square matrix A.
	  </SP>
	  <SP>
	    Properties : Type 'mat' of size [-1,-1].
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='GAIN_f' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>Gain</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    This parameter defined the square matrix A.
	  </SP>
	  <SP>
	    Properties : Type 'mat' of size [-1,-1].
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='GENERAL_f' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Input size</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Number of event output</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='INTEGRAL_f' type='LATEX'>
\begin{itemize}
  %Initial Condition   0
  \item {\bf Initial Condition} \\
         A scalar that gives the initial condition.\\
         Properties : Type 'vec' of size 1.
\end{itemize}
</FILE>

<FILE name='INTEGRAL_m' type='LATEX'>
\begin{itemize}
  %Initial Condition   0
  \item {\bf Initial Condition} \\
         A vector/scalar initial conditions.\\
         With that parameter, one can define the datatype of
         the input/output. It can be a real or a complex type.\\
         Properties : Type 'mat' of size [-1,-1].

  %With re-intialization (1:yes, 0:no)   0
  \item {\bf With re-intialization} \\
        To reset its state to the  specified
        initial condition based on an external signal select {\bf 1}.\\
        Properties : Type 'vec' of size 1.

  %With saturation (1:yes, 0:no)   0
  \item {\bf With saturation} \\
        If selected, limits the states to a value
        between the Lower saturation limit and Upper saturation limit
        parameters.\\
        Properties : Type 'vec' of size 1.

  %Upper limit   1
  \item {\bf Upper limit} \\
        The upper limit for the integral.\\
        Properties : Type 'mat' of size [-1,-1].

  %Lower limit   -1
  \item {\bf Lower limit} \\
        The lower limit for the integral.\\
        Properties : Type 'mat' of size [-1,-1].

\end{itemize}
</FILE>

<FILE name='INVBLK' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='ISELECT_m' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(1= real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>number of outputs</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>initial connected output</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MATSUM' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(1=real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the type of the output. It support only the two types double (1) and complex (2). If we input another entry in this label scicos will print the message "Datatype is not supported".
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Sum along (0=all 1=lines  2=Columns)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. Indicates the used rule to sum. For more information see the description part.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MATTRAN' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>Datatype(1=real double  2=Complex)</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    It indicates the data type of the output. It support only the two types double (1) and complex (2). If we input another entry in this label scicos will print the message "Datatype is not supported".
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size 1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='MATZCONJ' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MATZREIM' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>decomposition type (1=Complex2Real&amp;Imag 2=Real&amp;Imag2Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
Indicates the type to use for the decomposition. see the description part for more information.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MAX_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MCLOCK_f' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>basic period (1/f)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>multiply by (n)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MEMORY_f' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>initial condition</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Inherit (1: no, 0: yes)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MFCLCK_f' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>basic period (1/f)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>multiply by (n)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MIN_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MOTOR' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='MUX_f' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>number of input ports or vector of sizes</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='NPN' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Forward beta</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Reverse beta</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Transport saturation current</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Early voltage (inverse), 1/Volt</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 4.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Ideal forward transit time</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 5.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Ideal reverse transit time</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 6.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Collector-substrat(ground) cap.</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 7.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Base-emitter zero bias depletion cap.</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 8.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Base-coll. zero bias depletion cap.</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 9.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Base-emitter diffusion voltage</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 10.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Base-emitter gradation exponent</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 11.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Base-collector diffusion voltage</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 12.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Base-collector gradation exponent</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 13.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Base-collector conductance</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 14.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Base-emitter conductance</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 15.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Voltage equivalent of temperature</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 16.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>if x&gt; EMinMax, the exp(x) function is linearized</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 17.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='PNP' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Forward beta</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Reverse beta</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Transport saturation current</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Early voltage (inverse), 1/Volt</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 4.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Ideal forward transit time</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 5.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Ideal reverse transit time</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 6.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Collector-substrat(ground) cap.</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 7.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Base-emitter zero bias depletion cap.</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 8.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Base-coll. zero bias depletion cap.</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 9.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Base-emitter diffusion voltage</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 10.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Base-emitter gradation exponent</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 11.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Base-collector diffusion voltage</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 12.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Base-collector gradation exponent</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 13.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Base-collector conductance</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 14.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Base-emitter conductance</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 15.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Voltage equivalent of temperature</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 16.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>if x&gt; EMinMax, the exp(x) function is linearized</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 17.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='REGISTER' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Register initial condition</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Datatype</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
This block support all datatypes besides complex.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='RFILE' type='XML'>
\begin{itemize}
  %Time record selection   []
  \item {\bf Time record selection} \\
        an empty matrix or a positive integer. \\
        If an integer  $i$  is given the  $i$ th element of the read
        record is assumed to be the date of the output event.
        If empty no output event exists.\\
	Properties : Type 'vec' of size -1.

  %Outputs record selection   1
  \item {\bf Outputs record selection} \\
        a vector of positive integer.\\
        $[k_1,\cdots,k_n]$. The $k_i$ th element of the read record gives the value of  i th output.\\
	Properties : Type 'vec' of size -1.

  %Input file name   foo
  \item {\bf Input file name} \\
        a character string defining the path of the file.\\
	Properties : Type 'str' of size 1.

  %Input Format   (7(e10.3,1x))
  \item {\bf Input Format} \\
        a character string defining the Fortran format
	to use or nothing for an unformatted (binary) write. If given, the
	format must began by a left parenthesis and end by a right
	parenthesis. example: $(e10.3)$.\\
	Properties : Type 'str' of size 1.

  %Buffer size   2
  \item {\bf Buffer size} \\
        To improve efficiency it is possible to buffer
        the input data. read on the file is only done after each  {\bf Buffer size}  call to the block.\\
	Properties : Type 'vec' of size 1.
\end{itemize}
</FILE>

<FILE name='RICC' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Type (1=Cont  2=Disc)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
For continuous time signal set this parameter to 1. For discrete input time set it to 2.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Model(1=Schr  2=sign(cont) inv(disc))</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
To use the Shur method in computation set this parameter to 1. To use matrix sign function approach in continuous case or the inverse free spectral decomposition method in discrete case set this parameter to 2.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='SAMPHOLD' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='SAT_f' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Min</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Max</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Slope</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='SELECT_m' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(1= real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>number of inputs</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>initial connected input</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='SINBLK_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='SLIDER_f' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Min range</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Max range</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Type</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Color</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 4.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Block inherits (1) or not (0)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 5.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='STEP' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Step time</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Initial value</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Final value</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='SUBMAT' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype (1=real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
Type of the output matrix. It can be double or complex.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Starting Row Index</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The first row of the submatrix.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Ending Row Index</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The last row of the Submatrix.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Starting Column Index</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The first column of the submatrix.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Ending Column Index</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The last row of the submatrix.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Input Dimension</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The Matrix input dimensions.
</SP>
<SP>
Properties : Type 'vec' of size 2.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='SWITCH2_m' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype (1=real double  2=complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>pass first input if: u2&gt;=a (0), u2&gt;a (1), u2~=a (2)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>threshold a</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>use zero crossing: yes (1), no (0)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 4.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='SineVoltage' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Amplitude (Volt)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>phase (rad)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Frequency (Hz)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Voltageoffset (V)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 4.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Timeoffset (s)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 5.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='TANBLK_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='TCLSS' type='LATEX'>
\begin{itemize}

 %A matrix   -1
 \item {\bf $A$ matrix} \\
       A square matrix. \\
       Properties : Type 'mat' of size [-1,-1].

 %B matrix   1
 \item {\bf B matrix} \\
       The $ B $ matrix,  []  if system has no input.\\
       Properties : Type 'mat' of size ["size(\%1,2)","-1"].

 %C matrix   1
 \item {\bf C matrix} \\
       The  $C$  matrix ,  []  if system has no output.\\
       Properties : Type 'mat' of size ["-1","size(\%1,2)"].

 %D matrix   0
 \item {\bf D matrix} \\
       The $ D$  matrix,  []  if system has no  D  term.\\
       Properties : Type 'mat' of size [-1,-1].

 %Initial state   0
 \item {\bf Initial state} \\
       A vector/scalar initial state of the system.\\
       Properties : Type 'vec' of size "size(\%1,2)".

\end{itemize}
</FILE>

<FILE name='TRASH_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='WFILE' type='LATEX'>
\begin{itemize}
  %Input size   1
  \item {\bf Input size} \\
        a scalar. This fixes the input size.\\
        Properties : Type 'vec' of size 1.

  %Output file name   foo
  \item {\bf Output file name} \\
        a character string defining the path of the file.\\
	Properties : Type 'str' of size 1.

  %Ouput Format   (7(e10.3,1x))
  \item {\bf Output Format} \\
        a character string defining the Fortran format
	to use or nothing for an unformatted (binary) write. If given, the
	format must began by a left parenthesis and end by a right
	parenthesis. example: $(e10.3)$.\\
	Properties : Type 'str' of size 1.

  %Buffer size   2
  \item {\bf Buffer size} \\
        To improve efficiency it is possible to buffer
        the input data. Write on the file is only done after each 
        {\bf Buffer size} call to the block.\\
	Properties : Type 'vec' of size 1.
\end{itemize}
</FILE>

<FILE name='generic_block' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>simulation function</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'str' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>function type (0,1,2,..)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>input ports sizes</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>output port sizes</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 4.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>input event ports sizes</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 5.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>output events ports sizes</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 6.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>initial continuous state</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 7.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>initial discrete state</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 8.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Real parameters vector</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 9.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Integer parameters vector</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 10.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>initial firing vector (&lt;0 for no firing)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 11.
</SP>
<SP>
Properties : Type 'vec' of size &quot;sum(%6)&quot;.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>direct feedthrough (y or n)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 12.
</SP>
<SP>
Properties : Type 'str' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>time dependence (y or n)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 13.
</SP>
<SP>
Properties : Type 'str' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='DOLLAR' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>initial condition</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    The output of the simulation for the first sampling period, during which the output of the Unit Delay block is otherwise undefined.  .
	  </SP>
	  <SP>
	    Properties : Type 'mat' of size [-1,-2].
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
	<PARAM_NAME>Inherit (no:0, yes:1)</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    When "Inherit" is yes, the block inherit its event input.
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size -1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='DOLLAR_m' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>initial condition</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    The output of the simulation for the first sampling period, during which the output of the Unit Delay block is otherwise undefined.  .
	  </SP>
	  <SP>
	    Properties : Type 'mat' of size [-1,-2].
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
	<PARAM_NAME>Inherit (no:0, yes:1)</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    When "Inherit" is yes, the block inherit its event input.
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size -1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='BITCLEAR' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(3=int32 4=int16 5=int8 ...)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1.It indicates the type of the input/output data. It support all the integer datatype, number must be between 3 and 8.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>index of bit (0 is leat significant)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicate the index of the bit to clear. When the type is int32 or uint32 the number must be positif and less than 32.
when the type is int16 or uint16 the number must be positif and less than 16
when the type is int8 or uint8 the number must be positif and less than 8
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='BITSET' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(3=int32 4=int16 5=int8 ...)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the type of the input/output data. It support all the integer datatype, number must be between 3 and 8.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>index of bit (0 is leat significant)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicate the index of the bit to clear. When the type is int32 or uint32 the number must be positif and less than 32.
when the type is int16 or uint16 the number must be positif and less than 16
when the type is int8 or uint8 the number must be positif and less than 8.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='CONVERT' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>input type (1= double 3=int32  4=int16 5=int8 ...)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the input data type, it can be a double or an integer.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>output type (1= double 3=int32  4=int16 5=int8 ...)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the output data type, it can be a double or an integer.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Do on Overflow(0=Nothing 1=Saturate 2=Error)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. When this parameter is set to zero the result is similar to a normal multiplication of two integer matrix. When it is set to 1, on overflow the block saturate the result. When it is set to 2, on overflow an error message box appears.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='EXTRACTBITS' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(3=int32 4=int16 5=int8 ...)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the type of the input/output data. It support all the integer datatype, number must be between 3 and 8.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Bits to extract(1=Upper Half 2=Lower Half 3=Range starting with most significant bit 4=Range ending with least significant bit 5=Range of bits)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the mode used to extract bits from the input data.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>number of bits or index of bit (case range of bits:[start,end],0 is leat significant bit)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. When the "Bits to extract" field is set to 3 or 4, this parameter is used to determine the number of bits to extract and it must be a number. When the "Bits to extract" field is set to 5 ,this parameter is used to determine range of bits to extract and it must have the [start,end] form vector. When the "Bits to extract" field is set to 1 or 2, this parameter is ignored.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Treat bit field as an integer(0=no 1=yes)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the scaling mode to use on the output bits selection.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='GAINBLK_m' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Gain</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'mat' of size [-1,-1]. The parameter description 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='INTGAINBLK' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Gain</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'mat' of size [-1,-1]. This parameter defined the square matrix A. The types of the matrix must be an integer. e.g int32(ones(3,3)).
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Do on Overflow (0=Nothing 1=Saturate 2=Error)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. When this parameter is set to zero the result is similar to a normal multiplication of two integer matrix. When it is set to 1, on overflow the block saturate the result. When it is set to 2, on overflow an error message box appears.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='INTLOGICAL_OP' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype (3=int32 4=int16 5=int8 ...)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the type of the input/output data. It support all the integer datatype, number must be between 3 and 8.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>number of inputs</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the number of inputs.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Operator: AND (0), OR (1), NAND (2), NOR (3), XOR (4), NOT (5)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the logical operator to use.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Bitwise Rule (0=No 1=Yes)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the rule of computation to use.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='INTMUL' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype (3=int32  4=int16 5=int8 ...)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the type of the input/output data. It support all the integer datatype, number must be between 3 and 8.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Do on Overflow(0=Nothing 1=Saturate 2=Error)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. When this parameter is set to zero the result is similar to a normal multiplication of two integer matrix. When it is set to 1, on overflow the block saturate the result. When it is set to 2, on overflow an error message box appears.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='INTREGISTER' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Register initial condition</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. It contains the initial state of the register.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Datatype(3=int32 4=int16 5=int8 ...)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the type of the input/output data. It support all the integer datatype, number must be between 3 and 8.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='RAND_m' type='LATEX'>
\begin{itemize}
  \item {\bf Datatype(1=real double  2=complex)} \\
        It indicates the type of the output. It support only the two types double (1) and complex (2). If we input another entry in this label scicos will print the message "Datatype is not supported". \\
        Properties : Type 'vec' of size 1.

  \item {\bf flag} \\
        0 or 1.\\
        0 for uniform distribution on  [A,A+B]. \\
        1 for normal distribution.\\
        Properties : Type 'vec' of size 1.

  \item {\bf A} \\
        matrix\\
        Properties : Type 'mat' of size [-1,-2].

  \item {\bf B} \\
        matrix\\
        Properties : Type 'mat' of size [-1,-2].

  \item {\bf seed} \\
        matrix\\
        Seed value for a sequence of random number.\\
	First number is for the real part and the second for the
	imaginary part.\\
        Properties : Type 'mat' of size [1,2].
\end{itemize}
</FILE>

<FILE name='RELATIONAL_OP' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype( 3=int32 4=int16 5=int8 ...)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the type of the input/output data. It support all the integer datatype, number must be between 3 and 8.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Operator: == (0), ~= (1), &lt; (2), &lt;= (3), &gt; (4), &gt;= (5)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the operator to use.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Zero crossing (0=no 1=yes)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It gives the user the possibility to use the zero crossing rule.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='RELAY_m' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(1= real double  2=Complex 3=int32 ..)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. The parameter description 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>number of inputs</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. The parameter description 2.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>initial connected input</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. The parameter description 3.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='SAMPHOLD_m' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(1=real double 2=Complex 3=int32 ...)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. Output datatype. This block can support all data types.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='SHIFT' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype (3=int32  4=int16 5=int8 ...)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the type of the input/output data. It support all the integer datatype, number must be between 3 and 8.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Number of bits to shift left (use negatif number to shift right)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the number of bits the input signal is shifted. A positif value indicates a shift left, negatif values indicates shift right.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Shifttype(0=Arithmetic 1=Circular)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicate the rule used to shift the bits. It can be arithmetic or circular. When the Shifttype is normal, an arithmetic shift is applied to the input signal. In this case, the bits that are shifted
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='SQRT' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(1=real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the type of the output. It support only the two types double (1) and complex (2). If we input another entry in this label scicos will print the message "Datatype is not supported".
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='SUMMATIONI' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype (1=real double  2=complex 3=int32 ...)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. It indicates the type of the input/output data. It support all datatype, number must be between 1 and 8.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Number of inputs or sign vector (of +1, -1)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size -1. It indicates the number of inputs and the operation see the description for more detail.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Do on Overflow(0=Nothing 1=Saturate 2=Error)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
: Type 'vec' of size 1. When this parameter is set to zero the result is similar to a normal summation of two integer matrix. When it is set to 1, on overflow the block saturate the result. When it is set to 2, on overflow an error message box appears. If the Data type is double or complex this parameter is not used.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='DFLIPFLOP' type='XML'>
<PARAM>

</PARAM>
</FILE>

<FILE name='DLATCH' type='XML'>
<PARAM>

</PARAM>
</FILE>

<FILE name='EXPBLK_m' type='LATEX'>
%automatically generated, please edit
\begin{itemize}

  %a ($>$0)  \%e
  \item {\bf a} \\
        A real positive scalar.\\
        Properties : Type 'vec' of size 1.

\end{itemize}
</FILE>

<FILE name='INVBLK_m' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='JKFLIPFLOP' type='XML'>
<PARAM>

</PARAM>
</FILE>

<FILE name='LOGIC' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Truth table</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The matrix of outputs. For more information see the description part.
</SP>
<SP>
Properties : Type 'mat' of size [-1,-2].
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Inherit(0=no 1=yes)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
Specifies if the clock is inherit or not.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='SRFLIPFLOP' type='XML'>
<PARAM>

</PARAM>
</FILE>


<FILE name='BITCLEAR1' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(3=int32 4=int16 5=int8 ...)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>index of bit (0 is leat significant)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='BOUNCE' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Mass</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Radius</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>[xmin,xmax,ymin,ymax]</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>xpos</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 4.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>xdpos</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 5.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>ypos</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 6.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>ydpos</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 7.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>g (gravity)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 8.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>C (aerodynamic coeff</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 9.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='BOUNCEXY' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>colors</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>radii</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>window number (-1 for automatic)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>animation mode (0,1)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 4.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Xmin</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 5.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Xmax</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 6.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Ymin</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 7.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Ymax</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 8.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='CLOCK_c' type='LATEX'>
  %@lan
  \begin{itemize}
     
     \item {\bf Period} \\
           scalar. \\
           One over the frequency of the clock. \\
           Period is the time that separates two output events.\\
	   Properties : Type 'vec' of size 1.

     \item {\bf Init time} \\
           scalar. \\
           Starting date. \\
           If negative the clock never starts.\\
	   Properties : Type 'vec' of size 1.
  \end{itemize}
</FILE>

<FILE name='DLATCH1' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='DLOGICAL_OP' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>number of inputs</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Operator: AND (0), OR (1), NAND (2), NOR (3), XOR (4), NOT (5)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='DelayRE' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='Div' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype (1=real double  2=Complex  3=int32 ...)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='EDGETRIGGER' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>rising (1), falling (-1), both (0)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='EVTDLY_c' type='LATEX'>
%automatically generated, please edit
\begin{itemize}
%Delay   0.1
\item {Delay:} scalar. Time delay between input and output event. 
%Date of initial output event   0.1
\item {Date of initial output event:}scalar. If {\bf Auto-exec>=0 } block
  initially generates an output event at date{\bf  Auto-exec}.  
\end{itemize}
</FILE>

<FILE name='FROM' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Tag</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The tag of the GOTO block passing the signal to this FROM block.
</SP>
<SP>
Properties : Type 'str' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='GOTO' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Tag</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
This parameter identifies the Goto block whose scope is defined in this block.
</SP>
<SP>
Properties : Type 'str' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Tag Visibility(1=Local 2=scoped 3= global)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
This parameter idetifies the visibility of the block. It can be local(1), scoped(2) or global(3).
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='GotoTagVisibility' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>GotoTag</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The Goto block tag whose visibility is defined by the location of this block.
</SP>
<SP>
Properties : Type 'str' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='IMPSPLIT_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='JKFLIPFLOP1' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='Neg' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype (1=real double  2=Complex  3=int32 ...)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='PID' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Proportional</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Integral</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Derivation</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='ROOTCOEF' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(1=real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
This block can only support double inputs values. These values can be real or complex.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>input row size</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The input row size.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='SETW' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Datatype(1=real double  2=Complex)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='SPLIT_f' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='SRFLIPFLOP1' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='func_block' type='XML'>
<PARAM>
<PARAM_INDENT>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='scifunc_block_m' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>input ports sizes</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 1.
</SP>
<SP>
Properties : Type 'mat' of size [-1,2].
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>output port sizes</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 2.
</SP>
<SP>
Properties : Type 'mat' of size [-2,2].
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>input event ports sizes</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 3.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>output events ports sizes</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 4.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>initial continuous state</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 5.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>initial discrete state</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 6.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>System parameters vector</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 7.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>initial firing vector (&lt;0 for no firing)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 8.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>is block always active (0:no, 1:yes)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The parameter description 9.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='CLKFROM' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Tag</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The tag of the CLKGOTO block passing the signal to this CLKFROM block.
</SP>
<SP>
Properties : Type 'str' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='CLKGOTO' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Tag</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
This parameter identifies the Goto block whose scope is defined in this block.
</SP>
<SP>
Properties : Type 'str' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Tag Visibility (1=Local 2=Scoped 3=Global)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
This parameter idetifies the visibility of the block. It can be local(1), scoped(2) or global(3).
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='CLKGotoTagVisibility' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>GotoTag</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The Goto block tag whose visibility is defined by the location of this block.
</SP>
<SP>
Properties : Type 'str' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='FROMMO' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Tag</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The tag of the GOTOMO block passing the signal to this FROMMO block.
</SP>
<SP>
Properties : Type 'str' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='GOTOMO' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Tag</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
This parameter identifies the Goto block whose scope is defined in this block.
</SP>
<SP>
Properties : Type 'str' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Tag Visibility(1=Local 2=scoped 3= global)</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
This parameter idetifies the visibility of the block. It can be local(1), scoped(2) or global(3).
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='GotoTagVisibilityMO' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>GotoTag</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The Goto block tag whose visibility is defined by the location of this block.
</SP>
<SP>
Properties : Type 'str' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='Counter' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>Minimum</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    The lowest number of the counter.
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size 1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
	<PARAM_NAME>Maximum</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    The highest number of the counter.
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size 1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
	<PARAM_NAME>Rule (1=Increment 2=Decrement)</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    The rule of counting. If it is 1 then the counter counts from the lower number to the higher number. the count in this case is increasing. otherwise, if the rule is equal to 2 the counter will decrease and it will count from the higher number to the lower one.
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size 1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='M_freq' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Sample time</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
Vector of sample time values.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Offset</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
Vector of offset values. Must have the same size as the Sample time and each offset value must be less than its corresponding sample time.
</SP>
<SP>
Properties : Type 'vec' of size -1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='SampleCLK' type='XML'>
<PARAM>
<PARAM_INDENT>

<PARAM_ITEM>
<PARAM_NAME>Sample time</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The Sample time value.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

<PARAM_ITEM>
<PARAM_NAME>Offset</PARAM_NAME>
<PARAM_DESCRIPTION>
<SP>
The offset value.
</SP>
<SP>
Properties : Type 'vec' of size 1.
</SP>
</PARAM_DESCRIPTION>
</PARAM_ITEM>

</PARAM_INDENT>
</PARAM>
</FILE>

<FILE name='GAINBLK' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>Gain</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    This parameter defined the square matrix A. That parameter can support all Data types.
	  </SP>
	  <SP>
	    Properties : Type 'mat' of size [-1,-1].
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
	<PARAM_NAME>Do on Overflow (0=Nothing 1=Saturate 2=Error)</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    When this parameter is set to zero the result is similar to a normal multiplication of two integer matrix. When it is set to 1, on overflow the block saturate the result. When it is set to 2, on overflow an error message box appears.
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size 1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='SUMMATION' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>Datatype (1=real double  2=complex 3=int32 ...)</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    It indicates the type of the input/output data. It support all datatype, number must be between 1 and 8.
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size 1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
	<PARAM_NAME>Number of inputs or sign vector (of +1, -1)</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    It indicates the number of inputs and the operation see the description for more detail.
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size -1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
	<PARAM_NAME>Do on Overflow(0=Nothing 1=Saturate 2=Error)</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    When this parameter is set to zero the result is similar to a normal summation of two integer matrix. When it is set to 1, on overflow the block saturate the result. When it is set to 2, on overflow an error message box appears. If the Data type is double or complex this parameter is not used.
	  </SP>
	  <SP>
	    Properties : Type 'vec' of size 1.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='getblocklabel' type='XML'>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
	<PARAM_NAME>blk</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    Integer parameter. Set the index of a block (in the compiled structure).
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
	<PARAM_NAME>label</PARAM_NAME>
	<PARAM_DESCRIPTION>
	  <SP>
	    String parameter. Gives the string of the label of the
	    block numbered blk.
	  </SP>
	</PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='phase_simulation' type='XML'>
  <PARAM>
  <PARAM_INDENT>
    <PARAM_ITEM>
      <PARAM_NAME>psim</PARAM_NAME>
      <PARAM_DESCRIPTION>
	<SP>
	  get the current phase of the simulation
	</SP>
	<PARAM_INDENT>
	  <PARAM_ITEM>
	    <PARAM_NAME>1</PARAM_NAME>
	    <PARAM_DESCRIPTION>
	      <SP>
		The simulator is on a discrete activation.
	      </SP>
	    </PARAM_DESCRIPTION>
	  </PARAM_ITEM>
	</PARAM_INDENT>
	<PARAM_INDENT>
	  <PARAM_ITEM>
	    <PARAM_NAME>2</PARAM_NAME>
	    <PARAM_DESCRIPTION>
	      <SP>
		The simulator is realizing a continuous time domain integration.
	      </SP>
	    </PARAM_DESCRIPTION>
	  </PARAM_ITEM>
	</PARAM_INDENT>
      </PARAM_DESCRIPTION>
    </PARAM_ITEM>
  </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='pointer_xproperty' type='XML'>
  <PARAM>
  <PARAM_INDENT>

    <PARAM_ITEM>
    <PARAM_NAME>Name of param.</PARAM_NAME>
    <PARAM_DESCRIPTION>
      <SP>
      add here the parameter description
      </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>

  </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='set_xproperty' type='XML'>
  <PARAM>
  <PARAM_INDENT>

    <PARAM_ITEM>
    <PARAM_NAME>Name of param.</PARAM_NAME>
    <PARAM_DESCRIPTION>
      <SP>
      add here the parameter description
      </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>

  </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='CURVE_c' type='XML'>
  <PARAM>
    <PARAM_INDENT>

    <PARAM_ITEM>
    <PARAM_NAME>Spline Method (0..7)</PARAM_NAME>
    <PARAM_DESCRIPTION>
      <SP>
      The parameter description 1.
      </SP>
      <SP>
      Properties : Type 'vec' of size 1.
      </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>

    <PARAM_ITEM>
    <PARAM_NAME>x</PARAM_NAME>
    <PARAM_DESCRIPTION>
      <SP>
      The parameter description 2.
      </SP>
      <SP>
      Properties : Type 'str' of size 1.
      </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>

    <PARAM_ITEM>
    <PARAM_NAME>y</PARAM_NAME>
    <PARAM_DESCRIPTION>
      <SP>
      The parameter description 3.
      </SP>
      <SP>
      Properties : Type 'str' of size 1.
      </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>

    <PARAM_ITEM>
    <PARAM_NAME>Periodic signal(y/n)?</PARAM_NAME>
    <PARAM_DESCRIPTION>
      <SP>
      The parameter description 4.
      </SP>
      <SP>
      Properties : Type 'str' of size 1.
      </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>

    <PARAM_ITEM>
    <PARAM_NAME>Launch graphic window(y/n)?</PARAM_NAME>
    <PARAM_DESCRIPTION>
      <SP>
      The parameter description 5.
      </SP>
      <SP>
      Properties : Type 'str' of size 1.
      </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>

  </PARAM_INDENT>
  </PARAM>
</FILE>

<FILE name='Sigbuilder' type='XML'>
  <PARAM>
    <PARAM_INDENT>

    <PARAM_ITEM>
    <PARAM_NAME>Spline Method (0..7)</PARAM_NAME>
    <PARAM_DESCRIPTION>
      <SP>
      The parameter description 1.
      </SP>
      <SP>
      Properties : Type 'vec' of size 1.
      </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>

    <PARAM_ITEM>
    <PARAM_NAME>x</PARAM_NAME>
    <PARAM_DESCRIPTION>
      <SP>
      The parameter description 2.
      </SP>
      <SP>
      Properties : Type 'str' of size 1.
      </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>

    <PARAM_ITEM>
    <PARAM_NAME>y</PARAM_NAME>
    <PARAM_DESCRIPTION>
      <SP>
      The parameter description 3.
      </SP>
      <SP>
      Properties : Type 'str' of size 1.
      </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>

    <PARAM_ITEM>
    <PARAM_NAME>Periodic signal(y/n)?</PARAM_NAME>
    <PARAM_DESCRIPTION>
      <SP>
      The parameter description 4.
      </SP>
      <SP>
      Properties : Type 'str' of size 1.
      </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>

    <PARAM_ITEM>
    <PARAM_NAME>Launch graphic window(y/n)?</PARAM_NAME>
    <PARAM_DESCRIPTION>
      <SP>
      The parameter description 5.
      </SP>
      <SP>
      Properties : Type 'str' of size 1.
      </SP>
    </PARAM_DESCRIPTION>
    </PARAM_ITEM>

  </PARAM_INDENT>
  </PARAM>
</FILE>

</DATA>
