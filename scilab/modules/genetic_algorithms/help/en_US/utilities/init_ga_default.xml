<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - Yann COLLETTE <yann.collette@renault.com>
 * Copyright (C) 2010 - DIGITEO - Michael Baudin
 *
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns3="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="init_ga_default" xml:lang="en">
    <refnamediv>
        <refname>init_ga_default</refname>
        <refpurpose>A function a initialize a population</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>Pop_init = init_ga_default(popsize,param)</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>popsize</term>
                <listitem>
                    <para>the number of individuals to generate.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>param</term>
                <listitem>
                    <para>a list of parameters. </para>
                    <itemizedlist>
                        <listitem>
                            <para> "dimension": the size of the vector X. Default dimension=2. </para>
                        </listitem>
                        <listitem>
                            <para> "minbound": a vector of minimum bounds for the variable
                                X. Default minbound = -2*ones(1,dimension). 
                            </para>
                        </listitem>
                        <listitem>
                            <para> "maxbound": a vector of maximum bounds for the variable
                                X. Default maxbound=2*ones(1,dimension).
                            </para>
                        </listitem>
                    </itemizedlist>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Pop_init</term>
                <listitem>
                    <para>a list which contains the initial population of
                        individuals.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            This function generate an initial population containing pop_size
            individuals.
            It uses the rand function to generate the points uniformly distributed in the
            bounds.
            As a side effect, it modifies the state of the random generator of the rand 
            function.
            Other initial populations might be generated from the grand 
            function, or any other uniform random generator (including low discrepancy sequences).
            In the case were we want to compute another initial population, we 
            might define our own init function: in this case, we may use the init_ga_default 
            function as a template and plug our customized population generator.
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[ 
// Generate 10 points in 2 dimensions, in the 
// interval [-2,2]^2.
popsize = 10;
ga_params = init_param();
ga_params = add_param(ga_params,"dimension",2);
ga_params = add_param(ga_params,"minbound",[-2; -2]);
ga_params = add_param(ga_params,"maxbound",[2; 2]);
Pop_init = init_ga_default(popsize,ga_params);
for k = 1 : popsize
  x = Pop_init(k);
  xstr = strcat(string(x)," ");
  mprintf("x[%d]=[%s]\n",k,xstr);
end
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="crossover_ga_default"> crossover_ga_default
                </link>
            </member>
            <member>
                <link linkend="mutation_ga_default"> mutation_ga_default
                </link>
            </member>
            <member>
                <link linkend="mutation_ga_binary"> mutation_ga_binary
                </link>
            </member>
            <member>
                <link linkend="optim_ga"> optim_ga </link>
            </member>
        </simplelist>
    </refsection>
</refentry>
