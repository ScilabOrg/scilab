<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - Yann COLLETTE <yann.collette@renault.com>
 *
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns3="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:id="optim_moga" xml:lang="en">
  <info>
    <pubdate>4-Feb-2008</pubdate>
  </info>
  <refnamediv>
    <refname>optim_moga</refname>
    <refpurpose>multi-objective genetic algorithm</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <title>Calling Sequence</title>
    <synopsis>[pop_opt,fobj_pop_opt,pop_init,fobj_pop_init] = optim_moga(ga_f,pop_size,nb_generation,p_mut,p_cross,Log,param)</synopsis>
  </refsynopsisdiv>
  <refsection>
    <title>Arguments</title>
    <variablelist>
      <varlistentry>
        <term>ga_f</term>
        <listitem>
          <para>the function to be optimized. The header of the function is
            the following :
          </para>
          <programlisting role=""><![CDATA[ 
y = f(x)
 ]]></programlisting>
          <para>or</para>
          <programlisting role=""><![CDATA[
y = list(f,p1,p2,...)
 ]]></programlisting>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>pop_size</term>
        <listitem>
          <para>the size of the population of individuals (default value:
            100).
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>nb_generation</term>
        <listitem>
          <para>the number of generations (equivalent to the number of
            iterations in classical optimization) to be computed (default value:
            10).
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>p_mut</term>
        <listitem>
          <para>the mutation probability (default value: 0.1).</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>p_cross</term>
        <listitem>
          <para>the crossover probability (default value: 0.7).</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Log</term>
        <listitem>
          <para>if %T, we will display to information message during the run
            of the genetic algorithm.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>param</term>
        <listitem>
          <para>a list of parameters.</para>
          <itemizedlist>
            <listitem>
              <para>'codage_func': the function which will perform the coding
                and decoding of individuals (default function: codage_identity).
              </para>
            </listitem>
            <listitem>
              <para> 'init_func': the function which will perform the
                initialization of the population (default function:
                init_ga_default). 
              </para>
            </listitem>
            <listitem>
              <para> 'crossover_func': the function which will perform the
                crossover between two individuals (default function:
                crossover_ga_default). 
              </para>
            </listitem>
            <listitem>
              <para> 'mutation_func': the function which will perform the
                mutation of one individual (default function:
                mutation_ga_default). 
              </para>
            </listitem>
            <listitem>
              <para> 'selection_func': the function whcih will perform the
                selection of individuals at the end of a generation (default
                function: selection_ga_elitist). 
              </para>
            </listitem>
            <listitem>
              <para>'nb_couples': the number of couples which will be selected
                so as to perform the crossover and mutation (default value:
                100). 
              </para>
            </listitem>
            <listitem>
              <para> 'pressure': the value the efficiency of the worst
                individual (default value: 0.05).
              </para>
            </listitem>
          </itemizedlist>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>pop_opt</term>
        <listitem>
          <para>the population of optimal individuals.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>fobj_pop_opt</term>
        <listitem>
          <para>the set of multi-objective function values associated to
            pop_opt (optional).
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>pop_init</term>
        <listitem>
          <para>the initial population of individuals (optional).</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>fobj_pop_init</term>
        <listitem>
          <para>the set of multi-objective function values associated to
            pop_init (optional).
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>
  <refsection>
    <title>Description</title>
    <itemizedlist>
      <listitem>
        <para>This function implements the classical "Multi-Objective Genetic
          Algorithm". For a demonstration: see
          SCI/modules/genetic_algorithms/examples/MOGAdemo.sce.
        </para>
      </listitem>
    </itemizedlist>
  </refsection>
  <refsection role="see also">
    <title>See Also</title>
    <simplelist type="inline">
      <member>
        <link linkend="optim_ga"> optim_ga </link>
      </member>
      <member>
        <link linkend="optim_nsga"> optim_nsga </link>
      </member>
      <member>
        <link linkend="optim_nsga2"> optim_nsga2 </link>
      </member>
    </simplelist>
  </refsection>
</refentry>
