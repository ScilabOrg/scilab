// =============================================================================
// Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
// Copyright (C) 2009 - DIGITEO - Sylvestre KOUMAR
//
//  This file is distributed under the same license as the Scilab package.
// =============================================================================
// <-- TEST WITH TREE -->
// test to check the created tree
// node creation
leaf11 = createNode('leaf 1.1', 'iconLeaf1.1', 'callbackLeaf1.1')
 leaf11  =
 
 
       leaf11(1)
 
 Tree   
 
       leaf11(2)
 
   label: "leaf 1.1"
   icon: "iconLeaf1.1"
   callback: "callbackLeaf1.1"
leaf12 = createNode('leaf 1.2', 'iconLeaf1.2', 'callbackLeaf1.2')
 leaf12  =
 
 
       leaf12(1)
 
 Tree   
 
       leaf12(2)
 
   label: "leaf 1.2"
   icon: "iconLeaf1.2"
   callback: "callbackLeaf1.2"
leaf31 = createNode('leaf 3.1', 'iconLeaf3.1', 'callbackLeaf3.1')
 leaf31  =
 
 
       leaf31(1)
 
 Tree   
 
       leaf31(2)
 
   label: "leaf 3.1"
   icon: "iconLeaf3.1"
   callback: "callbackLeaf3.1"
leaf32 = createNode('leaf 3.2', 'iconLeaf3.2', 'callbackLeaf3.2')
 leaf32  =
 
 
       leaf32(1)
 
 Tree   
 
       leaf32(2)
 
   label: "leaf 3.2"
   icon: "iconLeaf3.2"
   callback: "callbackLeaf3.2"
node1 = createNode('Node 1', 'iconNode1', 'callbackNode1')
 node1  =
 
 
       node1(1)
 
 Tree   
 
       node1(2)
 
   label: "Node 1"
   icon: "iconNode1"
   callback: "callbackNode1"
node2 = createNode('Node 2', 'iconNode2', 'callbackNode2')
 node2  =
 
 
       node2(1)
 
 Tree   
 
       node2(2)
 
   label: "Node 2"
   icon: "iconNode2"
   callback: "callbackNode2"
node3 = createNode('Node 3', 'iconNode3', 'callbackNode3')
 node3  =
 
 
       node3(1)
 
 Tree   
 
       node3(2)
 
   label: "Node 3"
   icon: "iconNode3"
   callback: "callbackNode3"
root = createNode('Root', 'iconRoot', 'callbackRoot')
 root  =
 
 
       root(1)
 
 Tree   
 
       root(2)
 
   label: "Root"
   icon: "iconRoot"
   callback: "callbackRoot"
// node creation with errors
if( execstr("myErrorNode1 = createNode()","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myErrorNode2 = createNode(123)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myErrorNode3 = createNode(123, ''icon of My Node'')","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myErrorNode4 = createNode(''My Node'', 123)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myErrorNode5 = createNode(123, ''icon of My Node'', ''callback of My Node'')","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myErrorNode6 = createNode(''My Node'', 123, ''callback of My Node'')","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myErrorNode7 = createNode(''My Node'', ''icon of My Node'', 123)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myErrorNode8 = createNode(''My Node'', ''icon of My Node'', ''callback of My Node'', ''test'')","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myErrorNode9 = createNode(''My Node'', ''icon of My Node'', ''callback of My Node'', 123)","errcatch") == 0 ) then bugmes();quit;end
// tree creation
treeOnlyNode1 = createTree(node1)
 treeOnlyNode1  =
 
 
       treeOnlyNode1(1)
 
 Tree   
 
       treeOnlyNode1(2)
 
   label: "Node 1"
   icon: "iconNode1"
   callback: "callbackNode1"
treeNode1 = createTree(node1, leaf11,leaf12)
 
    2.  
 
    1.  
 
    2.  
 
    2.  
 treeNode1  =
 
 
       treeNode1(1)
 
 Tree   
 
       treeNode1(2)
 
   label: "Node 1"
   icon: "iconNode1"
   callback: "callbackNode1"
 
       treeNode1(3)
 
 
        treeNode1(3)(1)
 
 Tree   
 
        treeNode1(3)(2)
 
   label: "leaf 1.1"
   icon: "iconLeaf1.1"
   callback: "callbackLeaf1.1"
treeNode3 = createTree(node3, leaf31,leaf32)
 
    2.  
 
    1.  
 
    2.  
 
    2.  
 treeNode3  =
 
 
       treeNode3(1)
 
 Tree   
 
       treeNode3(2)
 
   label: "Node 3"
   icon: "iconNode3"
   callback: "callbackNode3"
 
       treeNode3(3)
 
 
        treeNode3(3)(1)
 
 Tree   
 
        treeNode3(3)(2)
 
   label: "leaf 3.1"
   icon: "iconLeaf3.1"
   callback: "callbackLeaf3.1"
treeRoot = createTree(root, node1,node2,node3)
 
    3.  
 
    1.  
 
    3.  
 
    2.  
 
    3.  
 
    3.  
 treeRoot  =
 
 
       treeRoot(1)
 
 Tree   
 
       treeRoot(2)
 
   label: "Root"
   icon: "iconRoot"
   callback: "callbackRoot"
 
       treeRoot(3)
 
 
        treeRoot(3)(1)
 
 Tree   
 
        treeRoot(3)(2)
 
   label: "Node 1"
   icon: "iconNode1"
   callback: "callbackNode1"
// tree creation with wrong inputs
if( execstr("myTree = createTree()","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(123)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(123, node1,node2,node3)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(root, 123,node2,node3)","errcatch") == 0 ) then bugmes();quit;end
 
    3.  
 
    1.  
if( execstr("myTree = createTree(root, node1,123,node3)","errcatch") == 0 ) then bugmes();quit;end
 
    3.  
 
    1.  
 
    3.  
 
    2.  
if( execstr("myTree = createTree(root, node1,node2,123)","errcatch") == 0 ) then bugmes();quit;end
 
    3.  
 
    1.  
 
    3.  
 
    2.  
 
    3.  
 
    3.  
// tree creation with invalid nodes
if( execstr("myTree = createTree(myErrorNode1)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(myErrorNode2)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(myErrorNode3)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(myErrorNode4)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(myErrorNode5)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(myErrorNode6)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(myErrorNode7)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(myErrorNode8)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(myErrorNode9)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(myErrorNode1, node1,node2,node3)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(root, myErrorNode1,node2,node3)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(root, node1,myErrorNode1,node3)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(root, node1,node2,myErrorNode1)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(myErrorNode2, node1,node2,node3)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(root, myErrorNode2,node2,node3)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(root, node1,myErrorNode2,node3)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(root, node1,node2,myErrorNode2)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(myErrorNode3, node1,node2,node3)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(root, myErrorNode3,node2,node3)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(root, node1,myErrorNode3,node3)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(root, node1,node2,myErrorNode3)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(myErrorNode5, node1,node2,node3)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(root, myErrorNode5,node2,node3)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(root, node1,myErrorNode5,node3)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(root, node1,node2,myErrorNode5)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(myErrorNode8, node1,node2,node3)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(root, myErrorNode8,node2,node3)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(root, node1,myErrorNode8,node3)","errcatch") == 0 ) then bugmes();quit;end
if( execstr("myTree = createTree(root, node1,node2,myErrorNode8)","errcatch") == 0 ) then bugmes();quit;end
