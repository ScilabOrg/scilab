<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Xcos
 *
 * Copyright (C) INRIA - METALAU Project <scicos@inria.fr> (HTML version)
 * Copyright (C) DIGITEO - Scilab Consortium (XML Docbook version)
 * Copyright 2011 - Bernard DUJARDIN <bernard.dujardin@contrib.scilab.org>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 * 
 * See the file ./license.txt
 -->

<refentry
  version="5.0-subset Scilab" xml:id="JKFLIPFLOP"
  xmlns="http://docbook.org/ns/docbook"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:svg="http://www.w3.org/2000/svg"
  xmlns:ns5="http://www.w3.org/1999/xhtml"
  xmln.mml="http://www.w3.org/1998/Math/MathML"
  xmlns:db="http://docbook.org/ns/docbook"
>
  <refnamediv>
    <refname>JKFLIPFLOP</refname>
    <refpurpose>JK flip-flop</refpurpose>
  </refnamediv>

  <refsection>
    <title>Block Screenshot</title>
    <para>
      <inlinemediaobject>
        <imageobject>
          <imagedata fileref="../../../../images/palettes/JKFLIPFLOP.png" align="center" valign="middle"/>
        </imageobject>
      </inlinemediaobject>
    </para>
  </refsection>

  <refsection id="Contents_JKFLIPFLOP">
    <title>Contents</title>
    <itemizedlist>
      <listitem>
        <para>
          <link linkend="JKFLIPFLOP">JK flip-flop</link>
        </para>
      </listitem>
      <listitem>
        <itemizedlist>
          <listitem>
            <para>
              <xref linkend="Palette_JKFLIPFLOP">Palette</xref>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="Description_JKFLIPFLOP">Description</xref>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="Data_Type_JKFLIPFLOP">Data types</xref>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="Dialogbox_JKFLIPFLOP">Dialog box</xref>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="Defaultproperties_JKFLIPFLOP">Default properties</xref>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="Example_JKFLIPFLOP">Example</xref>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="Interfacingfunction_JKFLIPFLOP">Interfacing function</xref>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="Seealso_JKFLIPFLOP">See also</xref>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="Authors_JKFLIPFLOP">Authors</xref>
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>
  </refsection>

  <refsection id="Palette_JKFLIPFLOP">
    <title>Palette</title>
    <itemizedlist>
      <listitem>
        <para>
          <link linkend="Integer_pal">Integer palette</link>
        </para>
      </listitem>
    </itemizedlist>
  </refsection>

  <refsection id="Description_JKFLIPFLOP">
    <title>Description</title>

    <para>
      The JK flip flop is the most versatile of the basic flip-flops. It has two inputs traditionally labeled
      <emphasis role="bold">J</emphasis> (Set) and <emphasis role="bold">K</emphasis> (Reset).
    </para>

    <itemizedlist>
      <listitem>
        <para>
          When the inputs  <emphasis role="bold">J</emphasis> and <emphasis role="bold">K</emphasis>
          are different, the output <emphasis role="bold">Q</emphasis> takes the value of
          <emphasis role="bold">J</emphasis> at the next falling edge.
        </para>
        <para />
      </listitem>
      <listitem>
        <para>
          When the inputs <emphasis role="bold">J</emphasis> and <emphasis role="bold">K</emphasis> are both low, no change occurs in the output state.
        </para>
        <para />
      </listitem>
      <listitem>
        <para>
          When the inputs are both high the output <emphasis role="bold">Q</emphasis> will toggle from
          one state to other. It can perform the functions of the set/reset (SR) flip-flop and has the advantage that there are no ambiguous states.
        </para>
      </listitem>
    </itemizedlist>
    <para>
      The <emphasis role="bold">!Q</emphasis> output is the logical negation of <emphasis role="bold">Q</emphasis>
    </para>
    <para>
      It can also act as a T flip-flop to accomplish toggling action if <emphasis role="bold">J</emphasis>
      and <emphasis role="bold">K</emphasis> are tied together. This toggle application finds extensive use
      in binary counters.
    </para>
    <para>
      The user can set the initial output state with <emphasis role="bold">Initial Value</emphasis>
      parameter.
    </para>
    <para> The truth table of this block is:</para>
    <para />
    <informaltable border="1" cellpadding="3">
      <tr>
        <td align="left"><latex><![CDATA[\boldsymbol{J}]]></latex></td>
        <td align="left"><latex><![CDATA[\boldsymbol{K}]]></latex></td>
        <td align="left"><latex><![CDATA[\boldsymbol{Q_n}]]></latex></td>
        <td align="left"><latex><![CDATA[\boldsymbol{!Q_n}]]></latex></td>
        <td align="left"></td>
      </tr>
      <tr>
        <td align="left"><latex><![CDATA[0]]></latex></td>
        <td align="left"><latex><![CDATA[0]]></latex></td>
        <td align="left"><latex><![CDATA[Q_{n-1}]]></latex></td>
        <td align="left"><latex><![CDATA[!Q_{n-1}]]></latex></td>
        <td align="left">Hold</td>
      </tr>
      <tr>
        <td align="left"><latex><![CDATA[0]]></latex></td>
        <td align="left"><latex><![CDATA[1]]></latex></td>
        <td align="left"><latex><![CDATA[0]]></latex></td>
        <td align="left"><latex><![CDATA[1]]></latex></td>
        <td align="left">Reset</td>
      </tr>
      <tr>
        <td align="left"><latex><![CDATA[1]]></latex></td>
        <td align="left"><latex><![CDATA[0]]></latex></td>
        <td align="left"><latex><![CDATA[1]]></latex></td>
        <td align="left"><latex><![CDATA[0]]></latex></td>
        <td align="left">Set</td>
      </tr>
      <tr>
        <td align="left"><latex><![CDATA[1]]></latex></td>
        <td align="left"><latex><![CDATA[1]]></latex></td>
        <td align="left"><latex><![CDATA[!Q_{n-1}]]></latex></td>
        <td align="left"><latex><![CDATA[Q_{n-1}]]></latex></td>
        <td align="left">Toggle</td>
      </tr>
    </informaltable>
    <para>
      where <emphasis><literal>Q<subscript>n-1</subscript></literal></emphasis> is the previous state of
      <emphasis><literal>Q<subscript>n</subscript></literal></emphasis>.
    </para>
  </refsection>

  <refsection id="Data_Type_JKFLIPFLOP">
    <title>Data types</title>

  <para>
      The block supports the following types :
    </para>
    <itemizedlist>
      <listitem>
        <para>
          Inputs:
        </para>
        <itemizedlist>
          <listitem>
            <para>
              <emphasis role="bold">J</emphasis>: scalar. Scilab's int8 data type only.
            </para>
          </listitem>
          <listitem>
            <para>
              <emphasis role="bold">clk</emphasis>: scalar. Scilab's real double.
            </para>
          </listitem>
          <listitem>
            <para>
              <emphasis role="bold">K</emphasis>: scalar. Scilab's int8 data type only.
            </para>
          </listitem>
        </itemizedlist>
        <para>
          A positive input is considered as logical 1, a negative or a null input as logical 0.
        </para>
        <para />
      </listitem>
      <listitem>
        <para>
          Outputs: scalar. Scilab's int8 data type.
        </para>
      </listitem>
    </itemizedlist>

  </refsection>

  <refsection id="Dialogbox_JKFLIPFLOP">
    <title>Dialog box</title>
    <para>
      <inlinemediaobject>
        <imageobject>
          <imagedata fileref="../../../gui/integer_pal/en_US/JKFLIPFLOP_gui.png" align="center" valign="middle"/>
        </imageobject>
      </inlinemediaobject>
    </para>
    <para />
    <itemizedlist>
      <listitem>
        <para>
          <emphasis role="bold">Initial Value</emphasis>
        </para>
        <para> Initial state of the <emphasis role="bold">Q</emphasis> output.</para>
        <para> Properties : Type 'vec' of size 1.</para>
      </listitem>
    </itemizedlist>
  </refsection>

  <refsection id="Defaultproperties_JKFLIPFLOP">
    <title>Default properties</title>
    <itemizedlist>
      <listitem>
        <para><emphasis role="bold">always active:</emphasis> no</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">direct-feedthrough:</emphasis> yes</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">zero-crossing:</emphasis> no</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">mode:</emphasis> no</para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">regular inputs:</emphasis>
        </para>
        <para>
          <emphasis role="bold">- port 1 : size [1,1] / type 5</emphasis>
        </para>
        <para>
          <emphasis role="bold">- port 2 : size [1,1] / type 1</emphasis>
        </para>
        <para>
          <emphasis role="bold">- port 3 : size [1,1] / type 5</emphasis>
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">regular outputs:</emphasis>
        </para>
        <para>
          <emphasis role="bold">- port 1 : size [1,1] / type 5</emphasis>
        </para>
        <para>
          <emphasis role="bold">- port 2 : size [1,1] / type 5</emphasis>
        </para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">number/sizes of activation inputs:</emphasis> 0</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">number/sizes of activation outputs:</emphasis> 0</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">continuous-time state:</emphasis> no</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">discrete-time state:</emphasis> no</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">object discrete-time state:</emphasis> no</para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">name of computational function:</emphasis>
          <emphasis role="italic">csuper</emphasis>
        </para>
      </listitem>
    </itemizedlist>
  </refsection>

  <refsection id="Example_JKFLIPFLOP">
    <title>Example</title>
      <para>
        The following example builds a 3 bits asynchronous counter with JK flipflops wired as T flipflops. You can show on the
         right the timing diagram of the <emphasis><literal>Q<subscript>0</subscript></literal></emphasis>
        to <emphasis><literal>Q<subscript>2</subscript></literal></emphasis> outputs of counter.
        <link type="scilab" linkend="scilab.xcos/xcos/examples/integer_pal/en_US/JKFLIPFLOP_en_US.xcos">
          Open this example in Xcos
        </link>
      </para>
      <para />
      <mediaobject>
        <imageobject>
          <imagedata fileref="../../../examples/integer_pal/en_US/jkflipflop_diagram_en_US.png" align="center" />
        </imageobject>
      </mediaobject>
  </refsection>

  <refsection id="Interfacingfunction_JKFLIPFLOP">
    <title>Interfacing function</title>
    <itemizedlist>
      <listitem>
        <para><link type="scilab" linkend="scilab.scinotes/scicos_blocks/macros/IntegerOp/JKFLIPFLOP.sci">SCI/modules/scicos_blocks/macros/IntegerOp/JKFLIPFLOP.sci</link></para>
      </listitem>
    </itemizedlist>
  </refsection>

  <refsection role="see also" id="Seealso_JKFLIPFLOP">
    <title>See also</title>
    <itemizedlist>
      <listitem>
        <link linkend="DLATCH">DLATCH</link>
      </listitem>
      <listitem>
        <link linkend="DFLIPFLOP">DFLIPFLOP</link>
      </listitem>
      <listitem>
        <link linkend="SRFLIPFLOP">SRFLIPFLOP</link>
      </listitem>
    </itemizedlist>
  </refsection>
  <refsection id="Authors_JKFLIPFLOP">
    <title>Authors</title>
    <para><emphasis role="bold">Fady NASSIF</emphasis> - INRIA</para>
  </refsection>
</refentry>
