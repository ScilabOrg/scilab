<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scicos
 * 
 * Copyright (C) INRIA - METALAU Project <scicos@inria.fr> (HTML version)
 * Copyright (C) DIGITEO - Scilab Consortium (XML Docbook version)
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * 
 * See the file ./license.txt
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="steadycos" xml:lang="en">
    <refnamediv>
        <refname>steadycos</refname>
        <refpurpose>Finds an equilibrium state of a general dynamical
            system described by a xcos diagram
        </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>[X,U,Y,Xd]=steadycos(scs_m,X0,U0,Y0,IndX,IndU,IndY [,IndXd [,param ] ])</synopsis>
    </refsynopsisdiv>
    <refsection id="Parameters_steadycos">
        <title>Arguments</title>
        <itemizedlist>
            <listitem>
                <para>
                    <emphasis role="bold">scs_m :</emphasis> a xcos data structure
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">X0:</emphasis> a column
                    vector which gives the initial values for all the
                    continuous states of the system. It
                    size must be equal to the sum of the sizes of the
                    block's continuous states. X0 can be set to [] if all initial
                    states are supposed to be zero.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">X:</emphasis> a column
                    vector, the final values of the continuous states
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">IndX:</emphasis> a vector
                    which gives the index of the entries of X that are
                    not imposed by the given values in X0. If there is
                    not imposed value, IndX can be set to 1:$.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">U0:</emphasis> a column
                    vector which gives the initial values for all the
                    inputs of the system (the inputs correspond to the
                    input ports). It size must be equal to the sum of
                    the sizes of the signals expected on the input
                    ports <link linkend="IN_f">inputs</link>. U0
                    entries corresponds to the catenation of the input
                    port signals ordered according to the port's
                    number. U0 can be set to [] if all initial inputs
                    are supposed to be zero.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">U:</emphasis> column vector,
                    the final values of the inputs.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">IndU :</emphasis> a vector which
                    gives the index of the entries of U that are not
                    imposed to be equal to the corresponding values in
                    U0. If there is not imposed value, IndU can be set to
                    1:$.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">Y0:</emphasis> a column
                    vector which gives the initial values for all the
                    outputs of the system. It size must be equal to
                    the sum of the sizes of the signals expected on
                    the output ports <link
                    linkend="OUT_f">outputs</link>. Y0 entries
                    corresponds to the catenation of the output port
                    signals ordered according to the port's number. Y0
                    can be set to [] if all initial outputs are
                    supposed to be zero.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">Y:</emphasis> a column
                    vector, the final values of the outputs states.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">IndY:</emphasis> a vector which
                    gives the index of the entries of Y that are not
                    imposed by the given values in Y0. If there is not
                    imposed value, IndY can be set to 1:$.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">Xd :</emphasis> derivative
                    of the state corresponding to the steady state found.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">IndXd :</emphasis> index of
                    entries of Xd (derivative of X) that need not be
                    zero. If all can vary, set to 1:$. The default
                    value is [] (all derivatives must be 0).
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">param :</emphasis> list with two
                    elements (default list(1.d-6,0)). 
                </para>
                <itemizedlist>
                    <listitem>
                        <para>param(1): a scalar. Perturbation level for
                            linearization; the following variation is used
                            del([x;u])_i =param(1)+param(1)*1d-4*abs([x;u])_i. 
                        </para>
                    </listitem>
                    <listitem>
                        <para> param(2): a scalar. The value of time which
                            needs to be specified is the model of the system
                            depends on the time.
                        </para>
                    </listitem>
                </itemizedlist>
            </listitem>
        </itemizedlist>
    </refsection>
    <refsection id="Module_steadycos">
        <title>Module</title>
        <itemizedlist>
            <listitem>
                <para>
                    <link linkend="xcos">xcos</link>
                </para>
            </listitem>
        </itemizedlist>
    </refsection>
    <refsection id="Description_steadycos">
        <title>Description</title>
        <para>
            This function finds the steady state for a given system
            described by a xcos diagram or <link
            linkend="SUPER_f">sub-diagram</link>. The diagram should
            have <link linkend="IN_f">inputs</link> and <link
            linkend="OUT_f">outputs</link>. The steady state concern
            only the continuous-time dynamics. The function looks for
            a solution that minimize norm(Xd(KXd))+norm(Y(KY)) where
            KXd is the complementary of IndX and HY is the
            complementary of IndY.
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[
// loading data
exec("SCI/modules/xcos/tests/unit_tests/PENDULUM_ANIM.sci");
exec("SCI/modules/xcos/tests/unit_tests/anim_pen.sci");
importXcosDiagram("SCI/modules/xcos/tests/unit_tests/pendulum_anim45.zcos");

// configure the context
M  = 10;
m  = 3;
l  = 3;
ph = 0.1;
z0 = -4;
th0 = .02;

// look for the specific sub-diagram to work on
for i=1:length(scs_m.objs)
    if typeof(scs_m.objs(i))=="Block" & scs_m.objs(i).gui=="SUPER_f" then
        scs_m = scs_m.objs(i).model.rpar;
        break;
    end
end

[X,U,Y,XP] = steadycos(scs_m,[],[],[],[],1,1:$);
 ]]></programlisting>
    </refsection>
    
    <refsection id="Filecontent_steadycos">
        <title>File content</title>
        <itemizedlist>
            <listitem>
                <para> SCI/modules/scicos/macros/scicos_auto/steadycos.sci</para>
            </listitem>
        </itemizedlist>
    </refsection>
    <refsection id="SeeAlso_steadycos">
        <title>See Also</title>
        <itemizedlist>
            <listitem>
                <para>
                    <link linkend="lincos">lincos</link> - Constructs by
                    linearization a linear state-space model from a
                    general dynamical system described by a xcos
                    diagram (Scilab Function)
                </para>
            </listitem>
            <listitem>
                <para>
                    <link linkend="xcos_simulate">xcos_simulate</link> -
                    Function for running xcos simulation in batch mode
                    (Scilab Function)
                </para>
            </listitem>
            <listitem>
                <para>
                    <link linkend="xcos">xcos</link> - Block diagram editor
                    and GUI for the hybrid simulator (Scilab
                    Function)
                </para>
            </listitem>
        </itemizedlist>
    </refsection>
</refentry>
