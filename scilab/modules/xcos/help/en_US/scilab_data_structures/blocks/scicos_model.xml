<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scicos
 *
 * Copyright (C) INRIA - METALAU Project <scicos@inria.fr> (HTML version)
 * Copyright (C) DIGITEO - Scilab Consortium (XML Docbook version)
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *
 * See the file ./license.txt
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="scicos_model">
    <refnamediv>
        <refname>scicos_model</refname>
        <refpurpose>Define a model structure</refpurpose>
    </refnamediv>
    <refsection id="Module_scicos_model">
        <title>Module</title>
        <itemizedlist>
            <listitem>
                <para>
                    <link linkend="xcos">xcos</link>
                </para>
            </listitem>
        </itemizedlist>
    </refsection>
    <refsection id="model_scicos_model">
        <title>model</title>
        <para>
            Scilab list that contains the features
            of the block used for the compilation.
        </para>
        <para>
        </para>
        <para>
        </para>
        <para>
            Size : 23.
        </para>
        <para>
            Type : Scilab list.
        </para>
        <para>
            
        </para>
        <itemizedlist>
            <listitem>
                <para>
                    <emphasis role="bold">sim</emphasis>
                </para>
                <para> A list containing two elements. The first element is a string containing the name of the computational function (C, Fortran,or Scilab). The second element is an integer specifying the type of the computational function. Currently type 4 and 5 are used, but older types continue to work to ensure backward compatibility.</para>
                <para> For some older case, sim can be a single string and that means that the type is supposed to be 0.</para>
                <para>
                    Size : 2.
                </para>
                <para>
                    Type : Scilab list.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">in</emphasis>
                </para>
                <para> A vector specifying the number and size of the first dimension of regular input ports indexed from top to bottom of the block. If no input port exist in==[].</para>
                <para>
                    The size can be negative, equal to zero or positive :
                    
                    
                </para>
                <itemizedlist>
                    <listitem>
                        <para>If a size is less than zero, the compiler will
                            try to find the appropriate size.
                        </para>
                        <para>
                            
                        </para>
                    </listitem>
                    <listitem>
                        <para>If a size is equal to zero, the compiler will
                            affect this dimension by added all positive size
                            found in that vector
                            
                            
                        </para>
                    </listitem>
                    <listitem>
                        <para>If a size is greater than zero, then the size is
                            explicitly given.
                        </para>
                        <para>
                        </para>
                        <para>
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    Size : number of regular input ports.
                </para>
                <para>
                    Type : column vector of integer numbers.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">in2</emphasis>
                </para>
                <para> A vector specifying the second dimension of regular input ports indexed from top to bottom of the block.</para>
                <para> in with in2 formed then the regular input sizes matrix.</para>
                <para> For compatibility, this dimension can stay empty ([]).</para>
                <para> That means that the dimensions of input ports will be in,1
                    The size can be negative, equal to zero or positive :
                    
                    
                </para>
                <itemizedlist>
                    <listitem>
                        <para>If a size is less than zero, the compiler will
                            try to find the appropriate size.
                        </para>
                        <para>
                            
                        </para>
                    </listitem>
                    <listitem>
                        <para>If a size is equal to zero, the compiler will
                            affect this dimension by added all positive size
                            found in that vector.
                        </para>
                        <para>
                            
                        </para>
                    </listitem>
                    <listitem>
                        <para>If a size is greater than zero, then the size is
                            explicitly given.
                        </para>
                        <para>
                        </para>
                        <para>
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    Size : number of regular input ports.
                </para>
                <para>
                    Type : column vector of integer numbers.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">intyp</emphasis>
                </para>
                <para> A vector specifying the types of regular input ports.</para>
                <para> Its sizes is equal to the sizes of in.</para>
                <para> The types of regular input ports can be :
                    
                </para>
                <itemizedlist>
                    <listitem>
                        <para>1  real matrix,
                        </para>
                    </listitem>
                    <listitem>
                        <para>2  complex matrix,
                        </para>
                    </listitem>
                    <listitem>
                        <para>3  int32 matrix,
                        </para>
                    </listitem>
                    <listitem>
                        <para>4  int16 matrix,
                        </para>
                    </listitem>
                    <listitem>
                        <para>5  int8 matrix,
                        </para>
                    </listitem>
                    <listitem>
                        <para>6  uint32 matrix,
                        </para>
                    </listitem>
                    <listitem>
                        <para>7  uint16 matrix,
                        </para>
                    </listitem>
                    <listitem>
                        <para>8  uint8 matrix.
                        </para>
                        <para>
                        </para>
                        <para>
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    Size : number of regular input ports.
                </para>
                <para>
                    Type : column vector of integer numbers.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">out</emphasis>
                </para>
                <para>
                    A vector specifying the number and size of the first
                    dimension of regular output ports indexed from top to
                    bottom of the block. If no output port exist out==[].
                </para>
                <para>
                    The size can be negative, equal to zero or positive :
                    
                    
                </para>
                <itemizedlist>
                    <listitem>
                        <para>If a size is less than zero, the compiler will
                            try to find the appropriate size.
                        </para>
                        <para>
                            
                        </para>
                    </listitem>
                    <listitem>
                        <para>If a size is equal to zero, the compiler will
                            affect this dimension by added all positive size
                            found in that vector
                            
                            
                        </para>
                    </listitem>
                    <listitem>
                        <para>If a size is greater than zero, then the size is
                            explicitly given.
                        </para>
                        <para>
                        </para>
                        <para>
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    Size : number of regular output ports.
                </para>
                <para>
                    Type : column vector of integer numbers.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">out2</emphasis>
                </para>
                <para> A vector specifying the second dimension of regular output ports indexed from top to bottom of the block.</para>
                <para> out with out2 formed then the regular output sizes matrix.</para>
                <para> For compatibility, this dimension can stay empty ([]). That means that the dimensions of output ports will be out,1
                    That dimension can be negative, equal to zero or positive :
                    
                    
                </para>
                <itemizedlist>
                    <listitem>
                        <para>If a size is less than zero, the compiler will
                            try to find the appropriate size.
                        </para>
                        <para>
                            
                        </para>
                    </listitem>
                    <listitem>
                        <para>If a size is equal to zero, the compiler will
                            affect this dimension by added all positive size
                            found in that vector.
                        </para>
                        <para>
                            
                        </para>
                    </listitem>
                    <listitem>
                        <para>If a size is greater than zero, then the size is
                            explicitly given.
                        </para>
                        <para>
                        </para>
                        <para>
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    Size : number of regular output ports.
                </para>
                <para>
                    Type : column vector of integer numbers.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">outtyp</emphasis>
                </para>
                <para> A vector specifying the types of regular output ports.</para>
                <para> Its sizes is equal to the sizes of out.</para>
                <para> The types of regular output ports can be :
                    
                </para>
                <itemizedlist>
                    <listitem>
                        <para>1  real matrix,
                        </para>
                    </listitem>
                    <listitem>
                        <para>2  complex matrix,
                        </para>
                    </listitem>
                    <listitem>
                        <para>3  int32 matrix,
                        </para>
                    </listitem>
                    <listitem>
                        <para>4  int16 matrix,
                        </para>
                    </listitem>
                    <listitem>
                        <para>5  int8 matrix,
                        </para>
                    </listitem>
                    <listitem>
                        <para>6  uint32 matrix,
                        </para>
                    </listitem>
                    <listitem>
                        <para>7  uint16 matrix,
                        </para>
                    </listitem>
                    <listitem>
                        <para>8  uint8 matrix.
                        </para>
                        <para>
                        </para>
                        <para>
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    Size : number of regular output ports.
                </para>
                <para>
                    Type : column vector of integer numbers.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">evtin</emphasis>
                </para>
                <para> A vector specifying the number and sizes of activation inputs. Currently activation ports can be only of size one.</para>
                <para> If no event input port exists evtin must be equal to [].</para>
                <para>
                    Size : number of input event ports.
                </para>
                <para>
                    Type : column vector of integer numbers.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">evtout</emphasis>
                </para>
                <para> A vector specifying the number and sizes of activation outputs.</para>
                <para> Currently activation ports can be only of size one.</para>
                <para> If no event output port exists evtout must be equal to [].</para>
                <para>
                    Size : number of output event ports.
                </para>
                <para>
                    Type : column vector of integer numbers.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">state</emphasis>
                </para>
                <para> Vector containing initial values of continuous-time state.</para>
                <para> Must be [] if no continuous state.</para>
                <para>
                    Size : number of continuous-time state.
                </para>
                <para>
                    Type : column vector of real numbers.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">dstate</emphasis>
                </para>
                <para> Vector containing initial values of discrete-time state.</para>
                <para> Must be [] if no discrete state.</para>
                <para>
                    Size : number of discrete-time state.
                </para>
                <para>
                    Type : column vector of real numbers.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">odstate</emphasis>
                </para>
                <para> List containing initial values of objects state.</para>
                <para> Must be list() if no objects state.</para>
                <para>
                    Objects state can be any types of scilab variable.
                </para>
                <para>
                    In the computational function case of type 4 (C blocks)
                    only elements containing matrix of real, complex,
                    int32, int16 ,int8 ,uint32, uit16 and uint8 will be correctly
                    provided for readind/writing.
                </para>
                <para>
                </para>
                <para>
                    Size : number of objects state.
                </para>
                <para>
                    Type : scilab list of scilab objects.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">rpar</emphasis>
                </para>
                <para> The vector of floating point block parameters.</para>
                <para> Must be [] if no floating point parameters.</para>
                <para>
                    Size : number of real parameters.
                </para>
                <para>
                    Type : column vector of real numbers.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">ipar</emphasis>
                </para>
                <para> The vector of integer block parameters.</para>
                <para> Must be [] if no integer parameters.</para>
                <para>
                    Size : number of integer parameters.
                </para>
                <para>
                    Type : column vector of integer numbers.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">opar</emphasis>
                </para>
                <para> List of objects block parameters. Must be list() if no objects parameters.</para>
                <para>
                    Objects parameters can be any types of scilab variable.
                </para>
                <para>
                    In the computational function case of type 4 (C blocks)
                    only elements containing matrix of real, complex,
                    int32, int16 ,int8 ,uint32, uit16 and uint8 will be correctly
                    provided for reading.
                </para>
                <para>
                </para>
                <para>
                    Size : number of objects parameters.
                </para>
                <para>
                    Type : list of scilab object.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">blocktype</emphasis>
                </para>
                <para> Character that can be set to 'c' or 'd' indifferently for standard blocks. 'x' is used if we want to force the computational function to be called during the simulation phase even if the block does not contribute to computation of the state derivative.</para>
                <para> 'l', 'm' and 's' are reserved. Not to be used.</para>
                <para>
                    Size : 1.
                </para>
                <para>
                    Type : Character.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">firing</emphasis>
                </para>
                <para> Vector of initial event firing times of size equal to the number of activation output ports (see evout). It contains output initial event dates (Events generated before any input event arises). Negative values stands for no initial event on the corresponding port.
                    Size : number of output event ports.
                </para>
                <para>
                    Type : column vector of real numbers.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">dep_ut</emphasis>
                </para>
                <para> Boolean vector [dep_u, dep_t].</para>
                <para>
                    
                </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            <emphasis role="bold">dep_t</emphasis>
                        </para>
                        <para>
                            true if block is always active.
                        </para>
                        <para>
                            Output depends continuously of the time.
                            For instance, the GENSIN_f block computes <code>y=sin(t)</code> so <code>dep_ut=[%f %t]</code>.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis role="bold">dep_u</emphasis>
                        </para>
                        <para>
                            true if block has direct feed-through,
                            i.e., at least one of the outputs depends
                            directly (not through the states) on one
                            of the inputs.
                            In other words, when the computational
                            function is called with flag 1, the value
                            of an input is used to compute the output.
                            For instance, the SUM_f block computes <code>y=u1+u2</code> so <code>dep_ut=[%t %f]</code>.
                        </para>
                        <para>
                        </para>
                        <para>
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    Size : 2.
                </para>
                <para>
                    Type : Boolean vector.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">label</emphasis>
                </para>
                <para> String that defines a label. It can be used to identify a block in order to access or modify its parameters during simulation.</para>
                <para>
                    Size : 1.
                </para>
                <para>
                    Type : string.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">nzcross</emphasis>
                </para>
                <para> Number of zero-crossing surfaces.</para>
                <para>
                    Size : Number of zero-crossing surfaces.
                </para>
                <para>
                    Type : column vector of integer numbers.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">nmode</emphasis>
                </para>
                <para> Length of the mode register. Note that this gives the size of the vector mode and not the total number of modes in which a block can operate in. Suppose a block has 3 modes and each mode can take two values, then the block can have up to 23=8 modes.</para>
                <para>
                    Size : Number of modes.
                </para>
                <para>
                    Type : column vector of integer numbers.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">equations</emphasis>
                </para>
                <para> Used in case of implicit blocks.</para>
                <para> Data structure of type modelica which contains modelica code description if any. That list contains four entries :
                    
                </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            <emphasis role="bold">model</emphasis>
                        </para>
                        <para>
                            a string given the name of the file that contains
                            the modelica function.
                        </para>
                        <para>
                            
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis role="bold">inputs</emphasis>
                        </para>
                        <para>
                            a column vector of strings that contains the names of
                            the modelica variables used as inputs.
                        </para>
                        <para>
                            
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis role="bold">outputs</emphasis>
                        </para>
                        <para>
                            a column vector of strings that contains the names of
                            the modelica variables used as outputs.
                        </para>
                        <para>
                            
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            <emphasis role="bold">parameters</emphasis>
                        </para>
                        <para>
                            a list with two entries. The first is a vector of strings
                            for the name of modelica variable names used as parameters
                            and the second entries is a list that contains the value of
                            parameters.
                        </para>
                        <para>
                            Names of modelica states can also be informed with
                            parameters. In that case a third entry is used to do the
                            difference between parameters and states.
                        </para>
                        <para>
                            For i,e :
                            mo.parameters=list(['C','v'],list(C,v),[0,1])
                            means that 'C' is a parameter(0) of value C, and 'v'
                            is a state(1) with initial value v.
                        </para>
                        <para>
                        </para>
                        <para>
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    Size : 5.
                </para>
                <para>
                    Type : scilab list.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="bold">uid</emphasis>
                </para>
                <para>Unique identifier string of the block (2^16 per host)</para>
                <para>This identifier will be only set using the Xcos GUI. To set a specific value at bloc allocation, use the following code:</para>
                <programlisting role="example">
                    jimport("java.rmi.server.UID");
                    juid =  jnewInstance("java.rmi.server.UID");
                    uid = juid.toString()
                </programlisting>
                <para>
                    Size : 1x1.
                </para>
                <para>
                    Type : String.
                </para>
            </listitem>
        </itemizedlist>
    </refsection>
    <refsection id="Filecontent_scicos_model">
        <title>File content</title>
        <itemizedlist>
            <listitem>
                <para> SCI/modules/scicos/macros/scicos_scicos/scicos_model.sci</para>
            </listitem>
        </itemizedlist>
    </refsection>
</refentry>
