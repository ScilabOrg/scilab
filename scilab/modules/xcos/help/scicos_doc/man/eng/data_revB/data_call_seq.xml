<!--  Scicos

   Copyright (C) INRIA - METALAU Project <scicos@inria.fr>

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 2 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

  See the file ../license.txt
-->

<DATA flag="cseq">

<FILE name='ABCD_Blocks' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>
   </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='About_scicos' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>
   </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='C_macros' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>
   </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='C_struct' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>
   </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='C_utils' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>
   </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='Context' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>
   </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='Keyboard_shortcuts' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>
   </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='Menu_entries' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>
   </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='Multiwindow' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>
   </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='block_type' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>
   </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='buildouttb' type='XML'>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>
      [outtb]=buildouttb(lnksz,lnktyp)
    </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='create_palette' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>[routines,IntFunc] = create_palette(Path)</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='curblock' type='XML'>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>
      blk=curblock()
    </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='data_type' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>
   </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='get_scicos_version' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>scicos_ver = get_scicos_version</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='getblocklabel' type='XML'>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>
      [label]=getblocklabel(blk)
    </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='getscicosvars' type='XML'>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>
      [myvar]=getscicosvars(str)
    </CALLING_SEQUENCE_ITEM>
    <CALLING_SEQUENCE_ITEM>
      [myvar]=getscicosvars([str1;str2;...])
    </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='lincos' type='XML'>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>sys= lincos(scs_m [,x0,u0 [,param] ])</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='phase_simulation' type='XML'>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>
      [psim]=phase_simulation()
    </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='pointer_xproperty' type='XML'>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>
      [xprop]=pointer_xproperty
    </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='sci_struct' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>
   </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='scicos' type='XML'>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>
      scs_m = scicos([toto])
    </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='scicos_block' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>blk = scicos_block(v1,v2,v3,v4,v5)</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='scicos_block4_rout' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>
   </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='scicos_cpr' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>cpr = scicos_cpr(v1,v2,v3,v4,v5,v6,v7,v8,v9,v10)</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='scicos_debug' type='XML'>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>
      scicos_debug(level)
    </CALLING_SEQUENCE_ITEM>
    <CALLING_SEQUENCE_ITEM>
      level=scicos_debug()
    </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='scicos_diagram' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>scs_m = scicos_diagram(v1,v2,v3)</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='scicos_graphics' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>graphics = scicos_graphics(v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20)</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='scicos_link' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>lnk = scicos_link(v1,v2,v3,v4,v5,v6,v7,v8)</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='scicos_model' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>model = scicos_model(v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26)</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='scicos_params' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>params = scicos_params(v1,v2,v3,v4,v5,v6,v7,v8,v9,v10)</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='scicos_sim' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>sim = scicos_sim(v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v25,v26,v27,v28,v29,v30,v31,v32,v33,v34,v35,v36,v37,v38,v39,v40)</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='scicos_simulate' type='XML'>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>
      Info=scicos_simulate(scs_m,Info[,%scicos_context][,flag])
    </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='scicos_state' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>state = scicos_state(v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11)</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='scicos_time' type='XML'>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>
      t=scicos_time()
    </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='scicosim' type='XML'>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>
    [state,t] = scicosim(state,tcur,tf,sim,str,tol)</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='set_blockerror' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>set_blockerror(n)</CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='set_xproperty' type='XML'>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>
      set_xproperty(xprop)
    </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='steadycos' type='XML'>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>
      [X,U,Y,XP]=steadycos(scs_m,X,U,Y,Indx,Indu,Indy [,Indxp [,param ] ])
    </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='use_flag' type='XML'>
  <CALLING_SEQUENCE>
  <CALLING_SEQUENCE_ITEM>
   </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='var2vec' type='XML'>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>
      [vec]=var2vec(var)
    </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>

<FILE name='vec2var' type='XML'>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>
      [var]=vec2var(vec)
    </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
</FILE>


</DATA>
