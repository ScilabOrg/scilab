
// ============================================================================

// Scilab ( http://www.scilab.org/ ) - This file is part of Scilab

// Copyright (C) 2009 - DIGITEO - Allan CORNET

//

//  This file is distributed under the same license as the Scilab package.

// ============================================================================

// <-- JVM NOT MANDATORY -->

// <-- ENGLISH IMPOSED -->

// ============================================================================

// Unitary tests for mxGetScalar mex function

// ============================================================================

cd(TMPDIR);

mputl([ '#include ""mex.h""';
        '';
        'void mexFunction(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[])';
        '{';
        '   double dblScalar = 0;';
        '   mxArray* pOut = NULL;';
        '';
        '   if(nrhs != 1 /*|| !mxIsDouble(prhs[0])*/)';
        '   {';
        '       mexErrMsgTxt(""Wrong number or type of input argument"");';
        '   }';
        '';
        '   dblScalar = mxGetScalar(prhs[0]);';
        '   pOut = mxCreateDoubleScalar(dblScalar);';
        '   plhs[0] = pOut;';
        '}'],'mexGetScalar.c');

ilib_mex_build('libmex',['getScalar','mexGetScalar','cmex'], 'mexGetScalar.c',[],'Makelib','','','');
   Generate a gateway file
   Generate a loader file
   Generate a Makefile
   ilib_gen_Make: Copy compilation files (Makefile*, libtool...) to TMPDIR
   ilib_gen_Make: Copy mexGetScalar.c to TMPDIR
   ilib_gen_Make: Copy libmex.c to TMPDIR
   ilib_gen_Make: configure : Generate Makefile.
   ilib_gen_Make: Modification of the Makefile in TMPDIR.
   Running the makefile
   Generate a cleaner file

exec('loader.sce');
Shared archive loaded.
Link done.

a = 1:10;

if getScalar(a) <> 1 then pause end

if getScalar(int8(a)) <> 1 then pause end

if getScalar(uint8(a)) <> 1 then pause end

if getScalar(int16(a)) <> 1 then pause end

if getScalar( uint16(a)) <> 1 then pause end

if getScalar(int32(a)) <> 1 then pause end

if getScalar(uint32(a)) <> 1 then pause end

if getScalar(int64(a)) <> 1 then pause end

if getScalar(uint64(a)) <> 1 then pause end

