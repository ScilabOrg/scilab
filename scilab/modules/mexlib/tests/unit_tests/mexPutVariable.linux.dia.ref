
// ============================================================================

// Scilab ( http://www.scilab.org/ ) - This file is part of Scilab

// Copyright (C) 2011-2011 - Gsoc 2011 - Iuri SILVIO

//

//  This file is distributed under the same license as the Scilab package.

// ============================================================================

// <-- JVM NOT MANDATORY -->

// <-- ENGLISH IMPOSED -->

// ============================================================================

// Unitary tests for mexPutVariable mex function

// ============================================================================

cd(TMPDIR);
mputl([ '#include ""mex.h""';
        'void mexFunction(int nlhs, mxArray *plhs[], int nrhs, mxArray *prhs[])';
        '{';
        '    char *workspace = mxArrayToString(prhs[0]);';
        '    char *name = mxArrayToString(prhs[1]);';
        '    mxArray *pOut = mexPutVariable(workspace, name, prhs[2]);';
        '}'],'mexputVariable.c');
ilib_mex_build('libmextest', ['putVariable', 'mexputVariable', 'cmex'], 'mexputVariable.c', [], 'Makelib', '', '', '');
   Generate a gateway file
   Generate a loader file
   Generate a Makefile
   ilib_gen_Make: Copy compilation files (Makefile*, libtool...) to TMPDIR
   ilib_gen_Make: Copy mexputVariable.c to TMPDIR
   ilib_gen_Make: Copy libmextest.c to TMPDIR
   ilib_gen_Make: configure : Generate Makefile.
   ilib_gen_Make: Modification of the Makefile in TMPDIR.
   Running the makefile
   Generate a cleaner file

exec('loader.sce');
Shared archive loaded.
Link done.

global globalvar;

putVariable("global", "globalvar", 32);

if globalvar <> 32 then pause end

if isglobal('globalvar') <> %t then pause end

othervar = 1;

putVariable("base", "othervar", 3);

if othervar <> 3 then pause end

if isglobal('othervar') <> %f then pause end

putVariable("caller", "defined_in_C", 0);

if exists('defined_in_C') <> 1 then pause end
