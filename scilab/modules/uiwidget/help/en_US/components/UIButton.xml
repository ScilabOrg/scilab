<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2013 - Scilab Enterprises - Calixte DENIZET
 *
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="uibutton" xml:lang="en">
    <refnamediv>
        <refname>UIButton</refname>
        <refpurpose>Button</refpurpose>
    </refnamediv>
    <refsection>
        <title>Description</title>
        <para>
            Draw a button.
        </para>
        <refsection>
            <title>Properties list</title>
            <simplelist type="inline">
                <member>
                    alignment: controls the alignment of the text. It could be one of the five values: "leading", "center", "left", "right" and "trailing". By default it is set to "leading".  
                </member>
                <member>
                    background: controls the background color. The value could be a string with an hexadecimal color code (such as "#FF0000" for red) or a double matrix (with values between 0 and 1) or an integer matrix (with values between 0 and 255).  
                </member>
                <member>
                    backgroundColor: same as above.  
                </member>
                <member>
                    blueRollover: controls if the button must have a blue rollover icon. The value is a boolean or one of the strings "true", "false", "on" or "off". 
                </member>
                <member>
                    border: controls the border of the button. See <link linkend="border">border</link> to have more information on how to define a border.  
                </member>
                <member>
                    borderPainted: controls if the border of the button is drawn or not. The value is a boolean or one of the strings "true", "false", "on" or "off".
                </member>
                <member>
                    bounds: controls the button bounds. The value is a matrix 1x4 or 4x1 containing the values [posX, posY, width, height].
                </member>
                <member>
                    color: controls the foreground color.
                </member>
                <member>
                    constraint: controls the constraint applied to the button when added in a panel which has a layout. See <link linkend="layout">layout</link> to have more information on how to define a layout constraint.
                </member>
                <member>
                    contentAreaFilled: controls if the content area of the button is filled or not. By default the value is true.
                </member>
                <member>
                    cursor: controls the cursor (mouse pointer) to display when the mouse pointer is on this button. See <link linkend="cursor">cursor</link> to have more information on how to define a cursor.
                </member>
                <member>
                    disabledIcon: controls the icon to display when the button is disabled. See <link linkend="icon">icon</link> to have more information on how to define an icon.
                </member>
                <member>
                    disabledSelectedIcon: controls the icon to display when the button is disabled and selected. See <link linkend="icon">icon</link> to have more information on how to define an icon.
                </member>
                <member>
                    doubleBuffered: controls if the button must use double buffering.
                </member>
                <member>
                    enableEvents: controls if the button must be notified when a mouse or key event occured.
                </member>
                <member>
                    enabled: controls if the button is enabled or not.
                </member>
                <member>
                    focusable: controls if the button is focusable or not.
                </member>
                <member>
                    font: controls the font used to draw the text in the button. See <link linkend="font">font</link> to have more information on how to define a font.
                </member>
                <member>
                    fontAngle: controls the font angle used to draw the text in the button. The value could be one of the values "normal" or "italic". 
                </member>
                <member>
                    fontSize: controls the font size used to draw the text in the button.
                </member>
                <member>
                    fontWeight: controls the font weight used to draw the text in the button. The value could be one of the values "extra_light", "light", "demilight", "regular", "demibold", "bold", "heavy", "extrabold" and "ultrabold". 
                </member>
                <member>
                    foreground: controls the foreground color.
                </member>
                <member>
                    foregroundColor: same as above.
                </member>
                <member>
                    horizontalAlignment: controls the alignment of the text. It could be one of the five values: "leading", "center", "left", "right" and "trailing". By default it is set to "leading".  
                </member>
                <member>
                    icon: controls the icon to display in the button. See <link linkend="icon">icon</link> to have more information on how to define an icon.
                </member>
                <member>
                    iconTextGap: controls the gap between the icon and the text.
                </member>
                <member>
                    id: controls the id of the UIWidget.
                </member>
                <member>
                    label: controls the text of the button.
                </member>
                <member>
                    location: controls the location of the button.
                </member>
                <member>
                    margin: controls the insets of the button. The insets is row-matrix with four elements: [top left bottom right].
                </member>
                <member>
                    maximumSize: controls the maximum size of the button (useful in layout like gridbag).
                </member>
                <member>
                    minimumSize: controls the minimum size of the button (useful in layout like gridbag).
                </member>
                <member>
                    mnemonic: controls the mnemonic associated with this button. The expected value is a string with one character.
                </member>
                <member>
                    onclick: a Scilab function name to call when the button is clicked.
                </member>
                <member>
                    onclickEnable: controls if the onclick callback must be called.
                </member>
                <member>
                    onfocusgain: a Scilab function name to call when the button gained the focus.
                </member>
                <member>
                    onfocusgainEnable: controls if the onfocusgain callback must be called.
                </member>
                <member>
                    onfocusloss: a Scilab function name to call when the button lost the focus.
                </member>
                <member>
                    onfocuslossEnable: controls if the onfocusloss callback must be called.
                </member>
                <member>
                    onmouseenter: a Scilab function name to call when mouse pointer enters in button area.
                </member>
                <member>
                    onmouseenterEnable: controls if the onmouseenter callback must be called.
                </member>
                <member>
                    onmouseexit: a Scilab function name to call when mouse pointer exits in button area.
                </member>
                <member>
                    onmouseexitEnable: controls if the onmouseexit callback must be called.
                </member>
                <member>
                    onmouseover: a Scilab function name to call when mouse pointer is over the button area.
                </member>
                <member>
                    onmouseoverEnable: controls if the onmouseover callback must be called.
                </member>
                <member>
                    opaque: controls the opacity of the button.
                </member>
                <member>
                    parent: the button's parent.
                </member>
                <member>
                    position: controls the position of the button in the parent container. Setting the position will work only when the parent container has the NoLayout layout.
                </member>
                <member>
                    preferredSize: controls the preferred size of the button (useful in layout like gridbag).
                </member>
                <member>
                    pressedIcon: controls the icon to use when the button is pressed.
                </member>
                <member>
                    relief: controls the relief of the button. See <link linkend="relief">relief</link> to have more information on how to define a relief.
                </member>
                <member>
                    rolloverEnabled: controls if the rollover is enabled on the button.
                </member>
                <member>
                    rolloverIcon: controls the icon to use for the rollover. See <link linkend="icon">icon</link> to have more information on how to define an icon.
                </member>
                <member>
                    rolloverSelectedIcon: controls the icon to use for the rollover when the button is selected. See <link linkend="icon">icon</link> to have more information on how to define an icon.
                </member>
                <member>
                    selected: controls if the button is selected or not.
                </member>
                <member>
                    selectedIcon: controls the icon to use when the button is selected. See <link linkend="icon">icon</link> to have more information on how to define an icon.
                </member>
                <member>
                    tag: same thing as id.
                </member>
                <member>
                    text: controls the text to put in the button. If the text contains the special character '&amp;', the following character will be used as mnemonic. 
                </member>
                <member>
                    tooltipText: controls the tooltip text to display when the mouse is over the button.
                </member>
                <member>
                    uistyle: controls the font's style on the button. See <link linkend="uistyle">uistyle</link> to have more information on how to define an uistyle.
                </member>
                <member>
                    units: controls the unit to use to position the button when placed in a container which has NoLayout layout.
                </member>
                <member>
                    visible: controls the visibility of the button.
                </member>
            </simplelist>
        </refsection>
        
        <para>
            An UIButton is used to have a classical push button. It can contains a text (with a mnemonic) and an icon.
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[
function b1_callback(obj)
    if obj.icon == "scilab" then
        obj.icon = "plot";
    else
        obj.icon = "scilab";
    end
endfunction

win = uiwidget("style", "UIFrame", "visible", %f);
panel = uiwidget(win, "style", "UIPanel", "layout", "name: gridbag");
b1 = uiwidget(panel, "style", "UIButton", "text", "&Button 1", "icon", "scilab", "tooltip-text", "Button 1", "onclick", "b1_callback", "constraint", "gridx:1; gridy:1; fill:both");
b2 = uiwidget(panel, "style", "UIButton", "text", "Open Scilab website", "icon", "plot", "onclick", "http://www.scilab.org", "constraint", "gridx:2; gridy:1; fill:both");
b3 = uiwidget(panel, "style", "UIButton", "text", "Bu&tton 3", "icon", "plot", "constraint", "gridx:1; gridy:2; gridwidth:2; fill:both");
b4 = uiwidget(panel, "style", "UIButton", "text", "Butt&on 4", "icon", "plot", "constraint", "gridx:3; gridy:1; gridheight:2; fill:both");
win.visible = %t;
]]></programlisting>
    </refsection>
     
</refentry>


