# Makefile.in generated by automake 1.10.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

##########
### Sylvestre Ledru <sylvestre.ledru@inria.fr>
### Vincent Couvert <vincent.couvert@inria.fr>
### INRIA - Scilab 2007
##########

# Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
# Copyright (C) 2006-2008 - INRIA - Sylvestre LEDRU <sylvestre.ledru@inria.fr>
# Copyright (C) 2008      - INRIA - Pierre MARECHAL <pierre.marechal@inria.fr>
#
# This file must be used under the terms of the CeCILL.
# This source file is licensed as described in the file COPYING, which
# you should have received as part of this distribution.  The terms
# are also available at
# http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
#

##########
### Makefile included stuff
### Target, variable, suffixes which are supposed to be usefull in every makefile.am
##########



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(libsciconsole_la_include_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.incl.am
@GUI_TRUE@am__append_1 = java
@SWIG_TRUE@am__append_2 = swig
@GIWS_TRUE@am__append_3 = giws
subdir = modules/console
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/fftw.m4 \
	$(top_srcdir)/m4/fortran.m4 $(top_srcdir)/m4/giws.m4 \
	$(top_srcdir)/m4/intel_compiler.m4 $(top_srcdir)/m4/java.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/libs_by_debian.m4 \
	$(top_srcdir)/m4/libsmath.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/libxml2.m4 $(top_srcdir)/m4/matio.m4 \
	$(top_srcdir)/m4/ocaml.m4 $(top_srcdir)/m4/pcre.m4 \
	$(top_srcdir)/m4/pvm.m4 $(top_srcdir)/m4/relocatable.m4 \
	$(top_srcdir)/m4/sciman.m4 $(top_srcdir)/m4/swig.m4 \
	$(top_srcdir)/m4/symlinks.m4 $(top_srcdir)/m4/tcltk.m4 \
	$(top_srcdir)/m4/umfpack.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/modules/core/includes/machine.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(pkglibdir)" \
	"$(DESTDIR)$(libsciconsole_la_etcdir)" \
	"$(DESTDIR)$(libsciconsole_la_rootdir)" \
	"$(DESTDIR)$(libsciconsole_la_includedir)"
pkglibLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(pkglib_LTLIBRARIES)
libsciconsole_la_DEPENDENCIES = $(top_builddir)/modules/action_binding/libsciaction_binding.la \
	$(top_builddir)/modules/shell/libscishell.la \
	$(top_builddir)/modules/fileio/libscifileio.la \
	$(top_builddir)/libs/MALLOC/libscimalloc.la
am__libsciconsole_la_SOURCES_DIST = src/jni/GuiManagement_wrap.c \
	src/jni/DropFiles_wrap.c src/noconsole/noconsole.c \
	src/c/InitializeConsole.c src/c/GuiManagement.c \
	src/c/dropFiles.c src/jni/CallScilabBridge.cpp \
	src/cpp/ClearConsole.cpp src/cpp/ClearConsolePart.cpp \
	src/cpp/ConsolePrintf.cpp src/cpp/ConsoleRead.cpp \
	src/cpp/ConsoleIsWaitingForInput.cpp \
	src/cpp/GetCharWithoutOutput.cpp src/cpp/PromptToHome.cpp \
	src/cpp/ScilabLinesUpdate.cpp src/cpp/SetConsolePrompt.cpp
@GUI_TRUE@am__objects_1 = libsciconsole_la-GuiManagement_wrap.lo \
@GUI_TRUE@	libsciconsole_la-DropFiles_wrap.lo
@GUI_FALSE@am__objects_2 = libsciconsole_la-noconsole.lo
@GUI_TRUE@am__objects_2 = libsciconsole_la-InitializeConsole.lo \
@GUI_TRUE@	libsciconsole_la-GuiManagement.lo \
@GUI_TRUE@	libsciconsole_la-dropFiles.lo
@GUI_TRUE@am__objects_3 = libsciconsole_la-CallScilabBridge.lo
@GUI_TRUE@am__objects_4 = libsciconsole_la-ClearConsole.lo \
@GUI_TRUE@	libsciconsole_la-ClearConsolePart.lo \
@GUI_TRUE@	libsciconsole_la-ConsolePrintf.lo \
@GUI_TRUE@	libsciconsole_la-ConsoleRead.lo \
@GUI_TRUE@	libsciconsole_la-ConsoleIsWaitingForInput.lo \
@GUI_TRUE@	libsciconsole_la-GetCharWithoutOutput.lo \
@GUI_TRUE@	libsciconsole_la-PromptToHome.lo \
@GUI_TRUE@	libsciconsole_la-ScilabLinesUpdate.lo \
@GUI_TRUE@	libsciconsole_la-SetConsolePrompt.lo
am_libsciconsole_la_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4)
libsciconsole_la_OBJECTS = $(am_libsciconsole_la_OBJECTS)
libsciconsole_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libsciconsole_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/modules/core/includes
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libsciconsole_la_SOURCES)
DIST_SOURCES = $(am__libsciconsole_la_SOURCES_DIST)
libsciconsole_la_etcDATA_INSTALL = $(INSTALL_DATA)
libsciconsole_la_rootDATA_INSTALL = $(INSTALL_DATA)
DATA = $(libsciconsole_la_etc_DATA) $(libsciconsole_la_root_DATA)
libsciconsole_la_includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(libsciconsole_la_include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALL_LINGUAS = @ALL_LINGUAS@
AMTAR = @AMTAR@
ANT = @ANT@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BATIK = @BATIK@
BLAS_LIBS = @BLAS_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
COMMONS_LOGGING = @COMMONS_LOGGING@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FFTW3_LIB = @FFTW3_LIB@
FFTW_ENABLE = @FFTW_ENABLE@
FLEXDOCK = @FLEXDOCK@
FLIBS = @FLIBS@
FOP = @FOP@
GIWS_BIN = @GIWS_BIN@
GLUEGEN_RT = @GLUEGEN_RT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JAR = @JAR@
JAVA = @JAVA@
JAVAC = @JAVAC@
JAVAH = @JAVAH@
JAVA_G = @JAVA_G@
JAVA_HOME = @JAVA_HOME@
JAVA_JNI_INCLUDE = @JAVA_JNI_INCLUDE@
JAVA_JNI_LIBS = @JAVA_JNI_LIBS@
JDB = @JDB@
JEUCLID_CORE = @JEUCLID_CORE@
JHALL = @JHALL@
JOGL = @JOGL@
JROSETTA_API = @JROSETTA_API@
JROSETTA_ENGINE = @JROSETTA_ENGINE@
LAPACK_LIBS = @LAPACK_LIBS@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANGENERATOR = @MANGENERATOR@
MATIO_CFLAGS = @MATIO_CFLAGS@
MATIO_ENABLE = @MATIO_ENABLE@
MATIO_LIB = @MATIO_LIB@
MKDIR_P = @MKDIR_P@
MSGCAT = @MSGCAT@
MSGFMT = @MSGFMT@
NM = @NM@
NMEDIT = @NMEDIT@
OBJEXT = @OBJEXT@
OCAMLC = @OCAMLC@
OCAMLDEP = @OCAMLDEP@
OCAMLLEX = @OCAMLLEX@
OCAMLOPT = @OCAMLOPT@
OCAMLYACC = @OCAMLYACC@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PCRE_CFLAGS = @PCRE_CFLAGS@
PCRE_CONFIG = @PCRE_CONFIG@
PCRE_LIBS = @PCRE_LIBS@
PCRE_VERSION = @PCRE_VERSION@
POW_LIB = @POW_LIB@
PVMARCH = @PVMARCH@
PVMGETARCH = @PVMGETARCH@
PVM_ENABLE = @PVM_ENABLE@
PVM_INCLUDE = @PVM_INCLUDE@
PVM_LIB = @PVM_LIB@
PYTHON = @PYTHON@
RANLIB = @RANLIB@
RELOCATABLE = @RELOCATABLE@
RT_LIB = @RT_LIB@
SAXON = @SAXON@
SCICOS_ENABLE = @SCICOS_ENABLE@
SCILAB_LIBRARY_VERSION = @SCILAB_LIBRARY_VERSION@
SED = @SED@
SET_MAKE = @SET_MAKE@
SET_RELOCATABLE = @SET_RELOCATABLE@
SHELL = @SHELL@
STRIP = @STRIP@
SWIG_BIN = @SWIG_BIN@
SWIG_JAVA = @SWIG_JAVA@
SWIG_RUNTIME_LIBS_DIR = @SWIG_RUNTIME_LIBS_DIR@
TCLTK_LIBS = @TCLTK_LIBS@
TCL_INC_PATH = @TCL_INC_PATH@
TERMCAP_LIB = @TERMCAP_LIB@
TK_INC_PATH = @TK_INC_PATH@
UMFPACK_ENABLE = @UMFPACK_ENABLE@
UMFPACK_LIB = @UMFPACK_LIB@
VERSION = @VERSION@
WITH = @WITH@
WITH_OCAML = @WITH_OCAML@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XML_CONFIG = @XML_CONFIG@
XML_FLAGS = @XML_FLAGS@
XML_LIBS = @XML_LIBS@
XML_VERSION = @XML_VERSION@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
cxx_present = @cxx_present@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# List of the cpp files
@GUI_TRUE@CONSOLE_CPP_JNI_SOURCES = src/jni/CallScilabBridge.cpp
@GUI_TRUE@CONSOLE_CPP_SOURCES = src/cpp/ClearConsole.cpp \
@GUI_TRUE@src/cpp/ClearConsolePart.cpp \
@GUI_TRUE@src/cpp/ConsolePrintf.cpp \
@GUI_TRUE@src/cpp/ConsoleRead.cpp \
@GUI_TRUE@src/cpp/ConsoleIsWaitingForInput.cpp \
@GUI_TRUE@src/cpp/GetCharWithoutOutput.cpp \
@GUI_TRUE@src/cpp/PromptToHome.cpp \
@GUI_TRUE@src/cpp/ScilabLinesUpdate.cpp \
@GUI_TRUE@src/cpp/SetConsolePrompt.cpp


# List of the c files
@GUI_TRUE@CONSOLE_C_JNI_SOURCES = src/jni/GuiManagement_wrap.c \
@GUI_TRUE@src/jni/DropFiles_wrap.c


# List of the c files
@GUI_FALSE@CONSOLE_C_SOURCES = src/noconsole/noconsole.c
@GUI_TRUE@CONSOLE_C_SOURCES = src/c/InitializeConsole.c \
@GUI_TRUE@src/c/GuiManagement.c \
@GUI_TRUE@src/c/dropFiles.c

@GUI_TRUE@GIWS_WRAPPERS = src/jni/CallScilabBridge.giws.xml

# Includes need for the compilation
libsciconsole_la_CPPFLAGS = $(JAVA_JNI_INCLUDE) -Iincludes/ -Isrc/cpp/ -Isrc/c/ -Isrc/jni/ -I$(top_srcdir)/libs/MALLOC/includes/ -I$(top_srcdir)/modules/jvm/includes/ -I$(top_srcdir)/modules/action_binding/includes

# Includes need for the compilation
libsciconsole_la_CFLAGS = $(JAVA_JNI_INCLUDE) \
				-Iincludes/ \
				-Isrc/c/ \
				-I$(top_srcdir)/libs/MALLOC/includes/ \
				-I$(top_srcdir)/modules/output_stream/includes


# Name of the library
pkglib_LTLIBRARIES = libsciconsole.la
libsciconsole_la_LDFLAGS = -version-info $(SCILAB_LIBRARY_VERSION)

# All the sources needed by libsciconsole.la
libsciconsole_la_SOURCES = $(CONSOLE_C_JNI_SOURCES) $(CONSOLE_C_SOURCES) $(CONSOLE_CPP_JNI_SOURCES) $(CONSOLE_CPP_SOURCES)
libsciconsole_la_LIBADD = $(top_builddir)/modules/action_binding/libsciaction_binding.la $(top_builddir)/modules/shell/libscishell.la $(top_builddir)/modules/fileio/libscifileio.la $(top_builddir)/libs/MALLOC/libscimalloc.la 
# java code is needed $(top_builddir)/modules/jvm/libscijvm.la
#### Name of the module and the path ######
modulename = console

#### console : Conf files ####
libsciconsole_la_rootdir = $(mydatadir)
libsciconsole_la_root_DATA = changelog.txt license.txt readme.txt version.xml

####�console : init scripts ####
libsciconsole_la_etcdir = $(mydatadir)/etc
libsciconsole_la_etc_DATA = etc/console.quit etc/console.start etc/configuration.xml

####�SWIG Declaration ####
SWIG_WRAPPERS = src/jni/GuiManagement.i

####�console : include files ####
libsciconsole_la_includedir = $(pkgincludedir)/console
libsciconsole_la_include_HEADERS = includes/ClearConsole.h \
includes/ClearConsolePart.h \
includes/ConsolePrintf.h \
includes/ConsoleRead.h \
includes/GetCharWithoutOutput.h \
includes/InitializeConsole.h \
includes/PromptToHome.h \
includes/ScilabLinesUpdate.h \
includes/SetConsolePrompt.h \
includes/ClearConsole.hxx \
includes/ClearConsolePart.hxx \
includes/ConsoleIsWaitingForInput.h \
includes/ConsoleIsWaitingForInput.hxx \
includes/ConsolePrintf.hxx \
includes/ConsoleRead.hxx \
includes/GetCharWithoutOutput.hxx \
includes/PromptToHome.hxx \
includes/ScilabLinesUpdate.hxx \
includes/SetConsolePrompt.hxx


# Provides macros compilation, Java compilation, cleaning
# If you want Makefile to call ant, add USEANT=1
@GUI_TRUE@USEANT = 1

# Where all the Scilab stuff is installed (macros, help, ...)
mydatadir = $(pkgdatadir)/modules/$(modulename)

########################### JAVA ######################################
#### We are delegating java compilation to ant... Thanks to that
#### the procedure will be the same with Microsoft Windows (C)
#### and Linux/Unix
#######################################################################
TARGETS_ALL = $(am__append_1) $(am__append_2) $(am__append_3)

################ MACROS ######################
# Rule to build a macro
# NOT USED  AT THE MOMENT
SUFFIXES = .sci 

########### INSTALL DOCUMENTATION ###################

# Install HTML files into the right target
# We do not use the automake mechanism (libxxxx_la_help_fr_DATA) because
# automake needs the html files to be present which is not the case when
# we are building Scilab

# Where it should be installed
pkgdocdir = $(mydatadir)

# Which directories we have to install
DOCDIRS = help/fr_FR help/en_US

# What is the mask of the help output
DOCMASK = *.htm

# Which directories we have to install
DOCIMGDIRS = help/images
# What is the mask of the help images
DOCIMGMASK = *

# What is the mask of the help source
DOCMASKXML = *.xml

# Chapter file
HELP_CHAPTERFILE = addchapter.sce

########### INSTALL DATA ###################
# Install macros
# Where it should be installed
pkgmacrosdir = $(mydatadir)
# Which directory we process
MACRODIRS = macros/
# Mask of the Scilab sources macros
MACROMASK = *.sci
# Mask of the Scilab executable sources macros
MACROBUILDMASK = *.sce
# Mask of the Scilab compiled macros
MACROBINMASK = *.bin
# List of the function of a module
TESTS_DIR = tests/benchmarks tests/nonreg_tests tests/unit_tests
# Where to export JAVA files (.jar)
JARDIR = jar/
# JAR files
JARMASK = *.jar
all: all-am

.SUFFIXES:
.SUFFIXES: .sci .bin .c .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/Makefile.incl.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  modules/console/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  modules/console/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-pkglibLTLIBRARIES: $(pkglib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(pkglibdir)" || $(MKDIR_P) "$(DESTDIR)$(pkglibdir)"
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(pkglibLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(pkglibdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(pkglibLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(pkglibdir)/$$f"; \
	  else :; fi; \
	done

uninstall-pkglibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(pkglibdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(pkglibdir)/$$p"; \
	done

clean-pkglibLTLIBRARIES:
	-test -z "$(pkglib_LTLIBRARIES)" || rm -f $(pkglib_LTLIBRARIES)
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libsciconsole.la: $(libsciconsole_la_OBJECTS) $(libsciconsole_la_DEPENDENCIES) 
	$(libsciconsole_la_LINK) -rpath $(pkglibdir) $(libsciconsole_la_OBJECTS) $(libsciconsole_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libsciconsole_la-CallScilabBridge.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libsciconsole_la-ClearConsole.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libsciconsole_la-ClearConsolePart.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libsciconsole_la-ConsoleIsWaitingForInput.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libsciconsole_la-ConsolePrintf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libsciconsole_la-ConsoleRead.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libsciconsole_la-DropFiles_wrap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libsciconsole_la-GetCharWithoutOutput.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libsciconsole_la-GuiManagement.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libsciconsole_la-GuiManagement_wrap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libsciconsole_la-InitializeConsole.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libsciconsole_la-PromptToHome.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libsciconsole_la-ScilabLinesUpdate.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libsciconsole_la-SetConsolePrompt.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libsciconsole_la-dropFiles.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libsciconsole_la-noconsole.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

libsciconsole_la-GuiManagement_wrap.lo: src/jni/GuiManagement_wrap.c
@am__fastdepCC_TRUE@	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(libsciconsole_la_CFLAGS) $(CFLAGS) -MT libsciconsole_la-GuiManagement_wrap.lo -MD -MP -MF $(DEPDIR)/libsciconsole_la-GuiManagement_wrap.Tpo -c -o libsciconsole_la-GuiManagement_wrap.lo `test -f 'src/jni/GuiManagement_wrap.c' || echo '$(srcdir)/'`src/jni/GuiManagement_wrap.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/libsciconsole_la-GuiManagement_wrap.Tpo $(DEPDIR)/libsciconsole_la-GuiManagement_wrap.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/jni/GuiManagement_wrap.c' object='libsciconsole_la-GuiManagement_wrap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(libsciconsole_la_CFLAGS) $(CFLAGS) -c -o libsciconsole_la-GuiManagement_wrap.lo `test -f 'src/jni/GuiManagement_wrap.c' || echo '$(srcdir)/'`src/jni/GuiManagement_wrap.c

libsciconsole_la-DropFiles_wrap.lo: src/jni/DropFiles_wrap.c
@am__fastdepCC_TRUE@	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(libsciconsole_la_CFLAGS) $(CFLAGS) -MT libsciconsole_la-DropFiles_wrap.lo -MD -MP -MF $(DEPDIR)/libsciconsole_la-DropFiles_wrap.Tpo -c -o libsciconsole_la-DropFiles_wrap.lo `test -f 'src/jni/DropFiles_wrap.c' || echo '$(srcdir)/'`src/jni/DropFiles_wrap.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/libsciconsole_la-DropFiles_wrap.Tpo $(DEPDIR)/libsciconsole_la-DropFiles_wrap.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/jni/DropFiles_wrap.c' object='libsciconsole_la-DropFiles_wrap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(libsciconsole_la_CFLAGS) $(CFLAGS) -c -o libsciconsole_la-DropFiles_wrap.lo `test -f 'src/jni/DropFiles_wrap.c' || echo '$(srcdir)/'`src/jni/DropFiles_wrap.c

libsciconsole_la-noconsole.lo: src/noconsole/noconsole.c
@am__fastdepCC_TRUE@	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(libsciconsole_la_CFLAGS) $(CFLAGS) -MT libsciconsole_la-noconsole.lo -MD -MP -MF $(DEPDIR)/libsciconsole_la-noconsole.Tpo -c -o libsciconsole_la-noconsole.lo `test -f 'src/noconsole/noconsole.c' || echo '$(srcdir)/'`src/noconsole/noconsole.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/libsciconsole_la-noconsole.Tpo $(DEPDIR)/libsciconsole_la-noconsole.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/noconsole/noconsole.c' object='libsciconsole_la-noconsole.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(libsciconsole_la_CFLAGS) $(CFLAGS) -c -o libsciconsole_la-noconsole.lo `test -f 'src/noconsole/noconsole.c' || echo '$(srcdir)/'`src/noconsole/noconsole.c

libsciconsole_la-InitializeConsole.lo: src/c/InitializeConsole.c
@am__fastdepCC_TRUE@	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(libsciconsole_la_CFLAGS) $(CFLAGS) -MT libsciconsole_la-InitializeConsole.lo -MD -MP -MF $(DEPDIR)/libsciconsole_la-InitializeConsole.Tpo -c -o libsciconsole_la-InitializeConsole.lo `test -f 'src/c/InitializeConsole.c' || echo '$(srcdir)/'`src/c/InitializeConsole.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/libsciconsole_la-InitializeConsole.Tpo $(DEPDIR)/libsciconsole_la-InitializeConsole.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/c/InitializeConsole.c' object='libsciconsole_la-InitializeConsole.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(libsciconsole_la_CFLAGS) $(CFLAGS) -c -o libsciconsole_la-InitializeConsole.lo `test -f 'src/c/InitializeConsole.c' || echo '$(srcdir)/'`src/c/InitializeConsole.c

libsciconsole_la-GuiManagement.lo: src/c/GuiManagement.c
@am__fastdepCC_TRUE@	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(libsciconsole_la_CFLAGS) $(CFLAGS) -MT libsciconsole_la-GuiManagement.lo -MD -MP -MF $(DEPDIR)/libsciconsole_la-GuiManagement.Tpo -c -o libsciconsole_la-GuiManagement.lo `test -f 'src/c/GuiManagement.c' || echo '$(srcdir)/'`src/c/GuiManagement.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/libsciconsole_la-GuiManagement.Tpo $(DEPDIR)/libsciconsole_la-GuiManagement.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/c/GuiManagement.c' object='libsciconsole_la-GuiManagement.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(libsciconsole_la_CFLAGS) $(CFLAGS) -c -o libsciconsole_la-GuiManagement.lo `test -f 'src/c/GuiManagement.c' || echo '$(srcdir)/'`src/c/GuiManagement.c

libsciconsole_la-dropFiles.lo: src/c/dropFiles.c
@am__fastdepCC_TRUE@	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(libsciconsole_la_CFLAGS) $(CFLAGS) -MT libsciconsole_la-dropFiles.lo -MD -MP -MF $(DEPDIR)/libsciconsole_la-dropFiles.Tpo -c -o libsciconsole_la-dropFiles.lo `test -f 'src/c/dropFiles.c' || echo '$(srcdir)/'`src/c/dropFiles.c
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/libsciconsole_la-dropFiles.Tpo $(DEPDIR)/libsciconsole_la-dropFiles.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='src/c/dropFiles.c' object='libsciconsole_la-dropFiles.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(libsciconsole_la_CFLAGS) $(CFLAGS) -c -o libsciconsole_la-dropFiles.lo `test -f 'src/c/dropFiles.c' || echo '$(srcdir)/'`src/c/dropFiles.c

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

libsciconsole_la-CallScilabBridge.lo: src/jni/CallScilabBridge.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsciconsole_la-CallScilabBridge.lo -MD -MP -MF $(DEPDIR)/libsciconsole_la-CallScilabBridge.Tpo -c -o libsciconsole_la-CallScilabBridge.lo `test -f 'src/jni/CallScilabBridge.cpp' || echo '$(srcdir)/'`src/jni/CallScilabBridge.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libsciconsole_la-CallScilabBridge.Tpo $(DEPDIR)/libsciconsole_la-CallScilabBridge.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/jni/CallScilabBridge.cpp' object='libsciconsole_la-CallScilabBridge.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsciconsole_la-CallScilabBridge.lo `test -f 'src/jni/CallScilabBridge.cpp' || echo '$(srcdir)/'`src/jni/CallScilabBridge.cpp

libsciconsole_la-ClearConsole.lo: src/cpp/ClearConsole.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsciconsole_la-ClearConsole.lo -MD -MP -MF $(DEPDIR)/libsciconsole_la-ClearConsole.Tpo -c -o libsciconsole_la-ClearConsole.lo `test -f 'src/cpp/ClearConsole.cpp' || echo '$(srcdir)/'`src/cpp/ClearConsole.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libsciconsole_la-ClearConsole.Tpo $(DEPDIR)/libsciconsole_la-ClearConsole.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/cpp/ClearConsole.cpp' object='libsciconsole_la-ClearConsole.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsciconsole_la-ClearConsole.lo `test -f 'src/cpp/ClearConsole.cpp' || echo '$(srcdir)/'`src/cpp/ClearConsole.cpp

libsciconsole_la-ClearConsolePart.lo: src/cpp/ClearConsolePart.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsciconsole_la-ClearConsolePart.lo -MD -MP -MF $(DEPDIR)/libsciconsole_la-ClearConsolePart.Tpo -c -o libsciconsole_la-ClearConsolePart.lo `test -f 'src/cpp/ClearConsolePart.cpp' || echo '$(srcdir)/'`src/cpp/ClearConsolePart.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libsciconsole_la-ClearConsolePart.Tpo $(DEPDIR)/libsciconsole_la-ClearConsolePart.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/cpp/ClearConsolePart.cpp' object='libsciconsole_la-ClearConsolePart.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsciconsole_la-ClearConsolePart.lo `test -f 'src/cpp/ClearConsolePart.cpp' || echo '$(srcdir)/'`src/cpp/ClearConsolePart.cpp

libsciconsole_la-ConsolePrintf.lo: src/cpp/ConsolePrintf.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsciconsole_la-ConsolePrintf.lo -MD -MP -MF $(DEPDIR)/libsciconsole_la-ConsolePrintf.Tpo -c -o libsciconsole_la-ConsolePrintf.lo `test -f 'src/cpp/ConsolePrintf.cpp' || echo '$(srcdir)/'`src/cpp/ConsolePrintf.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libsciconsole_la-ConsolePrintf.Tpo $(DEPDIR)/libsciconsole_la-ConsolePrintf.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/cpp/ConsolePrintf.cpp' object='libsciconsole_la-ConsolePrintf.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsciconsole_la-ConsolePrintf.lo `test -f 'src/cpp/ConsolePrintf.cpp' || echo '$(srcdir)/'`src/cpp/ConsolePrintf.cpp

libsciconsole_la-ConsoleRead.lo: src/cpp/ConsoleRead.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsciconsole_la-ConsoleRead.lo -MD -MP -MF $(DEPDIR)/libsciconsole_la-ConsoleRead.Tpo -c -o libsciconsole_la-ConsoleRead.lo `test -f 'src/cpp/ConsoleRead.cpp' || echo '$(srcdir)/'`src/cpp/ConsoleRead.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libsciconsole_la-ConsoleRead.Tpo $(DEPDIR)/libsciconsole_la-ConsoleRead.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/cpp/ConsoleRead.cpp' object='libsciconsole_la-ConsoleRead.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsciconsole_la-ConsoleRead.lo `test -f 'src/cpp/ConsoleRead.cpp' || echo '$(srcdir)/'`src/cpp/ConsoleRead.cpp

libsciconsole_la-ConsoleIsWaitingForInput.lo: src/cpp/ConsoleIsWaitingForInput.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsciconsole_la-ConsoleIsWaitingForInput.lo -MD -MP -MF $(DEPDIR)/libsciconsole_la-ConsoleIsWaitingForInput.Tpo -c -o libsciconsole_la-ConsoleIsWaitingForInput.lo `test -f 'src/cpp/ConsoleIsWaitingForInput.cpp' || echo '$(srcdir)/'`src/cpp/ConsoleIsWaitingForInput.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libsciconsole_la-ConsoleIsWaitingForInput.Tpo $(DEPDIR)/libsciconsole_la-ConsoleIsWaitingForInput.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/cpp/ConsoleIsWaitingForInput.cpp' object='libsciconsole_la-ConsoleIsWaitingForInput.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsciconsole_la-ConsoleIsWaitingForInput.lo `test -f 'src/cpp/ConsoleIsWaitingForInput.cpp' || echo '$(srcdir)/'`src/cpp/ConsoleIsWaitingForInput.cpp

libsciconsole_la-GetCharWithoutOutput.lo: src/cpp/GetCharWithoutOutput.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsciconsole_la-GetCharWithoutOutput.lo -MD -MP -MF $(DEPDIR)/libsciconsole_la-GetCharWithoutOutput.Tpo -c -o libsciconsole_la-GetCharWithoutOutput.lo `test -f 'src/cpp/GetCharWithoutOutput.cpp' || echo '$(srcdir)/'`src/cpp/GetCharWithoutOutput.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libsciconsole_la-GetCharWithoutOutput.Tpo $(DEPDIR)/libsciconsole_la-GetCharWithoutOutput.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/cpp/GetCharWithoutOutput.cpp' object='libsciconsole_la-GetCharWithoutOutput.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsciconsole_la-GetCharWithoutOutput.lo `test -f 'src/cpp/GetCharWithoutOutput.cpp' || echo '$(srcdir)/'`src/cpp/GetCharWithoutOutput.cpp

libsciconsole_la-PromptToHome.lo: src/cpp/PromptToHome.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsciconsole_la-PromptToHome.lo -MD -MP -MF $(DEPDIR)/libsciconsole_la-PromptToHome.Tpo -c -o libsciconsole_la-PromptToHome.lo `test -f 'src/cpp/PromptToHome.cpp' || echo '$(srcdir)/'`src/cpp/PromptToHome.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libsciconsole_la-PromptToHome.Tpo $(DEPDIR)/libsciconsole_la-PromptToHome.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/cpp/PromptToHome.cpp' object='libsciconsole_la-PromptToHome.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsciconsole_la-PromptToHome.lo `test -f 'src/cpp/PromptToHome.cpp' || echo '$(srcdir)/'`src/cpp/PromptToHome.cpp

libsciconsole_la-ScilabLinesUpdate.lo: src/cpp/ScilabLinesUpdate.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsciconsole_la-ScilabLinesUpdate.lo -MD -MP -MF $(DEPDIR)/libsciconsole_la-ScilabLinesUpdate.Tpo -c -o libsciconsole_la-ScilabLinesUpdate.lo `test -f 'src/cpp/ScilabLinesUpdate.cpp' || echo '$(srcdir)/'`src/cpp/ScilabLinesUpdate.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libsciconsole_la-ScilabLinesUpdate.Tpo $(DEPDIR)/libsciconsole_la-ScilabLinesUpdate.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/cpp/ScilabLinesUpdate.cpp' object='libsciconsole_la-ScilabLinesUpdate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsciconsole_la-ScilabLinesUpdate.lo `test -f 'src/cpp/ScilabLinesUpdate.cpp' || echo '$(srcdir)/'`src/cpp/ScilabLinesUpdate.cpp

libsciconsole_la-SetConsolePrompt.lo: src/cpp/SetConsolePrompt.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libsciconsole_la-SetConsolePrompt.lo -MD -MP -MF $(DEPDIR)/libsciconsole_la-SetConsolePrompt.Tpo -c -o libsciconsole_la-SetConsolePrompt.lo `test -f 'src/cpp/SetConsolePrompt.cpp' || echo '$(srcdir)/'`src/cpp/SetConsolePrompt.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libsciconsole_la-SetConsolePrompt.Tpo $(DEPDIR)/libsciconsole_la-SetConsolePrompt.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='src/cpp/SetConsolePrompt.cpp' object='libsciconsole_la-SetConsolePrompt.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsciconsole_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libsciconsole_la-SetConsolePrompt.lo `test -f 'src/cpp/SetConsolePrompt.cpp' || echo '$(srcdir)/'`src/cpp/SetConsolePrompt.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-libsciconsole_la_etcDATA: $(libsciconsole_la_etc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(libsciconsole_la_etcdir)" || $(MKDIR_P) "$(DESTDIR)$(libsciconsole_la_etcdir)"
	@list='$(libsciconsole_la_etc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libsciconsole_la_etcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(libsciconsole_la_etcdir)/$$f'"; \
	  $(libsciconsole_la_etcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(libsciconsole_la_etcdir)/$$f"; \
	done

uninstall-libsciconsole_la_etcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libsciconsole_la_etc_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libsciconsole_la_etcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libsciconsole_la_etcdir)/$$f"; \
	done
install-libsciconsole_la_rootDATA: $(libsciconsole_la_root_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(libsciconsole_la_rootdir)" || $(MKDIR_P) "$(DESTDIR)$(libsciconsole_la_rootdir)"
	@list='$(libsciconsole_la_root_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libsciconsole_la_rootDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(libsciconsole_la_rootdir)/$$f'"; \
	  $(libsciconsole_la_rootDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(libsciconsole_la_rootdir)/$$f"; \
	done

uninstall-libsciconsole_la_rootDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libsciconsole_la_root_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libsciconsole_la_rootdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libsciconsole_la_rootdir)/$$f"; \
	done
install-libsciconsole_la_includeHEADERS: $(libsciconsole_la_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libsciconsole_la_includedir)" || $(MKDIR_P) "$(DESTDIR)$(libsciconsole_la_includedir)"
	@list='$(libsciconsole_la_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libsciconsole_la_includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(libsciconsole_la_includedir)/$$f'"; \
	  $(libsciconsole_la_includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(libsciconsole_la_includedir)/$$f"; \
	done

uninstall-libsciconsole_la_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libsciconsole_la_include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libsciconsole_la_includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libsciconsole_la_includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS) all-local
installdirs:
	for dir in "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(libsciconsole_la_etcdir)" "$(DESTDIR)$(libsciconsole_la_rootdir)" "$(DESTDIR)$(libsciconsole_la_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-local \
	clean-pkglibLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-data-local install-libsciconsole_la_etcDATA \
	install-libsciconsole_la_includeHEADERS \
	install-libsciconsole_la_rootDATA

install-dvi: install-dvi-am

install-exec-am: install-pkglibLTLIBRARIES

install-html: install-html-am

install-html-am: install-html-local

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libsciconsole_la_etcDATA \
	uninstall-libsciconsole_la_includeHEADERS \
	uninstall-libsciconsole_la_rootDATA \
	uninstall-pkglibLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am all-local check check-am check-local \
	clean clean-generic clean-libtool clean-local \
	clean-pkglibLTLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-data-local install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-html-local install-info \
	install-info-am install-libsciconsole_la_etcDATA \
	install-libsciconsole_la_includeHEADERS \
	install-libsciconsole_la_rootDATA install-man install-pdf \
	install-pdf-am install-pkglibLTLIBRARIES install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-libsciconsole_la_etcDATA \
	uninstall-libsciconsole_la_includeHEADERS \
	uninstall-libsciconsole_la_rootDATA \
	uninstall-pkglibLTLIBRARIES


# This target enables tests for Scilab
check-local: $(top_builddir)/scilab-bin
	@if test -f build.xml; then \
		$(ANT) checkstyle; \
	fi;\
	COMMAND="test_run('$(modulename)');quit";\
	export LANG=C;\
	$(top_builddir)/bin/scilab -nwni -nb -e "$$COMMAND"
@GUI_TRUE@java:
# Some configurations needs to export JAVA_HOME in the current env
@GUI_TRUE@	@if test "$(JAVA_HOME)"; then export JAVA_HOME=$(JAVA_HOME); fi; \
@GUI_TRUE@	if test -f build.xml; then \
@GUI_TRUE@		$(ANT) jar; \
@GUI_TRUE@	fi

@GUI_TRUE@clean-java:
# Some configurations needs to export JAVA_HOME in the current env
@GUI_TRUE@	@if test "$(JAVA_HOME)"; then export JAVA_HOME=$(JAVA_HOME); fi; \
@GUI_TRUE@	if test -f build.xml; then \
@GUI_TRUE@		$(ANT) clean; \
@GUI_TRUE@	fi
# If the user request for the SWIG generation of the wrappers Java => C/C++ 
# We call the target swig-build on the variable SWIG_WRAPPERS

@SWIG_TRUE@swig: $(SWIG_WRAPPERS)
@SWIG_TRUE@	@SWIG_PACKAGENAME=org.scilab.modules.$(modulename); \
@SWIG_TRUE@	SWIG_OUTDIR=src/java/org/scilab/modules/$(modulename)/; \
@SWIG_TRUE@	if test ! -z "$(SWIG_WRAPPERS)"; then \
@SWIG_TRUE@		for file in $(SWIG_WRAPPERS) ; do \
@SWIG_TRUE@			echo "Swig process of $$file ..."; \
@SWIG_TRUE@			$(SWIG_BIN) $(SWIG_JAVA) -package $$SWIG_PACKAGENAME  -outdir $$SWIG_OUTDIR $$file; \
@SWIG_TRUE@		done; \
@SWIG_TRUE@	fi

# If the user request for the SWIG generation of the wrappers Java => C/C++ 
# We call the target swig-build on the variable SWIG_WRAPPERS

@GIWS_TRUE@giws: $(GIWS_WRAPPERS)
@GIWS_TRUE@	@GIWS_OUTPUTDIR=src/jni/;\
@GIWS_TRUE@	if test ! -z "$(GIWS_WRAPPERS)"; then \
@GIWS_TRUE@		for file in $(GIWS_WRAPPERS) ; do \
@GIWS_TRUE@			echo "GIWS process of $$file ..."; \
@GIWS_TRUE@			$(GIWS_BIN) --output-dir $$GIWS_OUTPUTDIR --description-file $$file; \
@GIWS_TRUE@		done; \
@GIWS_TRUE@	fi

macros:
	-@( if test ! -x $(top_builddir)/scilab-bin; then \
		echo "Error : Cannot build $< : Scilab has not been built"; \
	else \
		$(top_builddir)/bin/scilab -ns -nwni -e "exec('macros/buildmacros.sce');quit;";\
	fi)

# Removes the macros
clean-macros:
# Removes macros (*.bin generated from .sci)
	@for dir in $(MACRODIRS) $(MACROSDIRSEXT) ; do \
		echo "rm -f $(srcdir)/$$dir/$(MACROBINMASK)"; \
		rm -f $(srcdir)/$$dir/$(MACROBINMASK); \
	done

all-local: $(TARGETS_ALL)

.sci.bin:
	-@( if test ! -x $(top_builddir)/scilab-bin; then \
	echo "Error : Cannot build $< : Scilab has not been build"; \
	else \
	echo "Creating $@"; \
	$(top_builddir)/bin/scilab -ns -nwni -e "exec('$(abs_srcdir)/$<');save('$(abs_srcdir)/$@');exit;"; \
	fi )

install-html-local:
	@echo "-- Install of htm help files --"; \
	$(mkinstalldirs) $(DESTDIR)$(pkgdocdir); \
	for dir in $(DOCDIRS) ; do \
		if test -d $$dir; then \
			$(mkinstalldirs) $(DESTDIR)$(pkgdocdir)/$$dir && \
			if ls -lLd $(srcdir)/$$dir/$(DOCMASK) >/dev/null 2>&1; then \
				for file in $(srcdir)/$$dir/$(DOCMASK) ; do \
					echo "$(INSTALL_DATA) $$file $(DESTDIR)$(pkgdocdir)/$$dir" ; \
					$(INSTALL_DATA) "$$file" $(DESTDIR)$(pkgdocdir)/$$dir ; \
				done ; \
			fi; \
			if ls -lLd $(srcdir)/$$dir/$(HELP_CHAPTERFILE) >/dev/null 2>&1; then \
				for file in $(srcdir)/$$dir/$(HELP_CHAPTERFILE) ; do \
					echo "$(INSTALL_DATA) $$file $(DESTDIR)$(pkgdocdir)/$$dir" ; \
					$(INSTALL_DATA) "$$file" $(DESTDIR)$(pkgdocdir)/$$dir ; \
				done ; \
			fi; \
		fi; \
	done
	@echo "-- Install of images help files --"; \
	$(mkinstalldirs) $(DESTDIR)$(pkgdocdir); \
	for dir in $(DOCIMGDIRS) ; do \
	 if test -d $$dir; then \
	  $(mkinstalldirs) $(DESTDIR)$(pkgdocdir)/$$dir && \
		if ls -lLd $(srcdir)/$$dir/$(DOCIMGMASK) >/dev/null 2>&1; then \
		  for file in $(srcdir)/$$dir/$(DOCIMGMASK) ; do \
		    echo "$(INSTALL_DATA) $$file $(DESTDIR)$(pkgdocdir)/$$dir" ; \
	    	$(INSTALL_DATA) "$$file" $(DESTDIR)$(pkgdocdir)/$$dir ; \
		  done ; \
		fi; \
	 fi; \
	done

# If the user wants the help sources to be installed
@INSTALL_HELP_XML_TRUE@	@echo "-- Install of XML sources of help files --"; \
@INSTALL_HELP_XML_TRUE@	for dir in $(DOCDIRS) ; do \
@INSTALL_HELP_XML_TRUE@	 if test -d $$dir; then \
@INSTALL_HELP_XML_TRUE@	  $(mkinstalldirs) $(DESTDIR)$(pkgdocdir)/$$dir && \
@INSTALL_HELP_XML_TRUE@		if ls -lLd $(srcdir)/$$dir/$(DOCMASKXML) >/dev/null 2>&1; then \
@INSTALL_HELP_XML_TRUE@		  for file in $(srcdir)/$$dir/$(DOCMASKXML) ; do \
@INSTALL_HELP_XML_TRUE@		    echo "$(INSTALL_DATA) $$file $(DESTDIR)$(pkgdocdir)/$$dir" ; \
@INSTALL_HELP_XML_TRUE@	    	$(INSTALL_DATA) "$$file" $(DESTDIR)$(pkgdocdir)/$$dir ; \
@INSTALL_HELP_XML_TRUE@		  done ; \
@INSTALL_HELP_XML_TRUE@		fi; \
@INSTALL_HELP_XML_TRUE@	 fi; \
@INSTALL_HELP_XML_TRUE@	done
install-data-local:
# Install the tests
	@echo "-- Install tests (if any) --"; \
	for dir in $(TESTS_DIR) $(TESTS_DIREXT) ; do \
	  if test -d $(srcdir)/$$dir/; then \
	    $(mkinstalldirs) $(DESTDIR)$(pkgmacrosdir)/$$dir && \
		  for file in `find $(srcdir)/$$dir | grep -v '\.svn' | sed "s|^$(srcdir)/$$dir||" 2>/dev/null`; do \
		    if test -d "$(srcdir)/$$dir/$$file"; then \
			  echo $(mkinstalldirs) $(DESTDIR)$(pkgmacrosdir)/$$dir/$$file; \
			  $(mkinstalldirs) "$(DESTDIR)$(pkgmacrosdir)/$$dir/$$file"; \
		    else \
		      echo "$(INSTALL_DATA) $(srcdir)/$$dir/$$file $(DESTDIR)$(pkgmacrosdir)/`dirname $$dir/$$file`" ; \
	    	  $(INSTALL_DATA) "$(srcdir)/$$dir/$$file" "$(DESTDIR)$(pkgmacrosdir)/`dirname $$dir/$$file`" ; \
		    fi \
		  done; \
	  fi; \
	done 
# Install the macros
	@echo "-- Install macros (if any) --"; \
	for dir in $(MACRODIRS) $(MACROSDIRSEXT) ; do \
	  $(mkinstalldirs) $(DESTDIR)$(pkgmacrosdir)/$$dir && \
		if test -d $(srcdir)/$$dir/; then \
			FILELIST="$(srcdir)/$$dir/$(MACROMASK) $(srcdir)/$$dir/$(MACROBINMASK) $(srcdir)/$$dir/$(MACROBUILDMASK) $(srcdir)/$$dir/names $(srcdir)/$$dir/lib";\
			for specialExt in $(MACROSSPECIALEXT); do \
				specialExtDir="$$specialExtDir $(srcdir)/$$dir/$$specialExt"; \
			done; \
			FILELIST="$$FILELIST $$specialExtDir"; \
		  for file in `ls -1 $$FILELIST 2>/dev/null`; do \
		    echo "$(INSTALL_DATA) $$file $(DESTDIR)$(pkgmacrosdir)/$$dir" ; \
	    	$(INSTALL_DATA) "$$file" $(DESTDIR)$(pkgmacrosdir)/$$dir ; \
		  done; \
		fi; \
	done
# Install java files (.jar)
	@if ls -lLd $(srcdir)/$(JARDIR)$(JARMASK) >/dev/null 2>&1; then \
	echo "-- Install jar files --"; \
    $(mkinstalldirs) $(DESTDIR)$(pkgdocdir)/$(JARDIR); \
	  for file in $(srcdir)/$(JARDIR)$(JARMASK); do\
		    echo "$(INSTALL_DATA) $$file $(DESTDIR)$(pkgdocdir)/$(JARDIR)" ; \
	    	$(INSTALL_DATA) "$$file" $(DESTDIR)$(pkgdocdir)/$(JARDIR) ; \
	  done ; \
	fi

########### CLEAN ###################
# Clean macros and help (generated automatically by Scilab)
@GUI_TRUE@clean-local: clean-java clean-macros
@GUI_FALSE@clean-local: clean-macros
# Removes documentation (*.htm generated from .xml) 
	@for dir in $(DOCDIRS) ; do \
		 if test -d $$dir -a -z "$(DISABLE_HELP_CLEAN)"; then \
			echo "rm -f $(srcdir)/$$dir/$(DOCMASK)"; \
			rm -f $(srcdir)/$$dir/$(DOCMASK); \
		fi; \
	done

.PHONY: macros java swig giws
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
