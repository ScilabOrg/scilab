<?xml version="1.0" encoding="UTF-8"?>
<!--
    * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
    * Copyright (C) ????-2008 - INRIA - Scilab 
    * 
    * This file must be used under the terms of the CeCILL.
    * This source file is licensed as described in the file COPYING, which
    * you should have received as part of this distribution.  The terms
    * are also available at    
    * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
    *
    -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:lang="en" xml:id="auread">
    <refnamediv>
        <refname>auread</refname>
        <refpurpose>load .au sound file</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>y=auread(aufile)
            y=auread(aufile,ext)
            [y,Fs,bits]=auread(aufile)
            [y,Fs,bits]=auread(aufile,ext)
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>aufile</term>
                <listitem>
                    <para>string (The .au extension is appended if no extension is given)</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Fs</term>
                <listitem>
                    <para>...</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>[]</term>
                <listitem>
                    <para>integer, frequency sampling in Hz.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>ext</term>
                <listitem>
                    <para>
                        string (<literal>'size'</literal> or <literal>'snd'</literal>) or integer (to read n samples) or 1 x 2 integer vector [n1,n2] (to read from n1 to n2).
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            Utility function to read <literal>.au</literal> sound file.
            <literal>auread(aufile)</literal> loads a sound file specified by the string aufile,
            returning the sampled data in y. Amplitude values are in the range
            [-1,+1].
        </para>
        <para>
            Supports multi-channel data in the following formats:
            8-bit mu-law, 8-, 16-, and 32-bit linear, and floating point.
        </para>
        <para>
            <literal>[y,Fs,bits]=auread(aufile)</literal> returns the sample rate (Fs) in Hertz
            and the number of bits per sample used to encode the data in the file.
        </para>
        <para>
            <literal>auread(aufile,n)</literal> returns the first n samples from each channel.
        </para>
        <para>
            <literal>auread(aufile,[n1,n2])</literal> returns samples n1 to n2.
        </para>
        <para>
            <literal>auread(aufile,'size')</literal> returns the size of the audio data contained
            in the file in place of the actual audio data, returning the
            vector as [samples channels].
        </para>
        <para>
            <literal>auread(aufile,'snd')</literal> returns information about the sample and data
            as a tlist.
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[ 
y=wavread('SCI/modules/sound/demos/chimes.wav');

// default is 8-bits mu-law
auwrite(y,TMPDIR+'/tmp.au');
y1=auread(TMPDIR+'/tmp.au');
max(abs(y-y1))
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="savewave">savewave</link>
            </member>
            <member>
                <link linkend="analyze">analyze</link>
            </member>
            <member>
                <link linkend="mapsound">mapsound</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
