<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) INRIA - Fabrice Leray
 *
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org"  xml:lang="en" xml:id="Matplot_properties">
    <refnamediv>
        <refname>Matplot properties</refname>
        <refpurpose>
            description of the Matplot entities properties
        </refpurpose>
    </refnamediv>
    <refsection>
        <title>Description</title>
        <para>
            The <literal>Matplot</literal> entity is a leaf of the graphics entities hierarchy. It
            represents 2D plots of surface using colors and images (see
            <function>Matplot</function> and <function>Matplot1</function>).
        </para>
        <variablelist>
            <varlistentry>
                <term>parent: </term>
                <listitem>
                    <para>
                        this property contains the handle of the parent. The parent of the
                        <literal>Matplot</literal> entity should be of the type <literal>"Axes"</literal>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>children: </term>
                <listitem>
                    <para>
                        this property contains a vector with the <literal>children</literal> of
                        the handle. However, <literal>Matplot</literal> handles currently do not
                        have any <literal>children</literal>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>visible: </term>
                <listitem>
                    <para>
                        this field contains the <literal>visible</literal> property value for
                        the entity. It should be <literal>"on" </literal> or <literal>"off"</literal> .
                        By default, the plot is visible, the property's value is
                        <literal>"on"</literal>. If <literal>"off"</literal> the plot is not drawn on the
                        screen.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>data: </term>
                <listitem>
                    <para>
                        this field defines a [<literal>m</literal>x<literal>n</literal>]
                        <literal>color</literal> data matrix (double, (u)int8, (u)int16, (u)int32) or hypermatrix.
                        The colors are interpreted according to the image_type property.
                        The color associated to <literal>color(i,j)</literal> is used do draw a small square
                        of length 1 with center at location <literal>(x=j,y=(m-i+1))</literal>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>rect: </term>
                <listitem>
                    <para>
                        this field contains a row-vector defined by <literal>[xmin, ymin, xmax, ymax]</literal>.
                        It specifies a rectangle in the current scale and the matrix is drawn inside this rectangle.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>image_type: </term>
                <listitem>
                    <para>
                        this field defines the image type. It could be one of the values: "rgb", "rgba", "gray", "index",
                        "red", "green", "blue", "rgb332", "rgb444", "rgb555", "rgba5551", "argb".
                    </para>
                    <para>
                        Colors are determinated by the data type and by image_type:
                    </para>
                    <itemizedlist>
                        <listitem>
                            <para>
                                When image_type is equal to index, the data are just considered as an index in the colormap.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                When image_type is equal to rgb, hypermat of int8 or uint8 will give the RGB components, hypermat of doubles will give normalized RGB components (values between 0 and 1), matrices of int8 or uint8 where number of rows is a multiple of 3 will give the RGB components, matrices of int32 will give RGB colors, matrices of uint32 will give RGBA colors where the alpha channel will be set to 0xFF.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                When image_type is equal to rgba, hypermat of int8 or uint8 will give the RGBA components, hypermat of doubles will give normalized RGBA components (values between 0 and 1), matrices of int8 or uint8 where number of rows is a multiple of 4 will give the RGB components, matrices of int32 will give RGBA colors, matrices of uint32 will give RGBA colors.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                When image_type is equal to gray, matrices of int8 or uint8 will give Gray level color (R-G-B=GRAY-GRAY-GRAY), for other types, data will be considered as RGB ones and converted into gray colors (0.299*R+0.587*G+0.114*B).
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                When image_type is equal to red, matrices of int8 or uint8 will give Red level color (R-G-B=RED-00-00), for other types, data will be considered as RGB ones and converted into red colors (a mask is applied to keep the Red component).
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                When image_type is equal to green, matrices of int8 or uint8 will give Green level color (R-G-B=00-GREEN-00), for other types, data will be considered as RGB ones and converted into green colors (a mask is applied to keep the Green component).
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                When image_type is equal to blue, matrices of int8 or uint8 will give Blue level color (R-G-B=00-00-BLUE), for other types, data will be considered as RGB ones and converted into blue colors (a mask is applied to keep the Blue component).
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                When image_type is equal to rgb332, matrices of int8 or uint8 will give RGB colors where R component is wrote on 3 bits, G component on 3 bits and B component on 2 bits. For other data types, RGB (8-8-8) data are converted into RGB (3-3-2).
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                When image_type is equal to rgb444, matrices of int16 or uint16 will give RGB colors where each components is wrote on 4 bits. For other data types, RGB (8-8-8) data are converted into RGB (4-4-4).
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                When image_type is equal to rgb555, matrices of int16 or uint16 will give RGB colors where each components is wrote on 5 bits. For other data types, RGB (8-8-8) data are converted into RGB (5-5-5).
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                When image_type is equal to rgb4444, matrices of int16 or uint16 will give RGBA colors where each components is wrote on 4 bits. For other data types, RGBA (8-8-8-8) data are converted into RGBA (4-4-4-4).
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                When image_type is equal to rgb5551, matrices of int16 or uint16 will give RGBA colors where each non-alpha components is wrote on 5 bits and the alpha component on 1 bit. For other data types, RGBA (8-8-8-8) data are converted into RGBA (5-5-5-1).
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                When image_type is equal to argb, hypermat of int8 or uint8 will give the ARGB components, hypermat of doubles will give normalized ARGB components (values between 0 and 1), matrices of int8 or uint8 where number of rows is a multiple of 4 will give the RGB components, matrices of int32 will give ARGB colors, matrices of uint32 will give ARGB colors.
                            </para>
                        </listitem>
                    </itemizedlist>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>clip_state: </term>
                <listitem>
                    <para>
                        this field contains the <literal>clip_state</literal> property value for
                        the <literal>Matplot</literal>. It should be :
                    </para>
                    <itemizedlist>
                        <listitem>
                            <para>
                                <literal>"off"</literal> this means that the <literal>Matplot</literal> is not
                                clipped.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                <literal>"clipgrf"</literal> this means that the <literal>Matplot</literal> is clipped
                                outside the <literal>Axes</literal> box.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                <literal>"on"</literal> this means that the <literal>Matplot</literal> is clipped
                                outside the rectangle given by property <literal>clip_box</literal>.
                            </para>
                        </listitem>
                    </itemizedlist>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>clip_box: </term>
                <listitem>
                    <para>
                        this field is to determinate the <literal>clip_box</literal> property.
                        By default its value should be an empty matrix if <literal>clip_state</literal> is
                        <literal>"off"</literal>. Other cases the vector <literal>[x,y,w,h]</literal>
                        (upper-left point width height) defines the portions of the <literal>Matplot</literal>
                        to display, however <literal>clip_state</literal> property value will be changed.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>user_data: </term>
                <listitem>
                    <para>
                        this field can be use to store any scilab variable in the
                        <literal>Matplot</literal> data structure, and to retreive it.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[
Matplot((1:xget("lastpattern")))
e=gce(); // get current entity

e.data=e.data($:-1:1) // reverse order
 ]]></programlisting>
        <scilab:image>
            Matplot((1:xget("lastpattern")));
            e=gce();
            e.data=e.data($:-1:1);
        </scilab:image>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="set">set</link>
            </member>
            <member>
                <link linkend="get">get</link>
            </member>
            <member>
                <link linkend="delete">delete</link>
            </member>
            <member>
                <link linkend="grayplot">grayplot</link>
            </member>
            <member>
                <link linkend="Matplot">Matplot</link>
            </member>
            <member>
                <link linkend="Matplot1">Matplot1</link>
            </member>
            <member>
                <link linkend="graphics_entities">graphics_entities</link>
            </member>
            <member>
                <link linkend="grayplot_properties">grayplot_properties</link>
            </member>
        </simplelist>
    </refsection>
    <refsection>
        <title>History</title>
        <revhistory>
            <revision>
                <revnumber>5.5.0</revnumber>
                <revremark>
                    <itemizedlist>
                        <listitem>
                            Property <literal>image_type</literal> introduced.
                        </listitem>
                        <listitem>
                            Property <literal>rect</literal> introduced.
                        </listitem>
                    </itemizedlist>
                </revremark>
            </revision>
        </revhistory>
    </refsection>
</refentry>
