<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) Scilab Enterprises - 2015 - 2012 - Juergen Koch
 *
 * Copyright (C) 2012 - 2016 - Scilab Enterprises
 *
 * This file is hereby licensed under the terms of the GNU GPL v2.0,
 * pursuant to article 5.3.4 of the CeCILL v.2.1.
 * This file was originally licensed under the terms of the CeCILL v2.1,
 * and continues to be available under such terms.
 * For more information, see the COPYING file which you should have received
 * along with this program.
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org"  xml:lang="en" xml:id="scatter3">
    <refnamediv>
        <refname>scatter3</refname>
        <refpurpose>3D scatter plot</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>
            p = scatter3(x,y,z,&lt;s&gt;,&lt;c&gt;,&lt;"fill"&gt;,&lt;marker&gt;,&lt;marker_property,value&gt;)
            p = scatter3(&lt;axes_handle&gt;,...)
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>x</term>
                <listitem>
                    <para>
                        A column or row vector of n real numbers
                        specifying the x positions of the markers center.
                        x, y and z must be vectors of the same length.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>y</term>
                <listitem>
                    <para>
                        A column or row vector of n real numbers
                        specifying the y positions of the markers center.
                        x, y and z must be vectors of the same length.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>z</term>
                <listitem>
                    <para>
                        A column or row vector of n real numbers
                        specifying the y positions of the markers center.
                        x, y and z must be vectors of the same length.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>&lt;s&gt;</term>
                <listitem>
                    <para>
                        Specifying the sizes of the markers.
                        To plot each marker with equal size, specify s as a scalar.
                        To plot each marker with a different size, specify s as a vector with length equal to the length of x, y and z.
                        The units for s is points squared with a default value of 36 points squared.
                        The size equals the area of the circle surrounding the marker.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>&lt;c&gt;</term>
                <listitem>
                    <para>
                        Specifying the colors of the markers.
                        To plot each marker with the same color, specify c as a string representing a known color, see <link linkend="color_list">color_list</link>.
                        A color can also be specified by a vector of 3 RGB values.
                        RGB values correspond to red, green and blue intensity between 0 and 1.
                        To plot each marker with a different color, specify c as a vector with length equal to the length of x, y and z.
                        The values of c are linarly mapped to the colors in the current colormap.
                        Colors can also by specified by a matrix of RGB values or a vector of strings representing known colors.
                        A matrix of RGB values has 3 columns and the number of rows equals the length of x, y and z.
                        The default color is "blue". 
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>&lt;"fill"&gt;</term>
                <listitem>
                    <para>
                        This string indicates that the markers are filled with colors.
                        The markers background colors are set using the values of c.
                        If c is not specified the fill color can be defined by the marker property "markerFaceColor" or "markerBackgroundColor".
                        The default color is "blue".  
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>&lt;marker&gt;</term>
                <listitem>
                    <para>
                        Select the type of the marker.
                        The figure below shows the 15 different marker types.
                    </para>
                    <para>
                        <inlinemediaobject>
                            <imageobject>
                                <imagedata fileref="../../images/marks.svg"/>
                            </imageobject>
                        </inlinemediaobject>
                    </para>
                    <para>
                        Marker types are specified by strings, see the table below.
                    </para>
                    <para>
                        <informaltable border="1">
                            <tr>
                                <td>
                                    String
                                </td>
                                <td>
                                    Marker type
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <literal>"."</literal>
                                </td>
                                <td>Point</td>
                            </tr>
                            <tr>
                                <td>
                                    <literal>"+"</literal>
                                </td>
                                <td>Plus sign</td>
                            </tr>
                            <tr>
                                <td>
                                    <literal>"x"</literal>
                                </td>
                                <td>Cross</td>
                            </tr>
                            <tr>
                                <td>
                                    <literal>"circle plus"</literal>
                                </td>
                                <td>Circle with plus</td>
                            </tr>
                            <tr>
                                <td>
                                    <literal>"filled diamond"</literal>
                                </td>
                                <td>Filled diamond</td>
                            </tr>
                            <tr>
                                <td>
                                    <literal>"d"</literal> or
                                    <literal>"diamond"</literal>
                                </td>
                                <td>Diamond</td>
                            </tr>
                            <tr>
                                <td>
                                    <literal>"^"</literal>
                                </td>
                                <td>Upward-pointing triangle</td>
                            </tr>
                            <tr>
                                <td>
                                    <literal>"v"</literal>
                                </td>
                                <td>Downward-pointing triangle</td>
                            </tr>
                            <tr>
                                <td>
                                    <literal>"diamond plus"</literal>
                                </td>
                                <td>Diamond with plus</td>
                            </tr>
                            <tr>
                                <td>
                                    <literal>"o"</literal>
                                </td>
                                <td>Circle (default)</td>
                            </tr>
                            <tr>
                                <td>
                                    <literal>"*"</literal>
                                </td>
                                <td>Asterisk</td>
                            </tr>
                            <tr>
                                <td>
                                    <literal>"s"</literal> or
                                    <literal>"square"</literal>
                                </td>
                                <td>Square</td>
                            </tr>
                            <tr>
                                <td>
                                    <literal>"&gt;"</literal>
                                </td>
                                <td>Right-pointing triangle</td>
                            </tr>
                            <tr>
                                <td>
                                    <literal>"&lt;"</literal>
                                </td>
                                <td>Left-pointing triangle</td>
                            </tr>
                            <tr>
                                <td>
                                    <literal>"pentagram"</literal> or
                                    <literal>"p"</literal>
                                </td>
                                <td>Five-pointed star</td>
                            </tr>
                        </informaltable>
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>&lt;marker_property,value&gt;</term>
                <listitem>
                    <para>
                        A sequence of property value pairs can be used to specify type, color and line width of the markers.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>&lt;"marker",value&gt; or &lt;"markerStyle",value&gt;</term>
                <listitem>
                    <para>
                        Specify the type of the marker, see the table above.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>&lt;"markerEdgeColor",value&gt; or &lt;"markerForground",value&gt;</term>
                <listitem>
                    <para>
                        Specify the foreground color of the marker.
                        A color can be specified by a string representing a known color, see <link linkend="color_list">color_list</link>.
                        A color can also be specified by a vector of 3 RGB values.
                        RGB values correspond to red, green and blue intensity between 0 and 1.
                        This option is superseded by argument c.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>&lt;"markerFaceColor",value&gt; or &lt;"markerBackground",value&gt;</term>
                <listitem>
                    <para>
                        Specify the background color of the marker.
                        A color can be specified by a string representing a known color, see <link linkend="color_list">color_list</link>.
                        A color can also be specified by a vector of 3 RGB values.
                        RGB values correspond to red, green and blue intensity between 0 and 1.
                        This option is superseded by argument c.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>&lt;"linewidth",value&gt; or &lt;"thickness",value&gt;</term>
                <listitem>
                    <para>
                        Specify the thickness of the edge of the marker.
                        The unit for the value is one point.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>&lt;axes_handle&gt;</term>
                <listitem>
                    <para>This optional argument forces the scatter plot to appear inside the
                        selected axes given by <literal>axes_handle</literal> rather than inside the
                        current axes, see <link linkend="gca">gca</link>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>&lt;p&gt;</term>
                <listitem>
                    <para>
                        Returns a handle to the created polyline.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            <literal>scatter3(x,y)</literal> creates a scatter plot with markers at the locations specified by x and y.
            The default type of the marker is a circle, the default color is "blue" and the default size is 36.
            This means the circle surrounding the marker has an area of 36 points squared. 
        </para>
        <para>
            Using <literal>scatter3(x,y,s,c)</literal> different sizes and colors for each marker can be specified. 
            There are many different ways to specify marker types, marker colors and marker sizes.
            For more details see the description of the arguments and the examples.
        </para>
    </refsection>
    <refsection>
        <title>Remarks</title>
        <para>
            If you want to specify colors without specifying sizes use <literal>scatter3(x,y,[],c)</literal>. 
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <para>
            Create 3D scatter plot
        </para>
        <programlisting role="example"><![CDATA[
// x, y and z initialisation
t = 1:200
x = t.*cos(t).*sin(t)
y = t.*sin(t).*sin(t)
z = t.*cos(t)
// create 3D scatter plot
scatter3(x,y,z)
// modify rotation angles
set(gca(),"rotation_angles",[60,45])
 ]]></programlisting>
        <scilab:image>
            t = 1:200
            x = t.*cos(t).*sin(t)
            y = t.*sin(t).*sin(t)
            z = t.*cos(t)
            scatter3(x,y,z)
            set(gca(),"rotation_angles",[60,45])
        </scilab:image>
        <para>
            Vary marker size
        </para>
        <programlisting role="example"><![CDATA[
// x, y and z initialisation
t = 1:200
x = t.*cos(t).*sin(t)
y = t.*sin(t).*sin(t)
z = t.*cos(t)
// size according to radius
s = linspace(50,1,length(t))
// create 3D scatter plot
scatter3(x,y,z,s)
// modify rotation angles
set(gca(),"rotation_angles",[60,45])
 ]]></programlisting>
        <scilab:image>
            t = 1:200
            x = t.*cos(t).*sin(t)
            y = t.*sin(t).*sin(t)
            z = t.*cos(t)
            s = linspace(50,1,length(t))
            scatter3(x,y,z,s)
            set(gca(),"rotation_angles",[60,45])
        </scilab:image>
        <para>
            Vary marker size and color
        </para>
        <programlisting role="example"><![CDATA[
// x, y and z initialisation
t = 1:200
x = t.*cos(t).*sin(t)
y = t.*sin(t).*sin(t)
z = t.*cos(t)
// size according to radius
s = linspace(50,1,length(t))
// set color map
set(gcf(),"color_map",coolcolormap(64))
// color according to radius
c = t
// create 3D scatter plot
scatter3(x,y,z,s,c)
// modify rotation angles
set(gca(),"rotation_angles",[60,45])
 ]]></programlisting>
        <scilab:image>
            t = 1:200
            x = t.*cos(t).*sin(t)
            y = t.*sin(t).*sin(t)
            z = t.*cos(t)
            s = linspace(50,1,length(t))
            set(gcf(),"color_map",coolcolormap(64))
            c = t
            scatter3(x,y,z,s,c)
            set(gca(),"rotation_angles",[60,45])
        </scilab:image>
        <para>
            Fill the markers
        </para>
        <programlisting role="example"><![CDATA[
// x, y and z initialisation
z = linspace(0,25,200)
x = z.*cos(z)
y = z.*sin(z)
// create 3D scatter plot
scatter3(x,y,z,"fill")
// modify rotation angles
set(gca(),"rotation_angles",[60,45])
 ]]></programlisting>
        <scilab:image>
            z = linspace(0,25,200)
            x = z.*cos(z)
            y = z.*sin(z)
            scatter3(x,y,z,"fill")
            set(gca(),"rotation_angles",[60,45])
        </scilab:image>
        <para>
            Specify marker symbol
        </para>
        <programlisting role="example"><![CDATA[
// x, y and z initialisation
z = linspace(0,25,200)
x = z.*cos(z)
y = z.*sin(z)
// create 3D scatter plot
scatter3(x,y,z,"*")
// modify rotation angles
set(gca(),"rotation_angles",[60,45])
 ]]></programlisting>
        <scilab:image>
            z = linspace(0,25,200)
            x = z.*cos(z)
            y = z.*sin(z)
            scatter3(x,y,z,"*")
            set(gca(),"rotation_angles",[60,45])
        </scilab:image>
        <para>
            Change marker edge and face color
        </para>
        <programlisting role="example"><![CDATA[
// x, y and z initialisation
z = linspace(0,25,200)
x = z.*cos(z)
y = z.*sin(z)
// create 3D scatter plot
scatter3(x,y,z,...
        "markerEdgeColor","black",...
        "markerFaceColor",[0 .8 .8])
// modify rotation angles
set(gca(),"rotation_angles",[60,45])
 ]]></programlisting>
        <scilab:image>
            z = linspace(0,25,200)
            x = z.*cos(z)
            y = z.*sin(z)
            scatter3(x,y,z,...
            "markerEdgeColor","black",...
            "markerFaceColor",[0 .8 .8])
            set(gca(),"rotation_angles",[60,45])
        </scilab:image>
        <para>
            Specify subplot for scatter plot
        </para>
        <programlisting role="example"><![CDATA[
// x, y and z initialisation
n = 20
[x,y] = meshgrid(linspace(-2,2,n))
z = exp(-x.^2-y.^2)
// create 3D scatter subplot
subplot(2,1,1)
scatter3(gca(),x(:),y(:),z(:))
// modify rotation angles
set(gca(),"rotation_angles",[60,45])
// create 3D scatter subplot
subplot(2,1,2)
scatter3(gca(),x(:),y(:),z(:),"markerFaceColor",[0 .8 .8])
// modify rotation angles
set(gca(),"rotation_angles",[60,45])
 ]]></programlisting>
        <scilab:image>
            n = 20
            [x,y] = meshgrid(linspace(-2,2,n))
            z = exp(-x.^2-y.^2)
            subplot(2,1,1)
            scatter3(gca(),x(:),y(:),z(:))
            set(gca(),"rotation_angles",[60,45])
            subplot(2,1,2)
            scatter3(gca(),x(:),y(:),z(:),"markerFaceColor",[0 .8 .8])
            set(gca(),"rotation_angles",[60,45])        
        </scilab:image>
        <para>
            Modify scatter plot after creation
        </para>
        <programlisting role="example"><![CDATA[
// x, y and z initialisation
t = 1:200
x = t.*cos(t).*sin(t)
y = t.*sin(t).*sin(t)
z = t.*cos(t)
// size according to radius
s = linspace(50,1,length(t))
// create 3D scatter plot
scatter3(x,y,z,s)
// modify rotation angles
set(gca(),"rotation_angles",[60,45])
 ]]></programlisting>
        <scilab:image>
            t = 1:200
            x = t.*cos(t).*sin(t)
            y = t.*sin(t).*sin(t)
            z = t.*cos(t)
            s = linspace(50,1,length(t))
            p = scatter3(x,y,z,s)
            set(gca(),"rotation_angles",[60,45])
        </scilab:image>
        <programlisting role="example"><![CDATA[
// modify ployline 
p.mark_foreground = addcolor([0.5 0 0])
p.mark_background = addcolor([0.5 0.5 0])
 ]]></programlisting>
        <scilab:image>
            t = 1:200
            x = t.*cos(t).*sin(t)
            y = t.*sin(t).*sin(t)
            z = t.*cos(t)
            s = linspace(50,1,length(t))
            p = scatter3(x,y,z,s)
            set(gca(),"rotation_angles",[60,45])
            // modify ployline 
            p.mark_foreground = addcolor([0.5 0 0])
            p.mark_background = addcolor([0.5 0.5 0])
        </scilab:image>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="scatter">scatter</link>
            </member>
            <member>
                <link linkend="param3d">param3d</link>
            </member>
            <member>
                <link linkend="gca">gca</link>
            </member>
            <member>
                <link linkend="gcf">gcf</link>
            </member>
            <member>
                <link linkend="color_list">color_list</link>
            </member>
            <member>
                <link linkend="polyline_properties">polyline_properties</link>
            </member>
        </simplelist>
    </refsection>
    <refsection>
        <title>History</title>
        <revhistory>
            <revision>
                <revnumber>6.0.0</revnumber>
                <revremark>
                    Function <function>scatter3</function> introduced.
                </revremark>
            </revision>
        </revhistory>
    </refsection>
</refentry>
