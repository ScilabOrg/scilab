<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) INRIA - Djalel Abdemouche
 * Copyright (C) INRIA - Fabrice Leray
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org"  xml:lang="en" xml:id="surface_properties">
    <refnamediv>
        <refname>surface properties</refname>
        <refpurpose>description of the 3D entities
            properties
        </refpurpose>
    </refnamediv>
    <refsection>
        <title>Description</title>
        <para>The Surface entity is a leaf of the graphics entities hierarchy. Two
            classes appears under this type of entity : <literal>Plot3d</literal> and
            <literal>Fac3d</literal> according to the plotting function or the way data is
            entered. <literal>Fac3d</literal> and <literal>Plo3d</literal> entities are similar
            but <literal>Fac3d</literal> is more complete and accept more options than
            <literal>Plot3d</literal>. To always have <literal>Fac3d</literal> entities, simply
            use <literal>genfac3d</literal> to pre-build matrices before using
            <literal>plot3d</literal> or use the <literal>surf</literal> command.
        </para>
        <para>Here are the properties contained in a surface entity:</para>
        <variablelist>
            <varlistentry>
                <term>parent: </term>
                <listitem>
                    <para>This property contains the handle of the parent. The parent of the
                        surface entity should be of type <literal>"Axes"</literal> or
                        <literal>"Compound"</literal>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>children: </term>
                <listitem>
                    <para>
                        This property contains a vector with the <literal>children</literal> of
                        the handle. However, surface handles currently do not have any
                        <literal>children</literal>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>visible: </term>
                <listitem>
                    <para>
                        This field contains the <literal>visible</literal> property value for
                        the entity . It should be <literal>"on" </literal> or <literal>"off"</literal> .
                        By default, surfaces are visibles, the value's property is
                        <literal>"on"</literal>. If <literal>"off"</literal> the 3D graphics are not
                        displayed on the screen.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>surface_mode: </term>
                <listitem>
                    <para>
                        This field contains the default <literal>surface_mode</literal> property
                        value for the surface. Its value should be <literal>"on" </literal>(surface
                        drawn) or <literal>"off"</literal> (no surface drawn).
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>foreground: </term>
                <listitem>
                    <para>
                        If <literal>color_mode &gt;= 0</literal>, this field contains the color
                        index used to draw the edges. If not, foreground is not used at all.
                        The foreground value should be an integer color index (relative to the
                        current colormap).
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>thickness: </term>
                <listitem>
                    <para>This property is a positive real specifying the width of facets contours
                        in pixels. The displayed width is actually determined by rounding the supplied width
                        to the nearest integer. The only exception is vectorial export where the whole <literal>thickness</literal>
                        value is considered.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>mark_mode: </term>
                <listitem>
                    <para>
                        This field contains the default <literal>mark_mode</literal> property
                        value for the surface. Its value should be <literal>"on"</literal> (marks
                        drawn) or <literal>"off"</literal> (no marks drawn).
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>mark_style: </term>
                <listitem>
                    <para>
                        The <literal>mark_style</literal> property value is used to select the
                        type of mark to use when <literal>mark_mode</literal> property is
                        <literal>"on"</literal>. The value should be an integer in [0 14] which
                        stands for: dot, plus, cross, star, filled diamond, diamond, triangle
                        up, triangle down, diamond plus, circle, asterisk, square, triangle
                        right, triangle left and pentagram.The figure below shows the aspects of the marks
                        depending on the <literal>mark_style</literal> and the
                        <literal>mark_foreground</literal> and
                        <literal>mark_background</literal> properties.
                    </para>
                    <para>
                        <inlinemediaobject>
                            <imageobject>
                                <imagedata fileref="../../images/marks.svg"/>
                            </imageobject>
                        </inlinemediaobject>
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>mark_size_unit: </term>
                <listitem>
                    <para>
                        This field contains the default <literal>mark_size_unit</literal>
                        property value. If <literal>mark_size_unit</literal> is set to
                        <literal>"point"</literal>, then the <literal>mark_size</literal> value is
                        directly given in points. When <literal>mark_size_unit</literal> is set to
                        <literal>"tabulated"</literal>, <literal>mark_size</literal> is computed relative
                        to the font size array: therefore, its value should be an integer in
                        [0 5] whith stands for 8pt, 10pt, 12pt, 14pt, 18pt and 24pt. Note that
                        <link linkend="plot3d">plot3d</link> and pure scilab functions use
                        <literal>tabulated</literal> mode as default ; when using the
                        <link linkend="surf">surf</link> (or <link linkend="plot">plot</link> for 2D lines) function, the
                        <literal>point</literal> mode is automatically enabled.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>mark_size: </term>
                <listitem>
                    <para>
                        The <literal>mark_size</literal> property is used to select the type of
                        size of the marks when <literal>mark_mode</literal> property is
                        <literal>"on"</literal>. Its value should be an integer between 0 and 5
                        whith stands for 8pt, 10pt, 12pt, 14pt, 18pt and 24pt.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>mark_foreground: </term>
                <listitem>
                    <para>
                        This field contains the <literal>mark_foreground</literal> property
                        value which is the marks' edge color. Its value should be a color
                        index (relative to the current color_map) or 0 for transparant edge.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>mark_background: </term>
                <listitem>
                    <para>
                        This field contains the <literal>mark_background</literal> property
                        value which is the marks' face color. Its value should be a color
                        index (relative to the current color_map) or 0 for transparant face.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>data: </term>
                <listitem>
                    <para>
                        This field defines a <literal>tlist</literal> data structure of type
                        "3d" composed of a row and column indices of each element as the x-,
                        y- and z-coordinates contained respectivly in
                        <literal>data.x</literal>,<literal>data.y</literal> and <literal>data.z</literal>. The
                        complementary field named <literal>data.color</literal> is available in case
                        a real color vector or matrix is specified. If none,
                        <literal>data.color</literal> is not listed. The surface is painted
                        according to <literal>color_mode </literal>and <literal>color_flag</literal>
                        properties. 
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>color_mode: </term>
                <listitem>
                    <para>
                        an integer between <literal>[-size(colormap) ; size(colormap)]</literal>
                        defining the color of the facet when <literal>color_flag</literal> value is
                        <literal>0</literal>. As stated before, if<literal> color_mode &gt; 0</literal>,
                        edges are drawn using <literal>foreground</literal> color. If
                        <literal>color_mode</literal> is set to <literal>0</literal>, a mesh of the
                        surface is drawn: front faces have no colors. Finally, when
                        <literal>color_mode &lt; 0</literal>, front faces are painted with color
                        <literal>-color_mode</literal> but no edges are displayed.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>color_flag: </term>
                <listitem>
                    <para>This field is used to specify the algorithm used to set facets'
                        colors.
                    </para>
                    <para>
                        Note that the rules on <literal>color_mode</literal>,
                        <literal>foreground</literal> and <literal>hiddencolor</literal> are still applied
                        to this case.
                    </para>
                    <itemizedlist>
                        <listitem>
                            <para>
                                <literal>color_flag == 0</literal>
                            </para>
                            <itemizedlist>
                                <listitem>
                                    <para>All facets are painted using the color index and method
                                        defined by <literal>color_mode</literal> (see above).
                                    </para>
                                </listitem>
                            </itemizedlist>
                        </listitem>
                        <listitem>
                            <para>
                                <literal>color_flag == 1</literal>
                            </para>
                            <itemizedlist>
                                <listitem>
                                    <para>All facets are painted using one color index per facet
                                        proportional to <literal>z</literal>. The minimum <literal>z</literal>
                                        value is painted using the index 1 color while the maximum
                                        <literal>z</literal> value is painted using highest color index. The
                                        edges of the facets can be additionaly drawn depending on the
                                        value of <literal>color_mode</literal> (see above).
                                    </para>
                                </listitem>
                            </itemizedlist>
                        </listitem>
                        <listitem>
                            <para>
                                The 3 remaining cases (<literal>color_flag</literal><literal>== 2,3 or
                                    4
                                </literal>
                                )are only available only with <literal>Fac3d</literal> entity.
                                Then, the <literal>data.color</literal> value is used to set colors for
                                facets (indices in the current colormap) if it exists. If not, the
                                current <literal>color_mode</literal> is used to paint the facets.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                <literal>color_flag == 2 ('flat' shading)</literal>
                            </para>
                            <itemizedlist>
                                <listitem>
                                    <para>All facets are painted using the color index given in the
                                        <literal>data.color</literal> property (one color per facet is
                                        needed). Two cases are then possible :
                                    </para>
                                </listitem>
                                <listitem>
                                    <para>
                                        <literal>data.color</literal> contains a <literal>color</literal>
                                        vector : if <literal>color(i)</literal> is positive it gives the
                                        color of facet <literal>i</literal> and the boundary of the facet is
                                        drawn with current line style and color. If
                                        <literal>color(i)</literal> is negative, color id
                                        <literal>-color(i)</literal> is used and the boundary of the facet
                                        is not drawn.
                                    </para>
                                    <para>
                                        <literal>data.color</literal> contains a color matrix of size
                                        (nf,n) where <literal>n</literal> stands for the number of facets
                                        and <literal>nf</literal> for the number of points defining the
                                        polygonal facet. For the <literal>nf</literal> vertices defining
                                        each facet, the algorithm computes an <literal>average value</literal>
                                        of the color index (from the matrix color index) : the
                                        <literal>nf</literal> vertices of the same facet will have the same
                                        color index value.
                                    </para>
                                </listitem>
                            </itemizedlist>
                        </listitem>
                        <listitem>
                            <para>
                                <literal>color_flag == 3 ('interpolated' shading)</literal>
                            </para>
                            <itemizedlist>
                                <listitem>
                                    <para>Facets painting results of interpolation of vertices
                                        colors. The indices of vertices color are given in the
                                        <literal>data.color</literal> property (one color per vertex is
                                        needed). Two cases are possible :
                                    </para>
                                </listitem>
                                <listitem>
                                    <para>
                                        <literal>data.color</literal> contains a <literal>colors</literal>
                                        vector : then, there are too few data to complete the
                                        interpolated shading mode. Indeed, a color matrix of size
                                        (nf,n) (where <literal>n</literal> stands for the number of facets
                                        and <literal>nf</literal> for the number of points defining the
                                        polygonal facet) is needed to perform this operation. For each
                                        facet, the algorithm copies the single color index value of
                                        the facet into the <literal>nf</literal> color indexes vertices
                                        defining the facet's boundary.
                                    </para>
                                    <para>
                                        <literal>data.color</literal> contains a color matrix of size
                                        (nf,n) (see upper for <literal>nf</literal> and <literal>n</literal>
                                        definitions), the interpolated shading mode can be completed
                                        normally using those color indexes.
                                    </para>
                                </listitem>
                            </itemizedlist>
                        </listitem>
                        <listitem>
                            <para>
                                <literal>color_flag == 4 (Matlab-like 'flat' shading)</literal>
                            </para>
                            <itemizedlist>
                                <listitem>
                                    <para>
                                        Same as <literal>color_flag==2</literal> with a slight difference
                                        when <literal>data.color</literal> is a matrix. All facets are
                                        painted using the color index given in the
                                        <literal>data.color</literal> property (one color per facet is
                                        needed). Two cases are then possible :
                                    </para>
                                </listitem>
                                <listitem>
                                    <para>
                                        <literal>data.color</literal> contains a <literal>color</literal>
                                        vector : if <literal>color(i)</literal> is positive it gives the
                                        color of facet <literal>i</literal> and the boundary of the facet is
                                        drawn with current line style and color. If
                                        <literal>color(i)</literal> is negative, color id
                                        <literal>-color(i)</literal> is used and the boundary of the facet
                                        is not drawn.
                                    </para>
                                    <para>
                                        <literal>data.color</literal> contains a color matrix of size
                                        (nf,n) where <literal>n</literal> stands for the number of facets
                                        and <literal>nf</literal> for the number of points defining the
                                        polygonal facet. For the <literal>nf</literal> vertices defining
                                        each facet, the algorithm takes the<literal> color of the first
                                            vertex
                                        </literal>
                                        defining the patch (facet).
                                    </para>
                                </listitem>
                            </itemizedlist>
                        </listitem>
                    </itemizedlist>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>cdata_mapping: </term>
                <listitem>
                    <para>
                        <literal>Specific to Fac3d handles</literal>. A string with value
                        <literal>'scaled'</literal> or <literal>'direct'</literal>. If a
                        <literal>data.color</literal> is set, each index color data specifies a
                        single value for each vertex. <literal>cdata_mapping</literal> determines
                        wether those indices are scaled to map linearly into the current
                        colormap (<literal>'scaled'</literal> mode) or point directly into this
                        colormap (<literal>'direct</literal>' mode). This property is useful when
                        <literal>color_flag</literal> equals <literal>2</literal>,<literal>3</literal> or
                        <literal>4</literal>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>hiddencolor: </term>
                <listitem>
                    <para>This field contains the color index used to draw the backward
                        faces of a surface. Its value should be a positive integer (color
                        index relative to the current colormap). If it is a negative
                        integer,the same color than the "visible" face is applied to the rear
                        face.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>clip_state: </term>
                <listitem>
                    <para>
                        This field contains the <literal>clip_state</literal> property value for
                        the surface. It should be :
                    </para>
                    <itemizedlist>
                        <listitem>
                            <para>
                                <literal>"off"</literal> this means that the surface is not
                                clipped.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                <literal>"clipgrf"</literal> this means that the surface is clipped
                                outside the Axes box.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                <literal>"on"</literal> this means that the surface is clipped
                                outside the rectangle given by property clip_box.
                            </para>
                        </listitem>
                    </itemizedlist>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>clip_box: </term>
                <listitem>
                    <para>
                        This field is to determinate the <literal>clip_box</literal> property.
                        By Default its value should be an empty matrix if clip_state is "off".
                        Other cases the vector <literal>[x,y,w,h]</literal> (upper-left point width
                        height) defines the portions of the surface to display, however
                        <literal>clip_state</literal> property value will be changed.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>use_color_material: </term>
                <listitem>
                    <para>This field is use to enable the use of the surface color as diffuse color.
                        Its default value is <literal>"on"</literal>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>material_shininess: </term>
                <listitem>
                    <para>This field defines the shininess level of the surface. This parameter
                        controls the shinines color spreading in the surface. Any positive value can
                        be used. Good values to use are in the [0 10] range, where low values generates 
                        strong highlight and high values generates barely perceptible highlights.
                        The default value is <literal>"2"</literal>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>ambient_color: </term>
                <listitem>
                    <para>This field defines the ambient color of the surface.
                        The color is defined by a 3 element vector <literal>"[red, green, blue]"</literal>
                        with each element in the range [0, 1].
                        The default value is <literal>"[1 1 1]"</literal>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>diffuse_color: </term>
                <listitem>
                    <para>This field defines the diffuse color of the surface.
                        The color is defined by a 3 element vector <literal>"[red, green, blue]"</literal>
                        with each element in the range [0, 1]. Notice that this field is
                        only used when use_color_material is disabled.
                        The default value is <literal>"[1 1 1]"</literal>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>specular_color: </term>
                <listitem>
                    <para>This field defines the specular color of the surface.
                        The color is defined by a 3 element vector <literal>"[red, green, blue]"</literal>
                        with each element in the range [0, 1].
                        The default value is <literal>"[1 1 1]"</literal>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>user_data: </term>
                <listitem>
                    <para>This field can be use to store any scilab variable in the surface
                        data structure, and to retreive it.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[ 
//create a figure 
t=[0:0.3:2*%pi]'; z=sin(t)*cos(t');
[xx,yy,zz]=genfac3d(t,t,z); 
plot3d([xx xx],[yy yy],list([zz zz+4],[4*ones(1,400) 5*ones(1,400)])) 
h=get("hdl") //get handle on current entity (here the surface) 
a=gca(); //get current axes
a.rotation_angles=[40,70]; 
a.grid=[1 1 1]; 
//make grids 
a.data_bounds=[-6,0,-1;6,6,5];
a.axes_visible="off"; 
//axes are hidden a.axes_bounds=[.2 0 1 1]; 
f=get("current_figure");
//get the handle of the parent figure 
f.color_map=hotcolormap(64); 
//change the figure colormap 
h.color_flag=1; 
//color according to z 
h.color_mode=-2; 
//remove the facets boundary 
h.color_flag=2; 
//color according to given colors 
h.data.color=[1+modulo(1:400,64),1+modulo(1:400,64)];
//shaded
h.color_flag=3; 

scf(2); // creates second window and use surf command
subplot(211)
surf(z,'cdata_mapping','direct','facecol','interp')

subplot(212)
surf(t,t,z,'edgeco','b','marker','d','markersiz',9,'markeredg','red','markerfac','k')
e=gce();
e.color_flag=1 // color index proportional to altitude (z coord.)
e.color_flag=2; // back to default mode
e.color_flag= 3; // interpolated shading mode (based on blue default color because field data.color is not filled)
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="set">set</link>
            </member>
            <member>
                <link linkend="get">get</link>
            </member>
            <member>
                <link linkend="delete">delete</link>
            </member>
            <member>
                <link linkend="plot3d">plot3d</link>
            </member>
            <member>
                <link linkend="plot3d1">plot3d1</link>
            </member>
            <member>
                <link linkend="plot3d2">plot3d2</link>
            </member>
            <member>
                <link linkend="surf">surf</link>
            </member>
            <member>
                <link linkend="graphics_entities">graphics_entities</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
