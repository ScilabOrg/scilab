<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) ENPC - Jean-Philippe Chancelier
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns3="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org"  xml:id="contourf" xml:lang="ru">
    <refnamediv>
        <refname>contourf</refname>
        <refpurpose>
            кривые уровней поверхности, залитые цветом на двумерном графике
        </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Последовательность вызова</title>
        <synopsis>
            contourf(x, y, z, nz, [style, strf, leg, rect, nax])
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Аргументы</title>
        <variablelist>
            <varlistentry>
                <term>x, y</term>
                <listitem>
                    <para>
                        два вещественных вектор-столбца размрерами
                        <literal>n1</literal> и <literal>n2</literal>: сетка.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>z</term>
                <listitem>
                    <para>
                        вещественная матрица размерами
                        <literal>(n1,n2)</literal>, значения функции.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>nz</term>
                <listitem>
                    <para>
                        значения уровней либо количество уровней.
                    </para>
                    <variablelist>
                        <varlistentry>
                            <term>-</term>
                            <listitem>
                                <para>
                                    Если <varname>nz</varname> - целое число, то
                                    его значение указывает количество кривых
                                    уровней, равномерно распределённых от <literal>zmin</literal>
                                    до <literal>zmax</literal> как показано ниже:
                                </para>
                                <programlisting role="no-scilab-exec"><![CDATA[ 
z= zmin + (1:nz)*(zmax-zmin)/(nz+1)
 ]]></programlisting>
                                <para>
                                    <note>
                                        Заметьте, что уровни <literal>zmin</literal>
                                        и <literal>zmax</literal> не  рисуются
                                        (вообще, они сводятся в точку), но их можно
                                        добавить следующим образом:
                                    </note>
                                </para>
                                <programlisting role="no-scilab-exec"><![CDATA[ 
[im,jm] = find(z == zmin);     // or zmax 
plot2d(x(im)',y(jm)',-9,"000")
 ]]></programlisting>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term>-</term>
                            <listitem>
                                <para>
                                    Если <varname>nz</varname> - вектор, то
                                    <literal>nz(i)</literal> указывает значение
                                    <literal>i</literal>-той кривой уровня.
                                </para>
                            </listitem>
                        </varlistentry>
                    </variablelist>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>style, strf, leg, rect, nax</term>
                <listitem>
                    <para>
                        см. <function>plot2d</function>. Аргумент
                        <varname>style</varname> указывает цвета, которые
                        требуется использовать для кривых уровней. Он должен
                        быть того же самого размера, что и количество уровней.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Описание</title>
        <para>
            Функция <function>contourf</function> раскрашивает поверхность между
            двумя следующими друг за другом кривых уровней поверхности
            <literal>z=f(x,y)</literal> на двумерном графике.
            Значения <literal>f(x,y)</literal> указываются с помощью матрицы
            <varname>z</varname> в точках сетки, определённых через
            <varname>x</varname> и <varname>y</varname>.
        </para>
        <para>
            Вы можете изменить формат чисел с плавающей запятой, печатаемых на
            уровнях, с помощью <code>xset("fpf",string)</code>, где
            <varname>string</varname> указывает форма в формате C-синтаксиса
            (например, <code>string="%.3f"</code>). Используйте
            <code>string=""</code> для переключения обратно в формат по
            умолчанию.
        </para>
        <para>
            Введите команду <code>contourf()</code>, чтобы посмотреть демонстрацию.
        </para>
    </refsection>
    <refsection>
        <title>Примеры</title>
        <programlisting role="example"><![CDATA[ 
contourf(1:10,1:10,rand(10,10),5,1:5,"011"," ",[0,0,11,11])
 ]]></programlisting>
        <scilab:image>
            contourf(1:10,1:10,rand(10,10),5,1:5,"011"," ",[0,0,11,11])
        </scilab:image>
        <programlisting role="example"><![CDATA[ 
function z=peaks(x,y)
x1=x(:).*.ones(1,size(y,'*'));
y1=y(:)'.*.ones(size(x,'*'),1);
z =  (3*(1-x1).^2).*exp(-(x1.^2) - (y1+1).^2) ... 
   - 10*(x1/5 - x1.^3 - y1.^5).*exp(-x1.^2-y1.^2) ... 
   - 1/3*exp(-(x1+1).^2 - y1.^2) 
endfunction

function z=peakit()
x=-4:0.1:4;y=x;z=peaks(x,y);
endfunction

z=peakit();

levels=[-6:-1,-logspace(-5,0,10),logspace(-5,0,10),1:8];
m=size(levels,'*');
n = fix(3/8*m);
r = [(1:n)'/n; ones(m-n,1)];
g = [zeros(n,1); (1:n)'/n; ones(m-2*n,1)];
b = [zeros(2*n,1); (1:m-2*n)'/(m-2*n)];
h = [r g b];
xset('colormap',h);

xset('fpf',' ');
clf();
contourf([],[],z,[-6:-1,-logspace(-5,0,10),logspace(-5,0,10),1:8],0*ones(1,m))

xset('fpf','');
clf();
contourf([],[],z,[-6:-1,-logspace(-5,0,10),logspace(-5,0,10),1:8]);
 ]]></programlisting>
        <scilab:image>
            function z=peaks(x,y)
            x1=x(:).*.ones(1,size(y,'*'));
            y1=y(:)'.*.ones(size(x,'*'),1);
            z =  (3*(1-x1).^2).*exp(-(x1.^2) - (y1+1).^2) ... 
            - 10*(x1/5 - x1.^3 - y1.^5).*exp(-x1.^2-y1.^2) ... 
            - 1/3*exp(-(x1+1).^2 - y1.^2) 
            endfunction
            
            function z=peakit()
            x=-4:0.1:4;y=x;z=peaks(x,y);
            endfunction
            
            z=peakit();
            
            levels=[-6:-1,-logspace(-5,0,10),logspace(-5,0,10),1:8];
            m=size(levels,'*');
            n = fix(3/8*m);
            r = [(1:n)'/n; ones(m-n,1)];
            g = [zeros(n,1); (1:n)'/n; ones(m-2*n,1)];
            b = [zeros(2*n,1); (1:m-2*n)'/(m-2*n)];
            h = [r g b];
            xset('colormap',h);
            xset('fpf',' ');
            clf();
            contourf([],[],z,[-6:-1,-logspace(-5,0,10),logspace(-5,0,10),1:8],0*ones(1,m))
            
        </scilab:image>
    </refsection>
    <refsection role="see also">
        <title>Смотрите также</title>
        <simplelist type="inline">
            <member>
                <link linkend="contour">contour</link>
            </member>
            <member>
                <link linkend="contour2d">contour2d</link>
            </member>
            <member>
                <link linkend="contour2di">contour2di</link>
            </member>
            <member>
                <link linkend="plot2d">plot2d</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
