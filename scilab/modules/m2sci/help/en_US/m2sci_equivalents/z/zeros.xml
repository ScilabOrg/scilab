<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2009 - DIGITEO - Vincent COUVERT
 *
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="m2sci_zeros">
    <refnamediv>
        <refname>zeros (Matlab function)</refname>
        <refpurpose>Create an array of all zeros</refpurpose>
    </refnamediv>
    <refsection>
        <title>Matlab/Scilab equivalent</title>
        <informaltable border="1" width="100%">
            <tr>
                <td align="center">
                    <emphasis role="bold">Matlab</emphasis>
                </td>
                <td align="center">
                    <emphasis role="bold">Scilab</emphasis>
                </td>
            </tr>
            <tr>
                <td>
                    <programlisting role="example"><![CDATA[
zeros
]]></programlisting>
                </td>
                <td>
                    <programlisting role="example"><![CDATA[
zeros
]]></programlisting>
                </td>
            </tr>
        </informaltable>
    </refsection>
    <refsection>
        <title>Particular cases</title>
        <variablelist>
            <varlistentry>
                <term>B=zeros(A)</term>
                <listitem>
                    <para>
                        If <emphasis role="bold">A</emphasis> is a scalar, then Matlab returns a <emphasis role="bold">A*A</emphasis> matrix of zeros but in Scilab you get a <emphasis role="bold">1</emphasis>, use <emphasis role="bold">zeros(A,A)</emphasis> to get the same matrix <emphasis role="bold">B</emphasis>. If <emphasis role="bold">A</emphasis> is a row vector, Scilab and Matlab give the same <emphasis role="bold">B</emphasis>. Finally, if <emphasis role="bold">A</emphasis> is a matrix, in Scilab, <emphasis role="bold">B</emphasis> will be a matrix having the same size as <emphasis role="bold">A</emphasis> whereas in Matlab, you get an error message.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
        <para>
            <note>
                Note that in Matlab, <emphasis role="bold">A</emphasis> can contain complex values (in these cases, only real part of <emphasis role="bold">A</emphasis> is taken in account), what Scilab function do not tolerate.
            </note>
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <informaltable border="1" width="100%">
            <tr>
                <td align="center">
                    <emphasis role="bold">Matlab</emphasis>
                </td>
                <td align="center">
                    <emphasis role="bold">Scilab</emphasis>
                </td>
            </tr>
            <tr>
                <td>
                    <programlisting role="example"><![CDATA[
B = zeros(2)
B = [0,;0,0]
B = zeros(2,2)
B = [0,0;0,0]
B = zeros([3,3])
B = [0,0,0;0,0,0;0,0,0]
]]></programlisting>
                </td>
                <td>
                    <programlisting role="example"><![CDATA[
B = zeros(2)
B = 0
B = zeros(2,2)
B = [0,0;0,0]
B = zeros([3,3])
B = [0,0]
]]></programlisting>
                </td>
            </tr>
        </informaltable>
    </refsection>
</refentry>
