<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2009 - DIGITEO - Vincent COUVERT
 *
 * Copyright (C) 2012 - 2016 - Scilab Enterprises
 *
 * This file is hereby licensed under the terms of the GNU GPL v2.0,
 * pursuant to article 5.3.4 of the CeCILL v.2.1.
 * This file was originally licensed under the terms of the CeCILL v2.1,
 * and continues to be available under such terms.
 * For more information, see the COPYING file which you should have received
 * along with this program.
 * === LICENSE_END ===
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="m2sci_size">
    <refnamediv>
        <refname>size (Matlab function)</refname>
        <refpurpose>Array dimension</refpurpose>
    </refnamediv>
    <refsection>
        <title>Matlab/Scilab equivalent</title>
        <informaltable border="1" width="100%">
            <tr>
                <td align="center">
                    <emphasis role="bold">Matlab</emphasis>
                </td>
                <td align="center">
                    <emphasis role="bold">Scilab</emphasis>
                </td>
            </tr>
            <tr>
                <td>
                    <programlisting role="example"><![CDATA[
size
]]></programlisting>
                </td>
                <td>
                    <programlisting role="example"><![CDATA[
size
]]></programlisting>
                </td>
            </tr>
        </informaltable>
    </refsection>
    <refsection>
        <title>Particular cases</title>
        <para>
            Due to the fact that strings or not considered in the same way in Matlab and in Scilab, results are not equal for string matrices, convert it using <emphasis role="bold">m2scistr</emphasis> to have the same result.
        </para>
        <variablelist>
            <varlistentry>
                <term>d = size(X,dim)</term>
                <listitem>
                    <para>
                        If <emphasis role="bold">dim</emphasis> is greater than number of dimensions of <emphasis role="bold">X</emphasis>, Matlab returns <emphasis role="bold">d=1</emphasis>, but in Scilab, you get an error message. Scilab <emphasis role="bold">mtlb_size</emphasis> can work with <emphasis role="bold">dim</emphasis> greater than number of dimensions of <emphasis role="bold">X</emphasis>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>[d1,...dn] = size(X)</term>
                <listitem>
                    <para>
                        If <emphasis role="bold">n</emphasis> is greater than number of dimensions of <emphasis role="bold">X</emphasis>, all "extra" variables are set to <emphasis role="bold">1</emphasis> in Matlab but Scilab returns an error message. Scilab <emphasis role="bold">mtlb_size</emphasis> returns a Matlab like result in these cases. When <emphasis role="bold">n</emphasis> is less than number of dimensions of <emphasis role="bold">X</emphasis>, <emphasis role="bold">dn</emphasis> contains the product of the sizes of the remaining dimensions in Matlab but in Scilab <emphasis role="bold">dn = size(X,n)</emphasis>, use <emphasis role="bold">mtlb_size</emphasis> for such uses.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
</refentry>
