<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2009 - DIGITEO - Vincent COUVERT
 *
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="m2sci_ones">
    <refnamediv>
        <refname>ones (Matlab function)</refname>
        <refpurpose>Create an array of all ones</refpurpose>
    </refnamediv>
    <refsection>
        <title>Matlab/Scilab equivalent</title>
        <informaltable border="1" width="100%">
            <tr>
                <td align="center">
                    <emphasis role="bold">Matlab</emphasis>
                </td>
                <td align="center">
                    <emphasis role="bold">Scilab</emphasis>
                </td>
            </tr>
            <tr>
                <td>
                    <programlisting role="example"><![CDATA[
ones
]]></programlisting>
                </td>
                <td>
                    <programlisting role="example"><![CDATA[
ones
]]></programlisting>
                </td>
            </tr>
        </informaltable>
    </refsection>
    <refsection>
        <title>Particular cases</title>
        <para>
            <note>
                Note that in Matlab, <emphasis role="strong">A</emphasis> can contain complex values (in these cases, only real part of 
                <emphasis role="strong">A</emphasis> is taken in account), what Scilab function do not tolerate.
            </note>
        </para>
        <programlisting role="example"><![CDATA[ 
// Scilab version
B=ones(A)
    ]]></programlisting>
        <para>
            Most differences stem from the use of <emphasis role="strong">ones</emphasis> in conjunction with 
            <emphasis role="strong">size</emphasis>. In Scilab you do not need to use size: 
        </para>
        <programlisting role="example"><![CDATA[ 
% Matlab version
A = [1 2; 3 4];
B = ones(size(A))
B  = [ 1. 1. ; 1. 1.]
 ]]></programlisting>
        <programlisting role="example"><![CDATA[ 
// Scilab version
A = [1 2; 3 4];
B = ones(A)
B  =[ 1 1; 1 1]
 ]]></programlisting>
        <para>
            As a result, if A is a scalar, then Matlab will return a <emphasis role="strong">A*A</emphasis> matrix of ones but in Scilab you get a 
            <emphasis role="strong">1</emphasis> (just because a scalar is a <emphasis role="strong">1*1</emphasis> matrix), so use 
            <emphasis role="strong">ones(A,A)</emphasis> to get the same matrix <emphasis role="strong">B</emphasis>. If <emphasis role="strong">A</emphasis>
            is a vector, Scilab and Matlab give the same <emphasis role="strong">B</emphasis>. Finally, if <emphasis role="strong">A</emphasis>
            is a matrix, in Scilab, <emphasis role="strong">B</emphasis> will be a matrix having the same size as <emphasis role="strong">A</emphasis>
            whereas in Matlab, you get an error message. 
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <informaltable border="1" width="100%">
            <tr>
                <td align="center">
                    <emphasis role="bold">Matlab</emphasis>
                </td>
                <td align="center">
                    <emphasis role="bold">Scilab</emphasis>
                </td>
            </tr>
            <tr>
                <td>
                    <programlisting role="example"><![CDATA[
B = ones(2)
B = [1,1;1,1]
B = ones(2,2)
B = [1,1;1,1]
B = ones([3,3])
B = [1,1,1;1,1,1;1,1,1]
]]></programlisting>
                </td>
                <td>
                    <programlisting role="example"><![CDATA[
B = ones(2)
B = 1
B = ones(2,2)
B = [1,1;1,1]
B = ones([3,3])
B = [1,1]
]]></programlisting>
                </td>
            </tr>
        </informaltable>
    </refsection>
</refentry>
