<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2009 - DIGITEO - Vincent COUVERT
 *
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="m2sci_eig">
    <refnamediv>
        <refname>eig (Matlab function)</refname>
        <refpurpose>Find eigenvalues and eigenvectors</refpurpose>
    </refnamediv>
    <refsection>
        <title>Matlab/Scilab equivalent</title>
        <informaltable border="1" width="100%">
            <tr>
                <td align="center">
                    <emphasis role="bold">Matlab</emphasis>
                </td>
                <td align="center">
                    <emphasis role="bold">Scilab</emphasis>
                </td>
            </tr>
            <tr>
                <td>
                    <programlisting role="example"><![CDATA[
eig
]]></programlisting>
                </td>
                <td>
                    <programlisting role="example"><![CDATA[
spec ; bdiag 
]]></programlisting>
                </td>
            </tr>
        </informaltable>
    </refsection>
    <refsection>
        <title>Particular cases</title>
        <variablelist>
            <varlistentry>
                <term>eig(A)</term>
                <listitem>
                    <para>Scilab equivalent for eig(A) is spec(A). Scilab eigenvector matrix can differ from Matlab one.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>eig(A,'nobalance')</term>
                <listitem>
                    <para>
                        There is no Scilab equivalent for <emphasis role="bold">"nobalance"</emphasis> option. See examples.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>eig(A,B,flag)</term>
                <listitem>
                    <para>
                        There is no Scilab equivalent for <emphasis role="bold">flag</emphasis>.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Additional Remarks</title>
        <para>
            <note>
                If matrix <varname>B</varname> is nonsingular, the generalized eigenvalues can be computed 
                as the eigenvalues of the matrix <latex>B^{-1}A</latex> i.e. <code>d=spec(B^-1*A)</code>. 
            </note>
        </para>
        <para>
            <note>
                If <varname>A</varname> is a real random square matrix, Scilab equivalent for the Matlab syntax <code>[V,D] = eig(A,'balance')</code> 
                is <code>[D,V] = bdiag(A+%i*0, 1/%eps)</code>. In this case <varname>D</varname> consists of complex 1x1 blocks.
            </note>
        </para>
    </refsection>
    
    <refsection>
        <title>Examples</title>
        <informaltable border="1" width="100%">
            <tr>
                <td align="center">
                    <emphasis role="bold">Matlab</emphasis>
                </td>
                <td align="center">
                    <emphasis role="bold">Scilab</emphasis>
                </td>
            </tr>
            <tr>
                <td>
                    <programlisting role="example"><![CDATA[
d = eig(A,'balance')
[V,D] = eig(A,'balance')
[V,D] = eig(A,'balance')
d = eig(A,B)
d = eig(A,B)
d = eig(A,B)
[V,D] = eig(A,B)
]]></programlisting>
                </td>
                <td>
                    <programlisting role="example"><![CDATA[
d = spec(A)
[D,V]=bdiag(A)
[V,D] = spec(A)
[al,be] = spec(A,B); d = al./be;
d = spec(A,B)
d = spec(inv(B)*A)
[al,be,V] = spec(A,B); D = diag(al./be);
]]></programlisting>
                </td>
            </tr>
        </informaltable>
    </refsection>
</refentry>
