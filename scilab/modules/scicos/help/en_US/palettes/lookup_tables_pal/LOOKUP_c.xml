<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scicos
 * 
 * Copyright (C) INRIA - METALAU Project <scicos@inria.fr> (HTML version)
 * Copyright (C) DIGITEO - Scilab Consortium (XML Docbook version)
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 * 
 * See the file ./license.txt
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:id="LOOKUP_c">
  <refnamediv>
    <refname>LOOKUP_c</refname>
    <refpurpose>1D Lookup table</refpurpose>
  </refnamediv>
  <refsection>
    <title>Block Screenshot</title>
    <para>
      <inlinemediaobject>
        <imageobject>
          <imagedata fileref="../../../images/LOOKUP_c_blk.gif" align="center" valign="middle"/>
        </imageobject>
      </inlinemediaobject>
    </para>
  </refsection>
  <refsection id="Contents_LOOKUP_c">
    <title>Contents</title>
    <itemizedlist>
      <listitem>
        <para>
          <link linkend="LOOKUP_c">1D Lookup table</link>
        </para>
      </listitem>
      <listitem>
        <itemizedlist>
          <listitem>
            <para>
              <xref linkend="Palette_LOOKUP_c">Palette</xref>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="Description_LOOKUP_c">Description</xref>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="Dialogbox_LOOKUP_c">Dialog box</xref>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="Defaultproperties_LOOKUP_c">Default properties</xref>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="Interfacingfunction_LOOKUP_c">Interfacing function</xref>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="Computationalfunction_LOOKUP_c">Computational function</xref>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="Seealso_LOOKUP_c">See also</xref>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="Authors_LOOKUP_c">Authors</xref>
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>
  </refsection>
  <refsection id="Palette_LOOKUP_c">
    <title>Palette</title>
    <itemizedlist>
      <listitem>
        <para>
          <link linkend="Lookup_Tables_pal">Lookup_Tables - Lookup Tables palette</link>
        </para>
      </listitem>
    </itemizedlist>
  </refsection>
  <refsection id="Description_LOOKUP_c">
    <title>Description</title>
    <para>
Lookup Table block realizes a non-linear function defined using a graphical editor.  This block computes an approximation to some function y=f(x) given data vectors x and y.  
</para>
    <para>
The table is defined by specifying the Vector of input values parameter as a 1-by-n vector and the Table data parameter as a 1-by-n vector. The block generates output based on the input values using one of  methods selected from the Lookup method parameter list. The length of the x and y data vectors provided to this block must be identical. Furthermore, the x data vector must be strictly monotonically increasing.  
</para>
    <para>
</para>
  </refsection>
  <refsection id="Dialogbox_LOOKUP_c">
    <title>Dialog box</title>
    <para>
      <inlinemediaobject>
        <imageobject>
          <imagedata fileref="../../../images/LOOKUP_c_gui.gif" align="center" valign="middle"/>
        </imageobject>
      </inlinemediaobject>
    </para>
    <para>

</para>
    <itemizedlist>
      <listitem>
        <para><emphasis role="bold">Spline Interpolation method (0..9):</emphasis> accepted values <inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img3_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject> .
This parameter defines the spline method for interpolating the
    points. The Signal builder block computes a linear or a cubic
    spline or sub-spline  which interpolates the 
    points, i.e., we have 
 for all .  Several
    kind of splines may be computed by selecting the appropriate
    spline method:
 

</para>
        <itemizedlist>
          <listitem>
            <para><emphasis role="bold">0: "Zero order method (Use Input Below)"</emphasis>.  This method
    does not interpolate or extrapolate. Instead, the element in x
    nearest and below the current input is found, i.e., for 
<inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img8_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject>, 
<inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img9_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject>. The corresponding element in y is
    then used as the output. If there is no element in x below the
    current input, then the nearest element is found.


</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">1: "Linear interpolation method"</emphasis>.  This is the default
method; it performs linear interpolation of the inputs. If a value
matches the block's input, the output is the corresponding element in
the output vector. If no value matches the block's input, then the
block performs linear interpolation between the two appropriate
elements of the table to determine an output value, i.e., for 
<inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img10_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject>, 
<inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img11_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject>.  If
the block input is less than the first or greater than the last input
vector element, then the block extrapolates using the first two or
last two points.


</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">2: "Order 2 method"</emphasis>. The interpolation is done by passing
    2-order polynomials between <inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img5_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject> and
    
<inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img12_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject>. The Derivative at <inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img5_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject> is identical
    for two adjacent polynomials. The derivative at <inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img13_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject>
    can be selected arbitrary, so it is selected such that the sum of
    derivatives at all points be minimum. This condition provides a
    less fluctuated signal.


</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">3:"not_a_knot"</emphasis>. The cubic spline is computed by using the
    following conditions (considering <inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img14_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject> points 
<inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img15_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject>):
    

 




</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">4:"periodic"</emphasis>. A periodic cubic spline is computed (<inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img18_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject>
    must verify <inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img19_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject>) by using the conditions:  
</para>
            <para>

 
</para>
            <para>

.
</para>
            <para>
In this case the value
    of <inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img22_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject> is ignored and <inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img23_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject> is used instead. Note that in order
    to generate a periodic signal,  flag should be
    activated.


</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">5:"monotone"</emphasis>. In this case a sub-spline (<inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img4_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject> is only one
    continuously differentiable) is computed such that <inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img4_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject> is monotone
    on each interval: 
</para>
            <para>
if 
<inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img24_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject>, <inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img4_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject> is increasing on
    
<inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img25_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject>. 
</para>
            <para>
if 
<inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img26_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject>, <inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img4_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject> is decreasing on
    
<inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img25_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject>.


</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">6:"clamped"</emphasis>. In this case the cubic spline is computed by
    using the end points derivatives which are set to zero, i.e.,
    




</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">7:"fast"</emphasis>. In this case a sub-spline is computed by using a
    simple local scheme for the derivative at <inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img28_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject> of the
    interpolation polynomial of 
<inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img29_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject>, 
<inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img30_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject>,
    
<inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img12_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject>, except for the end points (derivative at
    these points are computed from the 3 left most points and the 3
    right most points).


</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">8: "Zero order method (Use Input-above)"</emphasis>. 
This method does not interpolate or extrapolate. Instead, the element
in x nearest and above the current input is found, i.e., for 
<inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img8_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject>, 
<inlinemediaobject><imageobject><imagedata fileref="../../../images/LOOKUP_c_img31_eng.gif" align="center" valign="middle"/></imageobject></inlinemediaobject>.. The corresponding
element in y is then used as the output. If there is no element in x
above the current input, then the nearest element is found.


</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">9: "Zero order method (Use Input-nearest)"</emphasis>. This method
 does not interpolate or extrapolate. Instead, the element in x
 nearest the current input is found. The corresponding element in y is
 then used as the output.


</para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para><emphasis role="bold">x:</emphasis> Abscissa data vector (X-axis). This vector can be either a row or a column vector of double data. Further mor it should be monotonic increasing. This vector can be also defined in the Scicos context. The data vector can be specified by mathematical formula. </para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">y:</emphasis> Ordinate data vector (Y-axis). This vector can be either a row or a column vector of double data. Not that the size of X and Y vector should be the same. This vector can be also defined in the Scicos context. The data vector can also be specified by formula. </para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">Extrapolate method (0,1):</emphasis> If the block input is less than the first or greater than the last input vector element, then

</para>
        <itemizedlist>
          <listitem>
            <para>: <emphasis role="bold">0</emphasis>  the block uses the first  or last  point as output.
</para>
          </listitem>
          <listitem>
            <para>: <emphasis role="bold">1</emphasis>  the block extrapolates using the first two or last two points.
</para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para><emphasis role="bold">Launch graphic window(y/n)?:</emphasis> If<emphasis role="bold">y</emphasis> is selected, by clicking on<emphasis role="bold">OK</emphasis> button, a graphical window is launched. In this 2D graphical window, the user can edit data points:</para>
      </listitem>
    </itemizedlist>
  </refsection>
  <refsection id="Defaultproperties_LOOKUP_c">
    <title>Default properties</title>
    <itemizedlist>
      <listitem>
        <para><emphasis role="bold">always active:</emphasis> no</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">direct-feedthrough:</emphasis> yes</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">zero-crossing:</emphasis> no</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">mode:</emphasis> no</para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">regular inputs:</emphasis>
        </para>
        <para>
          <emphasis role="bold">- port 1 : size [-1,-2] / type 1</emphasis>
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">regular outputs:</emphasis>
        </para>
        <para>
          <emphasis role="bold">- port 1 : size [-1,-2] / type -1</emphasis>
        </para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">number/sizes of activation inputs:</emphasis> 0</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">number/sizes of activation outputs:</emphasis> 0</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">continuous-time state:</emphasis> no</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">discrete-time state:</emphasis> no</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">object discrete-time state:</emphasis> no</para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">name of computational function:</emphasis>
          <emphasis role="italic">lookup_c</emphasis>
        </para>
      </listitem>
    </itemizedlist>
  </refsection>
  <refsection id="Interfacingfunction_LOOKUP_c">
    <title>Interfacing function</title>
    <itemizedlist>
      <listitem>
        <para> SCI/modules/scicos_blocks/macros/NonLinear/LOOKUP_c.sci</para>
      </listitem>
    </itemizedlist>
  </refsection>
  <refsection id="Computationalfunction_LOOKUP_c">
    <title>Computational function</title>
    <itemizedlist>
      <listitem>
        <para> SCI/modules/scicos_blocks/src/c/lookup_c.c (Type 4)</para>
      </listitem>
    </itemizedlist>
  </refsection>
  <refsection id="Seealso_LOOKUP_c">
    <title>See also</title>
    <itemizedlist>
      <listitem>
        <para>
          <link linkend="LOOKUP2D">LOOKUP2D - 2D Lookup table (Scicos Block)</link>
        </para>
      </listitem>
    </itemizedlist>
  </refsection>
  <refsection id="Authors_LOOKUP_c">
    <title>Authors</title>
    <para><emphasis role="bold">Masoud Najafi</emphasis> - INRIA</para>
  </refsection>
</refentry>
