<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scicos
 * 
 * Copyright (C) INRIA - METALAU Project <scicos@inria.fr> (HTML version)
 * Copyright (C) DIGITEO - Scilab Consortium (XML Docbook version)
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 * 
 * See the file ./license.txt
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:id="LOGIC">
  <refnamediv>
    <refname>LOGIC</refname>
    <refpurpose>Combinational Logic</refpurpose>
  </refnamediv>
  <refsection>
    <title>Block Screenshot</title>
    <para>
      <inlinemediaobject>
        <imageobject>
          <imagedata fileref="../../../images/LOGIC_blk.gif" align="center" valign="middle"/>
        </imageobject>
      </inlinemediaobject>
    </para>
  </refsection>
  <refsection id="Contents_LOGIC">
    <title>Contents</title>
    <itemizedlist>
      <listitem>
        <para>
          <link linkend="LOGIC">Combinational Logic</link>
        </para>
      </listitem>
      <listitem>
        <itemizedlist>
          <listitem>
            <para>
              <xref linkend="Palette_LOGIC">Palette</xref>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="Description_LOGIC">Description</xref>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="Dialogbox_LOGIC">Dialog box</xref>
            </para>
          </listitem>
          <listitem>
            <para>
              <link linkend="LOGIC">Example</link>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="Defaultproperties_LOGIC">Default properties</xref>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="Interfacingfunction_LOGIC">Interfacing function</xref>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="Computationalfunction_LOGIC">Computational function</xref>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="Seealso_LOGIC">See also</xref>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="Authors_LOGIC">Authors</xref>
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>
  </refsection>
  <refsection id="Palette_LOGIC">
    <title>Palette</title>
    <itemizedlist>
      <listitem>
        <para>
          <link linkend="Integer_pal">Integer - Integer palette</link>
        </para>
      </listitem>
    </itemizedlist>
  </refsection>
  <refsection id="Description_LOGIC">
    <title>Description</title>
    <para>
This block implements a standard truth table for modeling programming array, digital circuit and any other boolean expressions. The user can specify a matrix that defines all the possible block output in the Truth table field. Each row of the matrix contains the output of different combination of input elements. The number of rows must be a power of two, it defines the number of inputs using the equation:  
</para>
    <para>
number of row = 2 (number of input) 
</para>
    <para>
The number of outputs is equal to the number of columns of the matrix.  
</para>
    <para>
This block support only the int8 data type. When the input is positive, the input is considered as logical 1, When it is negative or zero it is considered as logical 0.  
</para>
    <para>
This block can be activated by an implicit input event or it can inherit the clock from the regular input.  
</para>
    <para>
This block is used to implement SR and JK flip-flops.  
</para>
    <para>
</para>
  </refsection>
  <refsection id="Dialogbox_LOGIC">
    <title>Dialog box</title>
    <para>
      <inlinemediaobject>
        <imageobject>
          <imagedata fileref="../../../images/LOGIC_gui.gif" align="center" valign="middle"/>
        </imageobject>
      </inlinemediaobject>
    </para>
    <para>

</para>
    <itemizedlist>
      <listitem>
        <para>
          <emphasis role="bold">Truth table</emphasis>
        </para>
        <para> The matrix of outputs. For more information see the description part.</para>
        <para> Properties : Type 'mat' of size [-1,-2]. </para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">Inherit(0=no 1=yes)</emphasis>
        </para>
        <para> Specifies if the clock is inherit or not.</para>
        <para> Properties : Type 'vec' of size 1.</para>
      </listitem>
    </itemizedlist>
  </refsection>
  <refsection id="Example_LOGIC">
    <title>Example</title>
    <programlisting role="example"><![CDATA[ 
The easiest example to consider is the OR example. In this case we have two inputs and only one output.the truth table for this example is [0;1;1;1].
|-----------|-----------|-----------| 
|  input 1  |  input 2  |  output   | 
|-----------|-----------|-----------| 
|     0     |     0     |     0     | 
|-----------|-----------|-----------| 
|     0     |     1     |     1     | 
|-----------|-----------|-----------| 
|     1     |     0     |     1     | 
|-----------|-----------|-----------| 
|     1     |     1     |     1     | 
|-----------|-----------|-----------|
 ]]></programlisting>
  </refsection>
  <refsection id="Defaultproperties_LOGIC">
    <title>Default properties</title>
    <itemizedlist>
      <listitem>
        <para><emphasis role="bold">always active:</emphasis> no</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">direct-feedthrough:</emphasis> yes</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">zero-crossing:</emphasis> no</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">mode:</emphasis> no</para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">regular inputs:</emphasis>
        </para>
        <para>
          <emphasis role="bold">- port 1 : size [1,1] / type 5</emphasis>
        </para>
        <para>
          <emphasis role="bold">- port 2 : size [1,1] / type 5</emphasis>
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">regular outputs:</emphasis>
        </para>
        <para>
          <emphasis role="bold">- port 1 : size [1,1] / type 5</emphasis>
        </para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">number/sizes of activation inputs:</emphasis> 1</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">number/sizes of activation outputs:</emphasis> 0</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">continuous-time state:</emphasis> no</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">discrete-time state:</emphasis> no</para>
      </listitem>
      <listitem>
        <para><emphasis role="bold">object discrete-time state:</emphasis> no</para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">name of computational function:</emphasis>
          <emphasis role="italic">logic</emphasis>
        </para>
      </listitem>
    </itemizedlist>
  </refsection>
  <refsection id="Interfacingfunction_LOGIC">
    <title>Interfacing function</title>
    <itemizedlist>
      <listitem>
        <para> SCI/modules/scicos_blocks/macros/IntegerOp/LOGIC.sci</para>
      </listitem>
    </itemizedlist>
  </refsection>
  <refsection id="Computationalfunction_LOGIC">
    <title>Computational function</title>
    <itemizedlist>
      <listitem>
        <para> SCI/modules/scicos_blocks/src/c/logic.c (Type 4)</para>
      </listitem>
    </itemizedlist>
  </refsection>
  <refsection id="Seealso_LOGIC">
    <title>See also</title>
    <itemizedlist>
      <listitem>
        <para>
          <link linkend="SRFLIPFLOP">SRFLIPFLOP - SR flip-flop (Scicos Block)</link>
        </para>
      </listitem>
      <listitem>
        <para>
          <link linkend="JKFLIPFLOP">JKFLIPFLOP - JK flip-flop (Scicos Block)</link>
        </para>
      </listitem>
    </itemizedlist>
  </refsection>
  <refsection id="Authors_LOGIC">
    <title>Authors</title>
    <para><emphasis role="bold">Fady NASSIF</emphasis> - INRIA</para>
  </refsection>
</refentry>
