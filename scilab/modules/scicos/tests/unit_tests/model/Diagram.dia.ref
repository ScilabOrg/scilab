// =============================================================================
// Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
// Copyright (C) 2014 - Scilab Enterprises - Paul Bignier
//
//  This file is distributed under the same license as the Scilab package.
// =============================================================================
loadXcosLibs();
// Allocate a diagram and access its fields
scs_m = scicos_diagram()
objectCreated( 1 , DIAGRAM )
propertyUpdated( 1 , DIAGRAM , TITLE ) : NO_CHANGES
propertyUpdated( 1 , DIAGRAM , PATH ) : NO_CHANGES
propertyUpdated( 1 , DIAGRAM , PROPERTIES ) : NO_CHANGES
propertyUpdated( 1 , DIAGRAM , PROPERTIES ) : NO_CHANGES
propertyUpdated( 1 , DIAGRAM , CONTEXT ) : NO_CHANGES
propertyUpdated( 1 , DIAGRAM , CHILDREN ) : NO_CHANGES
propertyUpdated( 1 , DIAGRAM , VERSION_NUMBER ) : NO_CHANGES
scs_m  = 
scicos_diagram type :
  props
  objs
  version
  contrib
scs_m.props
 ans  =
wpar = []
title = ["Untitled";""]
tol = [0.000001;0.000001;1.0000D-10;100001;0;1;0]
tf = 100000
context = 
void1 = []
options = tlist("scsopt")
void2 = []
void3 = []
doc = list()
scs_m.objs
 ans  =
()
scs_m.version
 ans  =
 
scs_m.contrib
 ans  =
()
// Create a diagram containing 2 summation blocks and two links
Sum    = BIGSOM_f("define");
objectCreated( 2 , BLOCK )
propertyUpdated( 2 , BLOCK , GEOMETRY ) : NO_CHANGES
propertyUpdated( 2 , BLOCK , GEOMETRY ) : SUCCESS
propertyUpdated( 2 , BLOCK , ANGLE ) : NO_CHANGES
propertyUpdated( 2 , BLOCK , ANGLE ) : NO_CHANGES
propertyUpdated( 2 , BLOCK , EXPRS ) : SUCCESS
objectCreated( 3 , PORT )
propertyUpdated( 3 , PORT , SOURCE_BLOCK ) : SUCCESS
propertyUpdated( 3 , PORT , PORT_KIND ) : SUCCESS
objectCreated( 4 , PORT )
propertyUpdated( 4 , PORT , SOURCE_BLOCK ) : SUCCESS
propertyUpdated( 4 , PORT , PORT_KIND ) : SUCCESS
propertyUpdated( 2 , BLOCK , INPUTS ) : SUCCESS
objectCreated( 5 , PORT )
propertyUpdated( 5 , PORT , SOURCE_BLOCK ) : SUCCESS
propertyUpdated( 5 , PORT , PORT_KIND ) : SUCCESS
propertyUpdated( 2 , BLOCK , OUTPUTS ) : SUCCESS
propertyUpdated( 2 , BLOCK , LABEL ) : NO_CHANGES
propertyUpdated( 3 , PORT , IMPLICIT ) : NO_CHANGES
propertyUpdated( 4 , PORT , IMPLICIT ) : NO_CHANGES
propertyUpdated( 5 , PORT , IMPLICIT ) : NO_CHANGES
propertyUpdated( 3 , PORT , STYLE ) : NO_CHANGES
propertyUpdated( 4 , PORT , STYLE ) : NO_CHANGES
propertyUpdated( 5 , PORT , STYLE ) : NO_CHANGES
propertyUpdated( 3 , PORT , LABEL ) : NO_CHANGES
propertyUpdated( 4 , PORT , LABEL ) : NO_CHANGES
propertyUpdated( 5 , PORT , LABEL ) : NO_CHANGES
propertyUpdated( 2 , BLOCK , STYLE ) : NO_CHANGES
propertyUpdated( 2 , BLOCK , SIM_FUNCTION_NAME ) : SUCCESS
propertyUpdated( 2 , BLOCK , SIM_FUNCTION_API ) : SUCCESS
propertyUpdated( 4 , PORT , DATATYPE ) : SUCCESS
propertyUpdated( 3 , PORT , DATATYPE ) : SUCCESS
propertyUpdated( 5 , PORT , DATATYPE ) : SUCCESS
propertyUpdated( 2 , BLOCK , STATE ) : NO_CHANGES
propertyUpdated( 2 , BLOCK , DSTATE ) : NO_CHANGES
propertyUpdated( 2 , BLOCK , RPAR ) : SUCCESS
propertyUpdated( 2 , BLOCK , IPAR ) : NO_CHANGES
propertyUpdated( 2 , BLOCK , SIM_BLOCKTYPE ) : SUCCESS
propertyUpdated( 2 , BLOCK , SIM_DEP_UT ) : SUCCESS
propertyUpdated( 2 , BLOCK , LABEL ) : NO_CHANGES
propertyUpdated( 2 , BLOCK , NZCROSS ) : NO_CHANGES
propertyUpdated( 2 , BLOCK , NMODE ) : NO_CHANGES
propertyUpdated( 2 , BLOCK , UID ) : NO_CHANGES
propertyUpdated( 2 , BLOCK , INTERFACE_FUNCTION ) : SUCCESS
Scope1 = CSCOPE("define");
objectCreated( 6 , BLOCK )
propertyUpdated( 6 , BLOCK , GEOMETRY ) : NO_CHANGES
propertyUpdated( 6 , BLOCK , GEOMETRY ) : SUCCESS
propertyUpdated( 6 , BLOCK , ANGLE ) : NO_CHANGES
propertyUpdated( 6 , BLOCK , ANGLE ) : NO_CHANGES
propertyUpdated( 6 , BLOCK , EXPRS ) : SUCCESS
objectCreated( 7 , PORT )
propertyUpdated( 7 , PORT , SOURCE_BLOCK ) : SUCCESS
propertyUpdated( 7 , PORT , PORT_KIND ) : SUCCESS
propertyUpdated( 6 , BLOCK , INPUTS ) : SUCCESS
objectCreated( 8 , PORT )
propertyUpdated( 8 , PORT , SOURCE_BLOCK ) : SUCCESS
propertyUpdated( 8 , PORT , PORT_KIND ) : SUCCESS
propertyUpdated( 6 , BLOCK , EVENT_INPUTS ) : SUCCESS
propertyUpdated( 6 , BLOCK , LABEL ) : NO_CHANGES
propertyUpdated( 7 , PORT , IMPLICIT ) : NO_CHANGES
propertyUpdated( 7 , PORT , STYLE ) : NO_CHANGES
propertyUpdated( 7 , PORT , LABEL ) : NO_CHANGES
propertyUpdated( 6 , BLOCK , STYLE ) : NO_CHANGES
propertyUpdated( 6 , BLOCK , SIM_FUNCTION_NAME ) : SUCCESS
propertyUpdated( 6 , BLOCK , SIM_FUNCTION_API ) : SUCCESS
propertyUpdated( 7 , PORT , DATATYPE ) : SUCCESS
propertyUpdated( 7 , PORT , DATATYPE ) : NO_CHANGES
propertyUpdated( 8 , PORT , DATATYPE ) : SUCCESS
propertyUpdated( 6 , BLOCK , STATE ) : NO_CHANGES
propertyUpdated( 6 , BLOCK , DSTATE ) : NO_CHANGES
propertyUpdated( 6 , BLOCK , RPAR ) : SUCCESS
propertyUpdated( 6 , BLOCK , IPAR ) : SUCCESS
propertyUpdated( 6 , BLOCK , SIM_BLOCKTYPE ) : SUCCESS
propertyUpdated( 6 , BLOCK , SIM_DEP_UT ) : SUCCESS
propertyUpdated( 6 , BLOCK , LABEL ) : NO_CHANGES
propertyUpdated( 6 , BLOCK , NZCROSS ) : NO_CHANGES
propertyUpdated( 6 , BLOCK , NMODE ) : NO_CHANGES
propertyUpdated( 6 , BLOCK , UID ) : NO_CHANGES
propertyUpdated( 6 , BLOCK , INTERFACE_FUNCTION ) : SUCCESS
Scope2 = CSCOPE("define");
objectCreated( 9 , BLOCK )
propertyUpdated( 9 , BLOCK , GEOMETRY ) : NO_CHANGES
propertyUpdated( 9 , BLOCK , GEOMETRY ) : SUCCESS
propertyUpdated( 9 , BLOCK , ANGLE ) : NO_CHANGES
propertyUpdated( 9 , BLOCK , ANGLE ) : NO_CHANGES
propertyUpdated( 9 , BLOCK , EXPRS ) : SUCCESS
objectCreated( 10 , PORT )
propertyUpdated( 10 , PORT , SOURCE_BLOCK ) : SUCCESS
propertyUpdated( 10 , PORT , PORT_KIND ) : SUCCESS
propertyUpdated( 9 , BLOCK , INPUTS ) : SUCCESS
objectCreated( 11 , PORT )
propertyUpdated( 11 , PORT , SOURCE_BLOCK ) : SUCCESS
propertyUpdated( 11 , PORT , PORT_KIND ) : SUCCESS
propertyUpdated( 9 , BLOCK , EVENT_INPUTS ) : SUCCESS
propertyUpdated( 9 , BLOCK , LABEL ) : NO_CHANGES
propertyUpdated( 10 , PORT , IMPLICIT ) : NO_CHANGES
propertyUpdated( 10 , PORT , STYLE ) : NO_CHANGES
propertyUpdated( 10 , PORT , LABEL ) : NO_CHANGES
propertyUpdated( 9 , BLOCK , STYLE ) : NO_CHANGES
propertyUpdated( 9 , BLOCK , SIM_FUNCTION_NAME ) : SUCCESS
propertyUpdated( 9 , BLOCK , SIM_FUNCTION_API ) : SUCCESS
propertyUpdated( 10 , PORT , DATATYPE ) : SUCCESS
propertyUpdated( 10 , PORT , DATATYPE ) : NO_CHANGES
propertyUpdated( 11 , PORT , DATATYPE ) : SUCCESS
propertyUpdated( 9 , BLOCK , STATE ) : NO_CHANGES
propertyUpdated( 9 , BLOCK , DSTATE ) : NO_CHANGES
propertyUpdated( 9 , BLOCK , RPAR ) : SUCCESS
propertyUpdated( 9 , BLOCK , IPAR ) : SUCCESS
propertyUpdated( 9 , BLOCK , SIM_BLOCKTYPE ) : SUCCESS
propertyUpdated( 9 , BLOCK , SIM_DEP_UT ) : SUCCESS
propertyUpdated( 9 , BLOCK , LABEL ) : NO_CHANGES
propertyUpdated( 9 , BLOCK , NZCROSS ) : NO_CHANGES
propertyUpdated( 9 , BLOCK , NMODE ) : NO_CHANGES
propertyUpdated( 9 , BLOCK , UID ) : NO_CHANGES
propertyUpdated( 9 , BLOCK , INTERFACE_FUNCTION ) : SUCCESS
lnk1   = scicos_link();          // Data link
objectCreated( 12 , LINK )
propertyUpdated( 12 , LINK , CONTROL_POINTS ) : NO_CHANGES
propertyUpdated( 12 , LINK , CONTROL_POINTS ) : NO_CHANGES
propertyUpdated( 12 , LINK , LABEL ) : NO_CHANGES
propertyUpdated( 12 , LINK , THICK ) : NO_CHANGES
propertyUpdated( 12 , LINK , COLOR ) : NO_CHANGES
propertyUpdated( 12 , LINK , KIND ) : NO_CHANGES
propertyUpdated( 12 , LINK , SOURCE_PORT ) : NO_CHANGES
propertyUpdated( 12 , LINK , DESTINATION_PORT ) : NO_CHANGES
lnk2   = scicos_link(ct=[1,-1]); // Activation link
objectCreated( 13 , LINK )
propertyUpdated( 13 , LINK , CONTROL_POINTS ) : NO_CHANGES
propertyUpdated( 13 , LINK , CONTROL_POINTS ) : NO_CHANGES
propertyUpdated( 13 , LINK , LABEL ) : NO_CHANGES
propertyUpdated( 13 , LINK , THICK ) : NO_CHANGES
propertyUpdated( 13 , LINK , COLOR ) : NO_CHANGES
propertyUpdated( 13 , LINK , KIND ) : SUCCESS
propertyUpdated( 13 , LINK , SOURCE_PORT ) : NO_CHANGES
propertyUpdated( 13 , LINK , DESTINATION_PORT ) : NO_CHANGES
scs_m = scicos_diagram( objs=list(Sum,Scope1,Scope2,lnk1,lnk2) )
objectCreated( 14 , DIAGRAM )
propertyUpdated( 14 , DIAGRAM , TITLE ) : NO_CHANGES
propertyUpdated( 14 , DIAGRAM , PATH ) : NO_CHANGES
propertyUpdated( 14 , DIAGRAM , PROPERTIES ) : NO_CHANGES
propertyUpdated( 14 , DIAGRAM , PROPERTIES ) : NO_CHANGES
propertyUpdated( 14 , DIAGRAM , CONTEXT ) : NO_CHANGES
propertyUpdated( 2 , BLOCK , PARENT_DIAGRAM ) : SUCCESS
propertyUpdated( 6 , BLOCK , PARENT_DIAGRAM ) : SUCCESS
propertyUpdated( 9 , BLOCK , PARENT_DIAGRAM ) : SUCCESS
propertyUpdated( 12 , LINK , PARENT_DIAGRAM ) : SUCCESS
propertyUpdated( 13 , LINK , PARENT_DIAGRAM ) : SUCCESS
propertyUpdated( 14 , DIAGRAM , CHILDREN ) : SUCCESS
propertyUpdated( 14 , DIAGRAM , VERSION_NUMBER ) : NO_CHANGES
scs_m  = 
scicos_diagram type :
  props
  objs
  version
  contrib
scs_m.objs
 ans  =
     (1)
scicos_Block type :
  graphics
  model
  gui
  doc
     (2)
scicos_Block type :
  graphics
  model
  gui
  doc
     (3)
scicos_Block type :
  graphics
  model
  gui
  doc
     (4)
scicos_Link type :
  xx
  yy
  id
  thick
  ct
  from
  to
     (5)
scicos_Link type :
  xx
  yy
  id
  thick
  ct
  from
  to
// Link output port #1 of block #1 with input port #1 of block #2 thanks to lnk1
l = scs_m.objs;
l(4).from = [1 1 0]; // Link block #1
propertyUpdated( 5 , PORT , CONNECTED_SIGNALS ) : SUCCESS
propertyUpdated( 12 , LINK , SOURCE_PORT ) : SUCCESS
l(1).graphics.pout   // Check that block #1 is connected to lnk1
 ans  =
    4.
l(1).model.out       // "
 ans  =
  - 1.
l(4).to = [2 1 1];   // Link block #2
propertyUpdated( 7 , PORT , CONNECTED_SIGNALS ) : SUCCESS
propertyUpdated( 12 , LINK , DESTINATION_PORT ) : SUCCESS
l(4).from
 ans  =
    1.    1.    0.
l(4).to
 ans  =
    2.    1.    1.
l(2).graphics.pin    // Check that block #2 is connected to lnk1
 ans  =
    4.
l(2).model.in        // "
 ans  =
  - 1.
// Change the end of the link to input port #2 of block #2
l(4).to = [2 2 1];
propertyUpdated( 7 , PORT , CONNECTED_SIGNALS ) : SUCCESS
objectCreated( 15 , PORT )
propertyUpdated( 15 , PORT , IMPLICIT ) : NO_CHANGES
propertyUpdated( 15 , PORT , PORT_KIND ) : SUCCESS
propertyUpdated( 15 , PORT , SOURCE_BLOCK ) : SUCCESS
propertyUpdated( 15 , PORT , CONNECTED_SIGNALS ) : NO_CHANGES
propertyUpdated( 15 , PORT , DATATYPE ) : SUCCESS
propertyUpdated( 6 , BLOCK , INPUTS ) : SUCCESS
propertyUpdated( 15 , PORT , CONNECTED_SIGNALS ) : SUCCESS
propertyUpdated( 12 , LINK , DESTINATION_PORT ) : SUCCESS
l(4).from
 ans  =
    1.    1.    0.
l(4).to
 ans  =
    2.    2.    1.
l(2).graphics.pin    // Check that block #2 is connected to lnk1
 ans  =
    0.
    4.
l(2).model.in        // "
 ans  =
  - 1.
  - 1.
// Disconnect the source, the destination is also disconnected
l(4).from = [0 0 0];
propertyUpdated( 5 , PORT , CONNECTED_SIGNALS ) : SUCCESS
propertyUpdated( 15 , PORT , CONNECTED_SIGNALS ) : SUCCESS
propertyUpdated( 12 , LINK , SOURCE_PORT ) : SUCCESS
propertyUpdated( 12 , LINK , DESTINATION_PORT ) : SUCCESS
l(4).from
 ans  =
    0.    0.    0.
l(4).to
 ans  =
    0.    0.    0.
l(1).graphics.pout   // Check that both blocks are unconnected
 ans  =
    0.
l(2).graphics.pin    // "
 ans  =
    0.
    0.
// Now link the two Scope blocks together by adding an event output port to block #3 thanks to lnk2
l(5).from = [2 1 1]; // Link the input of block #2
propertyUpdated( 8 , PORT , CONNECTED_SIGNALS ) : SUCCESS
propertyUpdated( 13 , LINK , SOURCE_PORT ) : SUCCESS
l(5).to = [3 1 0];   // Add an event output to block #3 and link it to the previous
objectCreated( 16 , PORT )
propertyUpdated( 16 , PORT , IMPLICIT ) : NO_CHANGES
propertyUpdated( 16 , PORT , PORT_KIND ) : SUCCESS
propertyUpdated( 16 , PORT , SOURCE_BLOCK ) : SUCCESS
propertyUpdated( 16 , PORT , CONNECTED_SIGNALS ) : NO_CHANGES
propertyUpdated( 16 , PORT , DATATYPE ) : SUCCESS
propertyUpdated( 9 , BLOCK , EVENT_OUTPUTS ) : SUCCESS
propertyUpdated( 16 , PORT , CONNECTED_SIGNALS ) : SUCCESS
propertyUpdated( 13 , LINK , DESTINATION_PORT ) : SUCCESS
l(5).from
 ans  =
    2.    1.    1.
l(5).to
 ans  =
    3.    2.    0.
l(2).graphics.pein   // Check that block #2 is connected to lnk2
 ans  =
    5.
l(2).model.evtin     // "
 ans  =
    1.
l(3).graphics.peout  // Check that block #3 is connected to lnk2
 ans  =
    5.
l(3).model.evtout    // "
 ans  =
  - 1.
// Verify that it is impossible to link two inputs or two outputs together
l(5).from = [2 1 0]; // Two outputs
scicos_setfield: Wrong value for input argument #2: unable to set "from".
l(5).to = [3 1 1];   // Two inputs
scicos_setfield: Wrong value for input argument #2: unable to set "to".
