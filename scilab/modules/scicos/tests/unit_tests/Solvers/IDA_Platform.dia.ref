// =============================================================================
// Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
// Copyright (C) 2013 - Scilab Enterprises - Paul Bignier
//
//  This file is distributed under the same license as the Scilab package.
// =============================================================================
// <-- ENGLISH IMPOSED -->
// <-- XCOS TEST -->
// Import diagram
assert_checktrue(importXcosDiagram("SCI/modules/xcos/tests/unit_tests/Solvers/DDaskr_Platform_test.zcos"));
// Redefining messagebox() to avoid popup
prot = funcprot();
funcprot(0);
function messagebox(msg, msg_title)
 disp(msg);
endfunction
funcprot(prot);
IDA_val_ref = [ 11.
                11.
                11.
                7.1057377
                4.2276434
                3.7837192
                2.9538128
                5.8771057
                6.3928885
                7.7794415
                8.7234525
                8.1656745
                5.4692996
                4.119467
                3.98566
                4.5880334
                6.2619705
                7.460788
                8.0411235
                7.0316339
                5.9103864
                5.0870516
                4.8350387
                5.2736793
                6.0991627
                6.8411039
                7.22751
                6.791484
                6.0262625
                5.4580017
                5.3754978
                5.5876889
                6.078075
                6.5118764
                6.6403792
                6.4498018
                6.0902532
                5.7053277
                5.6308887
                5.8353956 ];
IDA_time_ref = (0:.5:19.5)';
scs_m.props.tol(6) = 100; // Solver
scs_m.props.context = "per = 0.5"; // Period, to get more varied results
scicos_simulate(scs_m);   // IDA
--------------------------------------------\
 Main Modelica : TMPDIR/DDaskr_Platform_test_im.mo

 Flat Modelica : TMPDIR/DDaskr_Platform_test_imf.mo
 Simulation C code :TMPDIR/DDaskr_Platform_test_im.c
 
!Modelica blocks are reduced to a block with:             !
!                                                         !
!Number of differential states: 4                         !
!                                                         !
!Number of algebraic states: 0                            !
!                                                         !
!Number of discrete time states  : 2                      !
!                                                         !
!Number of zero-crossing surfaces: 1                      !
!                                                         !
!Number of modes  : 0                                     !
!                                                         !
!Number of inputs : 0                                     !
!                                                         !
!Number of outputs: 1                                     !
!                                                         !
!Input/output dependency:[T]                              !
!                                                         !
!Analytical Jacobian: enabled  (%Jacobian=%t)             !
!                                                         !
!Parameter embedding mode: enabled (%Modelica_ParEmb=%t)  !
!                                                         !
!                                                         !
!                                                         !
!Generated files path: TMPDIR/          !
!                                                         !
!                                                         !
   Generate a loader file
   Generate a Makefile
   ilib_gen_Make: Copy compilation files (Makefile*, libtool...) to TMPDIR
   ilib_gen_Make: Copy DDaskr_Platform_test_im.c to TMPDIR
   ilib_gen_Make: configure : Generate Makefile.
   ilib_gen_Make: Modification of the Makefile in TMPDIR.
   Running the Makefile
   Generate a cleaner file
Shared archive loaded.
Link done.
assert_checkalmostequal(res.values, IDA_val_ref, [], 1d-7);
assert_checkalmostequal(res.time, IDA_time_ref);
