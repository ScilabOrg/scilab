# 23 "xMLLexer.mll"
 

open XMLParser

exception Eof


# 10 "xMLLexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\214\255\215\255\045\000\002\000\117\000\079\000\254\255\
    \255\255\197\000\211\000\221\000\233\000\248\000\250\255\081\001\
    \117\000\006\000\013\000\036\000\021\000\039\000\033\000\040\000\
    \041\000\068\000\190\000\048\000\196\000\033\000\033\000\062\000\
    \074\000\069\000\000\000\249\255\003\000\109\001\081\000\071\000\
    \094\000\112\000\110\001\005\000\210\000\011\000\090\001\001\000\
    \233\255\006\000\117\001\144\000\135\000\138\000\156\000\119\001\
    \008\000\054\001\014\000\122\001\002\000\232\255\170\000\183\000\
    \193\000\034\000\248\255\191\000\188\000\206\000\196\000\213\000\
    \192\000\214\000\232\000\225\000\015\001\013\000\118\001\010\001\
    \021\001\025\001\033\001\035\001\031\001\023\001\040\001\034\001\
    \044\001\085\001\247\255\034\001\054\001\044\001\044\001\057\001\
    \057\001\044\001\098\001\243\255\045\001\064\001\048\001\103\001\
    \242\255\056\001\067\001\106\001\239\255\107\001\237\255\056\001\
    \063\001\069\001\065\001\079\001\069\001\119\001\225\255\067\001\
    \085\001\080\001\089\001\083\001\078\001\081\001\136\001\224\255\
    \104\001\086\001\098\001\094\001\097\001\094\001\149\001\221\255\
    \111\001\103\001\120\001\117\001\109\001\121\001\104\001\107\001\
    \122\001\110\001\164\001\217\255\128\001\128\001\122\001\169\001\
    \216\255\116\001\133\001\128\001\138\001\131\001\126\001\128\001\
    \182\001\246\255\148\001\130\001\142\001\137\001\139\001\241\001\
    \242\001\190\001\223\255\145\001\158\001\143\001\141\001\160\001\
    \144\001\199\001\245\255\152\001\152\001\164\001\164\001\151\001\
    \205\001\244\255\167\001\170\001\154\001\170\001\172\001\010\002\
    \011\002\180\001\170\001\164\001\181\001\018\002\019\002\251\001\
    \024\002\224\001\227\255\025\002\001\002\230\001\226\255\181\001\
    \188\001\195\001\191\001\205\001\195\001\242\001\241\255\195\001\
    \208\001\249\001\203\001\240\255\201\001\211\001\214\001\000\002\
    \029\002\034\002\031\002\032\002\036\002\035\002\042\002\070\002\
    \046\002\041\002\075\002\086\002\091\002\103\002\218\001\012\002\
    \238\255\217\001\232\001\241\001\231\001\245\001\223\001\245\001\
    \238\001\233\001\004\002\134\002\145\002\243\001\007\002\010\002\
    \147\002\155\002\011\002\008\002\011\002\012\002\002\002\160\002\
    \161\002\025\002\041\002\042\002\060\002\162\002\172\002\138\002\
    \173\002\162\002\114\002\234\255\074\002\093\002\091\002\083\002\
    \100\002\081\002\084\002\099\002\194\002\199\002\155\002\219\255\
    \147\002\220\255\101\002\102\002\112\002\104\002\099\002\209\002\
    \215\002\100\002\107\002\104\002\111\002\000\000\167\002\228\255\
    \114\002\253\255\136\002\126\002\118\002\135\002\229\002\231\002\
    \203\002\230\002\183\002\128\002\151\002\141\002\133\002\151\002\
    \001\003\006\003\219\002\017\003\009\003\193\002\139\002\159\002\
    \150\002\150\002\167\002\041\003\047\003\235\002\048\003\049\003\
    \211\002\156\002\184\002\175\002\167\002\192\002\065\003\050\003\
    \013\003\083\003\074\003\233\002\182\002\204\002\199\002\191\002\
    \213\002\108\003\111\003\042\003\123\003\110\003\003\003\204\002\
    \226\002\216\002\208\002\232\002\120\003\145\003\056\003\148\003\
    \152\003\023\003";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\041\000\041\000\004\000\002\000\255\255\
    \255\255\255\255\003\000\003\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\026\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \033\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\024\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\020\000\255\255\255\255\255\255\
    \255\255\019\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\037\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \025\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\002\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\002\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\002\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\002\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\002\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \002\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_default = 
   "\001\000\000\000\000\000\255\255\016\000\255\255\255\255\000\000\
    \000\000\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \016\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\044\000\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\057\000\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\000\000\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\199\000\
    \255\255\255\255\000\000\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \224\000\255\255\224\000\224\000\224\000\224\000\224\000\224\000\
    \224\000\224\000\224\000\224\000\224\000\224\000\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\015\001\
    \255\255\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \049\001\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \056\001\255\255\255\255\049\001\255\255\255\255\255\255\255\255\
    \255\255\255\255\066\001\255\255\255\255\255\255\049\001\255\255\
    \255\255\255\255\255\255\255\255\255\255\077\001\255\255\255\255\
    \255\255\049\001\255\255\255\255\255\255\255\255\255\255\255\255\
    \088\001\255\255\255\255\255\255\049\001\255\255\255\255\255\255\
    \255\255\255\255\255\255\099\001\255\255\255\255\255\255\049\001\
    \255\255\255\255\255\255\255\255\255\255\255\255\110\001\255\255\
    \255\255\255\255";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\008\000\007\000\000\000\037\000\008\000\043\000\050\000\
    \037\000\056\000\043\000\050\000\045\000\056\000\078\000\058\000\
    \045\000\000\000\078\000\058\000\000\000\000\000\000\000\000\000\
    \008\000\000\000\004\000\037\000\014\000\043\000\050\000\044\000\
    \056\000\000\000\057\000\045\000\000\000\078\000\058\000\046\001\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\047\000\000\000\003\000\060\000\035\000\048\000\
    \061\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\026\000\005\000\015\000\005\000\
    \066\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\041\001\034\001\010\000\253\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\003\001\215\000\239\000\002\001\207\000\171\000\049\000\
    \018\000\063\000\025\000\020\000\009\000\238\000\021\000\014\000\
    \022\000\036\000\028\000\027\000\017\000\173\000\172\000\062\000\
    \024\000\023\000\032\000\013\000\019\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\033\000\
    \154\000\034\000\039\000\040\000\009\000\153\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\015\000\005\000\041\000\005\000\042\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \012\000\052\000\012\000\053\000\045\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\054\000\
    \002\000\055\000\255\255\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\067\000\
    \009\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\081\000\064\000\030\000\065\000\083\000\
    \068\000\084\000\069\000\079\000\086\000\029\000\046\000\070\000\
    \071\000\085\000\082\000\031\000\072\000\080\000\073\000\074\000\
    \009\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\075\000\005\000\076\000\005\000\
    \058\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\016\000\077\000\255\255\037\000\042\000\
    \016\000\148\000\037\000\042\000\044\000\136\000\050\000\078\000\
    \055\000\044\000\050\000\078\000\055\000\120\000\111\000\109\000\
    \105\000\087\000\119\000\091\000\092\000\037\000\042\000\088\000\
    \016\000\089\000\059\000\090\000\100\000\050\000\078\000\055\000\
    \093\000\044\000\094\000\095\000\057\000\096\000\097\000\098\000\
    \099\000\057\000\101\000\102\000\103\000\104\000\106\000\107\000\
    \108\000\110\000\112\000\043\000\113\000\016\000\114\000\115\000\
    \116\000\117\000\016\000\016\000\056\000\118\000\044\000\016\000\
    \128\000\057\000\121\000\044\000\044\000\122\000\123\000\016\000\
    \044\000\124\000\125\000\016\000\126\000\016\000\127\000\016\000\
    \044\000\129\000\130\000\131\000\044\000\132\000\044\000\133\000\
    \044\000\134\000\255\255\135\000\137\000\138\000\057\000\139\000\
    \140\000\141\000\142\000\057\000\057\000\143\000\144\000\145\000\
    \057\000\146\000\147\000\038\000\149\000\150\000\151\000\152\000\
    \057\000\162\000\155\000\051\000\057\000\156\000\057\000\157\000\
    \057\000\158\000\159\000\160\000\161\000\163\000\164\000\165\000\
    \166\000\167\000\168\000\168\000\170\000\186\000\168\000\168\000\
    \179\000\174\000\175\000\176\000\177\000\178\000\180\000\181\000\
    \182\000\183\000\184\000\185\000\187\000\188\000\189\000\190\000\
    \191\000\168\000\168\000\192\000\192\000\194\000\195\000\192\000\
    \192\000\196\000\197\000\197\000\198\000\203\000\202\000\197\000\
    \198\000\200\000\203\000\199\000\206\000\200\000\203\000\208\000\
    \199\000\209\000\192\000\192\000\210\000\211\000\212\000\213\000\
    \214\000\216\000\197\000\198\000\217\000\199\000\255\255\219\000\
    \200\000\203\000\220\000\221\000\222\000\223\000\224\000\255\255\
    \199\000\255\255\255\255\241\000\224\000\255\255\255\255\201\000\
    \205\000\224\000\240\000\255\255\255\255\242\000\227\000\198\000\
    \255\255\243\000\244\000\245\000\246\000\247\000\248\000\204\000\
    \218\000\226\000\249\000\226\000\226\000\199\000\250\000\226\000\
    \226\000\224\000\199\000\199\000\169\000\226\000\226\000\199\000\
    \255\255\251\000\226\000\254\000\255\000\255\255\000\001\199\000\
    \020\001\004\001\005\001\199\000\006\001\199\000\007\001\199\000\
    \255\255\225\000\010\001\225\000\225\000\255\255\224\000\225\000\
    \225\000\193\000\226\000\224\000\224\000\225\000\225\000\226\000\
    \224\000\255\255\225\000\228\000\200\000\229\000\231\000\252\000\
    \224\000\230\000\226\000\252\000\224\000\011\001\224\000\226\000\
    \224\000\237\000\252\000\234\000\001\001\233\000\252\000\012\001\
    \001\001\013\001\225\000\226\000\001\001\232\000\252\000\225\000\
    \001\001\008\001\008\001\013\001\016\001\008\001\008\001\013\001\
    \019\001\252\000\225\000\001\001\235\000\014\001\016\001\225\000\
    \021\001\014\001\016\001\001\001\022\001\236\000\023\001\024\001\
    \008\001\008\001\013\001\225\000\015\001\025\001\026\001\027\001\
    \028\001\015\001\032\001\029\001\014\001\016\001\015\001\029\001\
    \029\001\033\001\035\001\036\001\029\001\037\001\038\001\039\001\
    \042\001\031\001\040\001\043\001\018\001\044\001\040\001\014\001\
    \040\001\015\001\029\001\045\001\040\001\047\001\017\001\029\001\
    \050\001\051\001\052\001\053\001\054\001\057\001\054\001\057\001\
    \055\001\040\001\054\001\057\001\055\001\008\000\060\001\040\001\
    \061\001\062\001\063\001\255\255\064\001\067\001\015\001\008\000\
    \072\001\071\001\073\001\015\001\015\001\054\001\057\001\055\001\
    \015\001\056\001\064\001\074\001\075\001\078\001\064\001\065\001\
    \015\001\008\000\082\001\065\001\015\001\058\001\015\001\009\001\
    \015\001\083\001\067\001\084\001\085\001\255\255\067\001\255\255\
    \255\255\064\001\055\001\255\255\255\255\086\001\065\001\008\000\
    \066\001\255\255\255\255\066\001\093\001\094\001\255\255\089\001\
    \066\001\067\001\075\001\095\001\096\001\030\001\075\001\068\001\
    \076\001\078\001\097\001\087\001\076\001\078\001\065\001\087\001\
    \069\001\008\000\104\001\105\001\106\001\107\001\255\255\079\001\
    \066\001\075\001\086\001\255\255\100\001\108\001\086\001\076\001\
    \078\001\077\001\087\001\077\001\088\001\008\000\255\255\000\000\
    \077\001\000\000\111\001\255\255\089\001\000\000\000\000\080\001\
    \089\001\086\001\000\000\000\000\000\000\066\001\076\001\255\255\
    \000\000\090\001\066\001\066\001\088\001\000\000\000\000\066\001\
    \077\001\088\001\007\000\089\001\000\000\097\001\000\000\066\001\
    \098\001\097\001\000\000\066\001\098\001\066\001\087\001\066\001\
    \007\000\108\001\091\001\000\000\100\001\108\001\101\001\000\000\
    \100\001\088\001\255\255\007\000\097\001\077\001\000\000\098\001\
    \099\001\099\001\077\001\077\001\112\001\099\001\000\000\077\001\
    \108\001\000\000\109\001\100\001\007\000\111\001\109\001\077\001\
    \000\000\111\001\000\000\077\001\000\000\077\001\088\001\077\001\
    \000\000\098\001\102\001\088\001\088\001\099\001\000\000\000\000\
    \088\001\109\001\000\000\110\001\111\001\109\001\007\000\000\000\
    \088\001\000\000\110\001\000\000\088\001\000\000\088\001\110\001\
    \088\001\000\000\000\000\113\001\000\000\000\000\000\000\000\000\
    \000\000\000\000\099\001\255\255\007\000\000\000\000\000\099\001\
    \099\001\000\000\000\000\000\000\099\001\000\000\000\000\110\001\
    \000\000\000\000\000\000\255\255\099\001\000\000\000\000\000\000\
    \099\001\000\000\099\001\000\000\099\001\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\110\001\000\000\000\000\000\000\
    \000\000\110\001\110\001\000\000\000\000\000\000\110\001\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\110\001\000\000\
    \000\000\000\000\110\001\000\000\110\001\255\255\110\001\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\036\000\000\000\043\000\049\000\
    \036\000\056\000\043\000\049\000\045\000\056\000\077\000\058\000\
    \045\000\255\255\077\000\058\000\255\255\255\255\255\255\255\255\
    \000\000\255\255\000\000\036\000\004\000\043\000\049\000\043\000\
    \056\000\255\255\056\000\045\000\255\255\077\000\058\000\045\001\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\045\000\255\255\000\000\058\000\034\000\047\000\
    \060\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\003\000\000\000\004\000\000\000\
    \065\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\017\000\018\000\006\000\020\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\019\000\022\000\021\000\019\000\023\000\024\000\029\000\
    \003\000\027\000\003\000\003\000\006\000\021\000\003\000\016\000\
    \003\000\030\000\003\000\003\000\003\000\024\000\024\000\027\000\
    \003\000\003\000\031\000\005\000\003\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\032\000\
    \025\000\033\000\038\000\039\000\006\000\025\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\016\000\005\000\040\000\005\000\041\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \009\000\051\000\009\000\052\000\044\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\053\000\
    \000\000\054\000\004\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\011\000\011\000\062\000\
    \010\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\026\000\063\000\028\000\064\000\026\000\
    \067\000\026\000\068\000\026\000\026\000\028\000\044\000\069\000\
    \070\000\026\000\026\000\028\000\071\000\026\000\072\000\073\000\
    \010\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\074\000\013\000\075\000\013\000\
    \057\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \013\000\013\000\013\000\015\000\076\000\016\000\037\000\042\000\
    \015\000\079\000\037\000\042\000\046\000\080\000\050\000\078\000\
    \055\000\046\000\050\000\078\000\055\000\081\000\082\000\083\000\
    \084\000\086\000\081\000\085\000\085\000\037\000\042\000\087\000\
    \015\000\088\000\057\000\089\000\091\000\050\000\078\000\055\000\
    \092\000\046\000\093\000\094\000\059\000\095\000\096\000\097\000\
    \098\000\059\000\100\000\101\000\102\000\103\000\105\000\106\000\
    \107\000\109\000\111\000\042\000\112\000\015\000\113\000\114\000\
    \115\000\116\000\015\000\015\000\055\000\117\000\046\000\015\000\
    \119\000\059\000\120\000\046\000\046\000\121\000\122\000\015\000\
    \046\000\123\000\124\000\015\000\125\000\015\000\126\000\015\000\
    \046\000\128\000\129\000\130\000\046\000\131\000\046\000\132\000\
    \046\000\133\000\044\000\134\000\136\000\137\000\059\000\138\000\
    \139\000\140\000\141\000\059\000\059\000\142\000\143\000\144\000\
    \059\000\145\000\146\000\037\000\148\000\149\000\150\000\151\000\
    \059\000\153\000\154\000\050\000\059\000\155\000\059\000\156\000\
    \059\000\157\000\158\000\159\000\160\000\162\000\163\000\164\000\
    \165\000\166\000\167\000\168\000\169\000\171\000\167\000\168\000\
    \172\000\173\000\174\000\175\000\176\000\177\000\179\000\180\000\
    \181\000\182\000\183\000\184\000\186\000\187\000\188\000\189\000\
    \190\000\167\000\168\000\191\000\192\000\193\000\194\000\191\000\
    \192\000\195\000\196\000\197\000\198\000\199\000\201\000\197\000\
    \198\000\200\000\203\000\204\000\205\000\200\000\203\000\207\000\
    \204\000\208\000\191\000\192\000\209\000\210\000\211\000\212\000\
    \213\000\215\000\197\000\198\000\216\000\198\000\057\000\217\000\
    \200\000\203\000\218\000\220\000\221\000\222\000\223\000\224\000\
    \204\000\226\000\227\000\238\000\225\000\229\000\228\000\200\000\
    \203\000\225\000\239\000\233\000\230\000\241\000\226\000\197\000\
    \232\000\242\000\243\000\244\000\245\000\246\000\247\000\199\000\
    \217\000\224\000\248\000\226\000\227\000\204\000\249\000\229\000\
    \228\000\225\000\204\000\204\000\167\000\233\000\230\000\204\000\
    \231\000\250\000\232\000\253\000\254\000\234\000\255\000\204\000\
    \002\001\003\001\004\001\204\000\005\001\204\000\006\001\204\000\
    \235\000\224\000\009\001\226\000\227\000\236\000\225\000\229\000\
    \228\000\192\000\231\000\225\000\225\000\233\000\230\000\234\000\
    \225\000\237\000\232\000\227\000\198\000\228\000\230\000\251\000\
    \225\000\229\000\235\000\251\000\225\000\010\001\225\000\236\000\
    \225\000\236\000\252\000\233\000\000\001\232\000\252\000\011\001\
    \000\001\012\001\231\000\237\000\001\001\231\000\251\000\234\000\
    \001\001\007\001\008\001\013\001\015\001\007\001\008\001\013\001\
    \018\001\252\000\235\000\000\001\234\000\014\001\016\001\236\000\
    \020\001\014\001\016\001\001\001\021\001\235\000\022\001\023\001\
    \007\001\008\001\013\001\237\000\017\001\024\001\025\001\026\001\
    \027\001\017\001\030\001\028\001\014\001\016\001\014\001\028\001\
    \029\001\032\001\034\001\035\001\029\001\036\001\037\001\038\001\
    \041\001\030\001\039\001\042\001\016\001\043\001\039\001\013\001\
    \040\001\017\001\028\001\044\001\040\001\046\001\015\001\029\001\
    \048\001\050\001\051\001\052\001\053\001\056\001\054\001\057\001\
    \055\001\039\001\054\001\057\001\055\001\058\001\059\001\040\001\
    \060\001\061\001\062\001\199\000\063\001\066\001\017\001\069\001\
    \071\001\070\001\072\001\017\001\017\001\054\001\057\001\055\001\
    \017\001\055\001\064\001\073\001\074\001\077\001\064\001\065\001\
    \017\001\080\001\081\001\065\001\017\001\057\001\017\001\008\001\
    \017\001\082\001\067\001\083\001\084\001\224\000\067\001\226\000\
    \227\000\064\001\054\001\229\000\228\000\085\001\065\001\091\001\
    \065\001\233\000\230\000\068\001\092\001\093\001\232\000\088\001\
    \068\001\067\001\075\001\094\001\095\001\028\001\075\001\066\001\
    \076\001\078\001\096\001\087\001\076\001\078\001\064\001\087\001\
    \067\001\102\001\103\001\104\001\105\001\106\001\231\000\077\001\
    \068\001\075\001\086\001\234\000\099\001\107\001\086\001\076\001\
    \078\001\076\001\087\001\079\001\087\001\113\001\235\000\255\255\
    \079\001\255\255\110\001\236\000\089\001\255\255\255\255\078\001\
    \089\001\086\001\255\255\255\255\255\255\068\001\075\001\237\000\
    \255\255\088\001\068\001\068\001\090\001\255\255\255\255\068\001\
    \079\001\090\001\048\001\089\001\255\255\097\001\255\255\068\001\
    \098\001\097\001\255\255\068\001\098\001\068\001\086\001\068\001\
    \059\001\108\001\089\001\255\255\100\001\108\001\099\001\255\255\
    \100\001\090\001\015\001\070\001\097\001\079\001\255\255\098\001\
    \101\001\098\001\079\001\079\001\110\001\101\001\255\255\079\001\
    \108\001\255\255\109\001\100\001\081\001\111\001\109\001\079\001\
    \255\255\111\001\255\255\079\001\255\255\079\001\090\001\079\001\
    \255\255\097\001\100\001\090\001\090\001\101\001\255\255\255\255\
    \090\001\109\001\255\255\109\001\111\001\108\001\092\001\255\255\
    \090\001\255\255\112\001\255\255\090\001\255\255\090\001\112\001\
    \090\001\255\255\255\255\111\001\255\255\255\255\255\255\255\255\
    \255\255\255\255\101\001\056\001\103\001\255\255\255\255\101\001\
    \101\001\255\255\255\255\255\255\101\001\255\255\255\255\112\001\
    \255\255\255\255\255\255\066\001\101\001\255\255\255\255\255\255\
    \101\001\255\255\101\001\255\255\101\001\255\255\255\255\255\255\
    \255\255\255\255\255\255\077\001\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\112\001\255\255\255\255\255\255\
    \255\255\112\001\112\001\255\255\255\255\255\255\112\001\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\112\001\255\255\
    \255\255\255\255\112\001\255\255\112\001\088\001\112\001\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\099\001\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \110\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 49 "xMLLexer.mll"
                ( token lexbuf )
# 475 "xMLLexer.ml"

  | 1 ->
# 52 "xMLLexer.mll"
                ( token lexbuf )
# 480 "xMLLexer.ml"

  | 2 ->
# 56 "xMLLexer.mll"
                ( let lxm = Lexing.lexeme lexbuf in
                    UNSIGNED_INTEGER lxm )
# 486 "xMLLexer.ml"

  | 3 ->
# 60 "xMLLexer.mll"
                ( let lxm = Lexing.lexeme lexbuf in
                    UNSIGNED_NUMBER lxm )
# 492 "xMLLexer.ml"

  | 4 ->
# 64 "xMLLexer.mll"
                ( let lxm = Lexing.lexeme lexbuf in
                    IDENT lxm )
# 498 "xMLLexer.ml"

  | 5 ->
# 68 "xMLLexer.mll"
                ( let lxm = Lexing.lexeme lexbuf in
                    STRING (String.sub lxm 1 (String.length lxm - 2)) )
# 504 "xMLLexer.ml"

  | 6 ->
# 71 "xMLLexer.mll"
                 ( let _ = Lexing.lexeme lexbuf in MODEL_TAG )
# 509 "xMLLexer.ml"

  | 7 ->
# 72 "xMLLexer.mll"
                  ( let _ = Lexing.lexeme lexbuf in NAME_TAG )
# 514 "xMLLexer.ml"

  | 8 ->
# 73 "xMLLexer.mll"
                   ( let _ = Lexing.lexeme lexbuf in NAME_END_TAG )
# 519 "xMLLexer.ml"

  | 9 ->
# 74 "xMLLexer.mll"
                      ( let _ = Lexing.lexeme lexbuf in ELEMENTS_TAG )
# 524 "xMLLexer.ml"

  | 10 ->
# 75 "xMLLexer.mll"
                      ( let _ = Lexing.lexeme lexbuf in ELEMENT_STRUCT_TAG )
# 529 "xMLLexer.ml"

  | 11 ->
# 76 "xMLLexer.mll"
                          ( let _ = Lexing.lexeme lexbuf in ELEMENT_STRUCT_SUBNODES_TAG )
# 534 "xMLLexer.ml"

  | 12 ->
# 77 "xMLLexer.mll"
                           ( let _ = Lexing.lexeme lexbuf in ELEMENT_STRUCT_SUBNODES_END_TAG )
# 539 "xMLLexer.ml"

  | 13 ->
# 78 "xMLLexer.mll"
                       ( let _ = Lexing.lexeme lexbuf in ELEMENT_STRUCT_END_TAG )
# 544 "xMLLexer.ml"

  | 14 ->
# 79 "xMLLexer.mll"
                        ( let _ = Lexing.lexeme lexbuf in ELEMENT_TERMINAL_TAG )
# 549 "xMLLexer.ml"

  | 15 ->
# 80 "xMLLexer.mll"
                      ( let _ = Lexing.lexeme lexbuf in ELEMENT_TERMINAL_KIND_TAG )
# 554 "xMLLexer.ml"

  | 16 ->
# 81 "xMLLexer.mll"
                       ( let _ = Lexing.lexeme lexbuf in ELEMENT_TERMINAL_KIND_END_TAG )
# 559 "xMLLexer.ml"

  | 17 ->
# 82 "xMLLexer.mll"
                    ( let _ = Lexing.lexeme lexbuf in ELEMENT_TERMINAL_ID_TAG )
# 564 "xMLLexer.ml"

  | 18 ->
# 83 "xMLLexer.mll"
                     ( let _ = Lexing.lexeme lexbuf in ELEMENT_TERMINAL_ID_END_TAG )
# 569 "xMLLexer.ml"

  | 19 ->
# 84 "xMLLexer.mll"
                            ( let _ = Lexing.lexeme lexbuf in element_fixed_value lexbuf )
# 574 "xMLLexer.ml"

  | 20 ->
# 85 "xMLLexer.mll"
                                    ( let _ = Lexing.lexeme lexbuf in element_terminal_initial_value_value lexbuf )
# 579 "xMLLexer.ml"

  | 21 ->
# 86 "xMLLexer.mll"
                                    ( token lexbuf )
# 584 "xMLLexer.ml"

  | 22 ->
# 87 "xMLLexer.mll"
                                 ( token lexbuf )
# 589 "xMLLexer.ml"

  | 23 ->
# 88 "xMLLexer.mll"
                                 ( token lexbuf )
# 594 "xMLLexer.ml"

  | 24 ->
# 89 "xMLLexer.mll"
                                                             ( token lexbuf )
# 599 "xMLLexer.ml"

  | 25 ->
# 90 "xMLLexer.mll"
                              ( let _ = Lexing.lexeme lexbuf in element_terminal_comment_value lexbuf )
# 604 "xMLLexer.ml"

  | 26 ->
# 91 "xMLLexer.mll"
                                    ( let _ = Lexing.lexeme lexbuf in element_terminal_nominal_value_value lexbuf )
# 609 "xMLLexer.ml"

  | 27 ->
# 92 "xMLLexer.mll"
                        ( let _ = Lexing.lexeme lexbuf in ELEMENT_TERMINAL_OUTPUT_TAG )
# 614 "xMLLexer.ml"

  | 28 ->
# 93 "xMLLexer.mll"
                                                                         ( let _ = Lexing.lexeme lexbuf in ELEMENT_TERMINAL_SELECT_TAG )
# 619 "xMLLexer.ml"

  | 29 ->
# 94 "xMLLexer.mll"
                                      ( token lexbuf )
# 624 "xMLLexer.ml"

  | 30 ->
# 95 "xMLLexer.mll"
                         ( let _ = Lexing.lexeme lexbuf in ELEMENT_TERMINAL_END_TAG )
# 629 "xMLLexer.ml"

  | 31 ->
# 96 "xMLLexer.mll"
                       ( let _ = Lexing.lexeme lexbuf in ELEMENTS_END_TAG )
# 634 "xMLLexer.ml"

  | 32 ->
# 97 "xMLLexer.mll"
                       ( let _ = Lexing.lexeme lexbuf in EQUATIONS_TAG )
# 639 "xMLLexer.ml"

  | 33 ->
# 98 "xMLLexer.mll"
                             ( let _ = Lexing.lexeme lexbuf in equation_value lexbuf )
# 644 "xMLLexer.ml"

  | 34 ->
# 99 "xMLLexer.mll"
                        ( let _ = Lexing.lexeme lexbuf in EQUATIONS_END_TAG )
# 649 "xMLLexer.ml"

  | 35 ->
# 100 "xMLLexer.mll"
                          ( token lexbuf )
# 654 "xMLLexer.ml"

  | 36 ->
# 101 "xMLLexer.mll"
                          ( let _ = Lexing.lexeme lexbuf in WHEN_CLAUSES_TAG )
# 659 "xMLLexer.ml"

  | 37 ->
# 102 "xMLLexer.mll"
                                ( let _ = Lexing.lexeme lexbuf in when_clause_value lexbuf )
# 664 "xMLLexer.ml"

  | 38 ->
# 103 "xMLLexer.mll"
                           ( let _ = Lexing.lexeme lexbuf in WHEN_CLAUSES_END_TAG )
# 669 "xMLLexer.ml"

  | 39 ->
# 104 "xMLLexer.mll"
                  ( let _ = Lexing.lexeme lexbuf in MODEL_END_TAG )
# 674 "xMLLexer.ml"

  | 40 ->
# 106 "xMLLexer.mll"
                    ( EOF )
# 679 "xMLLexer.ml"

  | 41 ->
# 108 "xMLLexer.mll"
                    ( ERROR )
# 684 "xMLLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and element_terminal_comment_value lexbuf =
    __ocaml_lex_element_terminal_comment_value_rec lexbuf 304
and __ocaml_lex_element_terminal_comment_value_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 113 "xMLLexer.mll"
                ( let lxm = Lexing.lexeme lexbuf in
                  let i = String.index lxm '\"'
                  and j = String.rindex lxm '\"' in
                  ELEMENT_TERMINAL_COMMENT_VALUE_TAG (String.sub lxm (i + 1) (j - i - 1)) )
# 698 "xMLLexer.ml"

  | 1 ->
# 117 "xMLLexer.mll"
                    ( EOF )
# 703 "xMLLexer.ml"

  | 2 ->
# 119 "xMLLexer.mll"
                    ( ERROR )
# 708 "xMLLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_element_terminal_comment_value_rec lexbuf __ocaml_lex_state

and element_terminal_initial_value_value lexbuf =
    __ocaml_lex_element_terminal_initial_value_value_rec lexbuf 315
and __ocaml_lex_element_terminal_initial_value_value_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 124 "xMLLexer.mll"
                ( let lxm = Lexing.lexeme lexbuf in
                  let i = String.index lxm '\"'
                  and j = String.rindex lxm '\"' in
                  ELEMENT_TERMINAL_INITIAL_VALUE_VALUE_TAG (String.sub lxm (i + 1) (j - i - 1)) )
# 722 "xMLLexer.ml"

  | 1 ->
# 128 "xMLLexer.mll"
                    ( EOF )
# 727 "xMLLexer.ml"

  | 2 ->
# 130 "xMLLexer.mll"
                    ( ERROR )
# 732 "xMLLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_element_terminal_initial_value_value_rec lexbuf __ocaml_lex_state

and element_fixed_value lexbuf =
    __ocaml_lex_element_fixed_value_rec lexbuf 326
and __ocaml_lex_element_fixed_value_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 135 "xMLLexer.mll"
                ( let lxm = Lexing.lexeme lexbuf in
                  let i = String.index lxm '\"'
                  and j = String.rindex lxm '\"' in
                  ELEMENT_TERMINAL_FIXED_VALUE_TAG (String.sub lxm (i + 1) (j - i - 1)) )
# 746 "xMLLexer.ml"

  | 1 ->
# 139 "xMLLexer.mll"
                    ( EOF )
# 751 "xMLLexer.ml"

  | 2 ->
# 141 "xMLLexer.mll"
                    ( ERROR )
# 756 "xMLLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_element_fixed_value_rec lexbuf __ocaml_lex_state

and element_terminal_nominal_value_value lexbuf =
    __ocaml_lex_element_terminal_nominal_value_value_rec lexbuf 337
and __ocaml_lex_element_terminal_nominal_value_value_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 146 "xMLLexer.mll"
                ( let lxm = Lexing.lexeme lexbuf in
                  let i = String.index lxm '\"'
                  and j = String.rindex lxm '\"' in
                  ELEMENT_TERMINAL_NOMINAL_VALUE_VALUE_TAG (String.sub lxm (i + 1) (j - i - 1)) )
# 770 "xMLLexer.ml"

  | 1 ->
# 150 "xMLLexer.mll"
                    ( EOF )
# 775 "xMLLexer.ml"

  | 2 ->
# 152 "xMLLexer.mll"
                    ( ERROR )
# 780 "xMLLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_element_terminal_nominal_value_value_rec lexbuf __ocaml_lex_state

and equation_value lexbuf =
    __ocaml_lex_equation_value_rec lexbuf 348
and __ocaml_lex_equation_value_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 157 "xMLLexer.mll"
                ( let lxm = Lexing.lexeme lexbuf in
                  let i = String.index lxm '\"'
                  and j = String.rindex lxm '\"' in
                  EQUATION_VALUE_TAG (String.sub lxm (i + 1) (j - i - 1)) )
# 794 "xMLLexer.ml"

  | 1 ->
# 161 "xMLLexer.mll"
                    ( EOF )
# 799 "xMLLexer.ml"

  | 2 ->
# 163 "xMLLexer.mll"
                    ( ERROR )
# 804 "xMLLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_equation_value_rec lexbuf __ocaml_lex_state

and when_clause_value lexbuf =
    __ocaml_lex_when_clause_value_rec lexbuf 359
and __ocaml_lex_when_clause_value_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 168 "xMLLexer.mll"
                ( let lxm = Lexing.lexeme lexbuf in
                  let i = String.index lxm '\"'
                  and j = String.rindex lxm '\"' in
                  WHEN_CLAUSE_VALUE_TAG (String.sub lxm (i + 1) (j - i - 1)) )
# 818 "xMLLexer.ml"

  | 1 ->
# 172 "xMLLexer.mll"
                    ( EOF )
# 823 "xMLLexer.ml"

  | 2 ->
# 174 "xMLLexer.mll"
                    ( ERROR )
# 828 "xMLLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_when_clause_value_rec lexbuf __ocaml_lex_state

;;

