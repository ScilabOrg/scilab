# 23 "xMLLexer.mll"
 

open XMLParser

exception Eof


# 10 "xMLLexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\215\255\214\255\255\255\254\255\077\000\114\000\002\000\
    \161\000\023\000\030\000\037\000\039\000\033\000\028\000\043\000\
    \024\000\041\000\035\000\048\000\136\000\048\000\039\000\046\000\
    \053\000\058\000\064\000\057\000\062\000\074\000\074\000\068\000\
    \000\000\216\255\105\000\100\000\001\000\139\000\131\000\143\000\
    \125\000\129\000\146\000\133\000\001\000\217\255\148\000\133\000\
    \156\000\138\000\152\000\148\000\151\000\149\000\002\000\221\255\
    \156\000\166\000\159\000\157\000\159\000\030\000\224\255\161\000\
    \169\000\174\000\171\000\185\000\175\000\222\000\225\255\223\000\
    \237\255\176\000\187\000\226\000\239\255\191\000\176\000\174\000\
    \193\000\177\000\232\000\242\255\185\000\185\000\197\000\197\000\
    \184\000\238\000\243\255\192\000\201\000\241\000\247\255\199\000\
    \204\000\196\000\212\000\209\000\201\000\213\000\194\000\197\000\
    \212\000\049\001\012\001\003\000\254\000\219\255\220\255\214\000\
    \215\000\204\000\005\000\056\001\225\000\215\000\207\000\225\000\
    \062\001\006\000\038\001\039\001\011\000\014\001\234\255\232\000\
    \218\000\239\000\222\000\234\000\229\000\231\000\077\001\025\001\
    \012\000\223\255\236\000\246\000\238\000\233\000\236\000\034\001\
    \246\255\239\000\000\001\247\000\255\000\002\001\243\000\003\001\
    \005\001\013\000\097\001\010\001\000\001\250\000\011\001\106\001\
    \108\001\014\000\079\001\088\001\107\001\052\001\226\255\056\001\
    \227\255\014\001\014\001\026\001\027\001\017\001\071\001\244\255\
    \017\001\036\001\027\001\082\001\245\255\029\001\034\001\030\001\
    \032\001\000\000\088\001\228\255\043\001\047\001\053\001\049\001\
    \063\001\053\001\067\001\045\001\068\001\058\001\051\001\068\001\
    \163\001\164\001\069\001\113\001\248\255\069\001\070\001\080\001\
    \072\001\067\001\175\001\178\001\069\001\092\001\094\001\188\001\
    \190\001\089\001\091\001\103\001\106\001\149\001\178\001\179\001\
    \180\001\183\001\187\001\190\001\198\001\196\001\192\001\194\001\
    \199\001\214\001\244\001\008\002\011\002\116\001\099\001\113\001\
    \228\001\236\001\128\001\123\001\117\001\134\001\248\001\042\002\
    \210\001\022\002\049\002\174\001\232\255\051\002\056\002\142\001\
    \138\001\134\001\152\001\069\002\077\002\230\001\050\002\084\002\
    \193\001\233\255\161\001\155\001\203\001\249\255\204\001\162\001\
    \153\001\168\001\203\001\195\001\213\001\197\001\226\001\220\001\
    \212\001\230\001\086\002\093\002\238\255\223\001\243\001\030\002\
    \240\255\236\001\251\001\000\002\253\001\011\002\002\002\050\002\
    \241\255\081\002\087\002\250\255\203\002\022\003\168\002\183\002\
    \197\002\255\001\253\255\025\002\015\002\010\002\027\002\130\002\
    \124\002\095\002\168\002\072\002\039\002\038\002\033\002\027\002\
    \044\002\195\002\154\002\115\002\046\003\073\003\084\002\041\002\
    \054\002\045\002\037\002\054\002\074\003\079\003\136\002\055\003\
    \084\003\099\002\084\002\068\002\061\002\054\002\071\002\089\003\
    \090\003\207\002\078\003\087\003\113\002\108\002\079\002\074\002\
    \076\002\094\002\117\003\145\003\067\003\103\003\142\003\144\002\
    \125\002\112\002\104\002\112\002\141\002\154\003\159\003\093\003\
    \148\003\190\003\195\002";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\255\255\255\255\002\000\004\000\041\000\
    \041\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\037\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \033\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\026\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\025\000\255\255\255\255\255\255\255\255\
    \019\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\024\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\020\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\003\000\255\255\255\255\
    \003\000\255\255\255\255\002\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\002\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \002\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\002\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\002\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\002\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255";
  Lexing.lex_default = 
   "\002\000\000\000\000\000\000\000\000\000\255\255\255\255\041\001\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \000\000\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\122\000\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\162\000\255\255\255\255\255\255\000\000\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\222\000\255\255\
    \222\000\222\000\222\000\222\000\222\000\222\000\222\000\222\000\
    \222\000\222\000\222\000\222\000\222\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \248\000\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\005\001\255\255\255\255\
    \255\255\000\000\255\255\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\041\001\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\050\001\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\057\001\255\255\255\255\050\001\255\255\255\255\255\255\
    \255\255\255\255\255\255\067\001\255\255\255\255\255\255\050\001\
    \255\255\255\255\255\255\255\255\255\255\255\255\078\001\255\255\
    \255\255\255\255\050\001\255\255\255\255\255\255\255\255\255\255\
    \255\255\089\001\255\255\255\255\255\255\050\001\255\255\255\255\
    \255\255\255\255\255\255\255\255\100\001\255\255\255\255\255\255\
    \050\001\255\255\255\255\255\255\255\255\255\255\255\255\111\001\
    \255\255\255\255\255\255";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\004\000\000\000\107\000\003\000\115\000\121\000\
    \107\000\000\000\115\000\121\000\124\000\136\000\154\000\161\000\
    \124\000\136\000\154\000\161\000\000\000\000\000\000\000\000\000\
    \003\000\000\000\007\000\107\000\043\001\115\000\121\000\000\000\
    \122\000\000\000\000\000\124\000\136\000\154\000\161\000\186\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\125\000\000\000\008\000\167\000\033\000\045\000\
    \055\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\062\000\006\000\042\001\006\000\
    \037\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\045\001\033\001\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\029\001\
    \238\000\014\001\212\000\205\000\188\000\181\000\147\000\127\000\
    \239\000\091\000\046\001\015\001\128\000\095\000\237\000\073\000\
    \096\000\071\000\189\000\078\000\077\000\145\000\146\000\063\000\
    \044\001\034\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\046\000\029\000\030\000\031\000\
    \032\000\047\000\046\001\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\035\000\006\000\
    \020\000\006\000\036\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\026\000\038\000\039\000\
    \040\000\024\000\041\000\023\000\042\000\028\000\021\000\043\000\
    \044\000\056\000\048\000\022\000\025\000\049\000\050\000\027\000\
    \001\000\051\000\255\255\052\000\014\000\053\000\018\000\013\000\
    \054\000\057\000\011\000\058\000\010\000\059\000\012\000\015\000\
    \016\000\060\000\061\000\064\000\017\000\009\000\065\000\066\000\
    \019\000\067\000\068\000\069\000\070\000\072\000\074\000\075\000\
    \076\000\084\000\079\000\080\000\081\000\082\000\083\000\085\000\
    \086\000\087\000\088\000\089\000\090\000\092\000\093\000\094\000\
    \111\000\097\000\098\000\099\000\100\000\101\000\102\000\103\000\
    \104\000\105\000\107\000\108\000\110\000\112\000\107\000\113\000\
    \114\000\115\000\117\000\118\000\119\000\115\000\120\000\120\000\
    \124\000\122\000\109\000\120\000\126\000\138\000\122\000\129\000\
    \130\000\107\000\131\000\132\000\133\000\134\000\136\000\137\000\
    \115\000\139\000\136\000\140\000\141\000\142\000\120\000\143\000\
    \144\000\176\000\169\000\148\000\149\000\150\000\122\000\151\000\
    \152\000\153\000\154\000\156\000\157\000\136\000\154\000\158\000\
    \159\000\164\000\166\000\159\000\164\000\160\000\168\000\159\000\
    \164\000\160\000\162\000\121\000\170\000\171\000\172\000\162\000\
    \173\000\154\000\123\000\122\000\174\000\175\000\177\000\178\000\
    \122\000\122\000\159\000\164\000\160\000\122\000\162\000\179\000\
    \180\000\182\000\183\000\184\000\185\000\122\000\187\000\162\000\
    \202\000\122\000\165\000\122\000\190\000\122\000\191\000\192\000\
    \193\000\194\000\195\000\196\000\106\000\197\000\198\000\160\000\
    \199\000\200\000\203\000\163\000\201\000\201\000\116\000\204\000\
    \201\000\201\000\206\000\207\000\162\000\208\000\209\000\210\000\
    \211\000\162\000\162\000\211\000\211\000\213\000\162\000\211\000\
    \135\000\214\000\215\000\201\000\201\000\216\000\162\000\216\000\
    \218\000\216\000\162\000\216\000\162\000\219\000\162\000\211\000\
    \220\000\221\000\211\000\222\000\255\255\222\000\255\255\155\000\
    \010\001\255\255\222\000\253\000\216\000\255\255\216\000\240\000\
    \255\255\243\000\255\255\225\000\255\255\161\000\255\255\244\000\
    \255\255\255\255\245\000\246\000\252\000\241\000\224\000\000\001\
    \224\000\241\000\222\000\224\000\250\000\241\000\001\001\224\000\
    \255\255\241\000\224\000\002\001\224\000\003\001\224\000\009\001\
    \224\000\246\000\224\000\224\000\241\000\246\000\011\001\012\001\
    \007\001\013\001\028\001\016\001\241\000\017\001\223\000\222\000\
    \223\000\018\001\224\000\223\000\222\000\222\000\255\255\223\000\
    \246\000\222\000\223\000\217\000\223\000\226\000\223\000\231\000\
    \223\000\222\000\223\000\223\000\227\000\222\000\255\255\222\000\
    \230\000\222\000\255\255\229\000\019\001\255\255\249\000\020\001\
    \224\000\232\000\223\000\247\000\021\001\247\000\228\000\247\000\
    \248\000\233\000\250\000\022\001\254\000\248\000\250\000\234\000\
    \254\000\254\000\006\001\023\001\224\000\254\000\236\000\224\000\
    \024\001\025\001\247\000\026\001\248\000\030\001\003\001\255\255\
    \223\000\250\000\003\001\254\000\005\001\248\000\004\001\031\001\
    \254\000\005\001\004\001\235\000\032\001\007\001\034\001\027\001\
    \251\000\007\001\242\000\027\001\223\000\003\001\027\001\223\000\
    \035\001\036\001\027\001\037\001\038\001\004\001\039\001\005\001\
    \040\001\005\001\248\000\043\001\007\001\051\001\027\001\248\000\
    \248\000\041\001\052\001\053\001\248\000\027\001\041\001\054\001\
    \055\001\058\001\004\001\008\001\248\000\056\001\003\000\062\001\
    \248\000\056\001\248\000\055\001\248\000\063\001\005\001\055\001\
    \064\001\065\001\003\000\005\001\005\001\069\001\041\001\073\001\
    \005\001\074\001\075\001\076\001\056\001\061\001\057\001\072\001\
    \005\001\003\000\055\001\066\001\005\001\084\001\005\001\066\001\
    \005\001\085\001\080\001\086\001\087\001\042\001\255\000\003\000\
    \095\001\058\001\255\255\041\001\255\255\058\001\096\001\255\255\
    \041\001\041\001\066\001\255\255\067\001\041\001\255\255\056\001\
    \255\255\097\001\255\255\098\001\255\255\041\001\255\255\255\255\
    \058\001\041\001\083\001\041\001\065\001\041\001\003\000\068\001\
    \065\001\106\001\255\255\047\001\107\001\047\001\255\255\059\001\
    \048\001\048\001\048\001\048\001\048\001\048\001\048\001\048\001\
    \048\001\048\001\094\001\065\001\079\001\108\001\255\255\048\001\
    \048\001\048\001\048\001\048\001\048\001\048\001\048\001\048\001\
    \048\001\091\001\109\001\105\001\255\255\048\001\048\001\048\001\
    \048\001\048\001\048\001\048\001\048\001\048\001\048\001\004\000\
    \066\001\003\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255\000\000\000\000\255\255\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\004\000\
    \006\000\004\000\006\000\090\001\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\045\001\045\001\
    \045\001\045\001\045\001\045\001\045\001\045\001\045\001\045\001\
    \067\001\255\255\069\001\076\001\004\000\067\001\069\001\076\001\
    \077\001\078\001\000\000\046\001\077\001\080\001\078\001\255\255\
    \091\001\080\001\087\001\088\001\091\001\102\001\087\001\088\001\
    \000\000\069\001\076\001\000\000\004\000\067\001\000\000\077\001\
    \089\001\078\001\000\000\255\255\080\001\089\001\078\001\091\001\
    \070\001\087\001\088\001\046\001\089\001\004\000\098\001\113\001\
    \000\000\000\000\098\001\081\001\000\000\000\000\092\001\077\001\
    \255\255\100\001\067\001\000\000\000\000\089\001\100\001\067\001\
    \067\001\000\000\000\000\078\001\067\001\098\001\088\001\102\001\
    \078\001\078\001\099\001\102\001\067\001\078\001\099\001\101\001\
    \067\001\000\000\067\001\109\001\067\001\078\001\100\001\109\001\
    \110\001\078\001\089\001\078\001\110\001\078\001\102\001\089\001\
    \089\001\099\001\099\001\100\001\089\001\000\000\111\001\000\000\
    \000\000\112\001\109\001\111\001\089\001\103\001\000\000\110\001\
    \089\001\111\001\089\001\100\001\089\001\000\000\000\000\113\001\
    \100\001\100\001\000\000\113\001\000\000\100\001\000\000\255\255\
    \000\000\000\000\000\000\111\001\000\000\100\001\000\000\110\001\
    \000\000\100\001\000\000\100\001\000\000\100\001\113\001\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\114\001\000\000\000\000\
    \111\001\000\000\000\000\000\000\000\000\111\001\111\001\000\000\
    \000\000\000\000\111\001\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\111\001\000\000\000\000\000\000\111\001\000\000\
    \111\001\000\000\111\001\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\107\000\000\000\114\000\121\000\
    \107\000\255\255\114\000\121\000\124\000\136\000\153\000\161\000\
    \124\000\136\000\153\000\161\000\255\255\255\255\255\255\255\255\
    \000\000\255\255\000\000\107\000\007\000\114\000\121\000\255\255\
    \121\000\255\255\255\255\124\000\136\000\153\000\161\000\185\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\124\000\255\255\000\000\161\000\032\000\044\000\
    \054\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\061\000\000\000\007\000\000\000\
    \036\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\005\000\009\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\010\000\
    \012\000\011\000\013\000\014\000\015\000\016\000\017\000\018\000\
    \012\000\021\000\005\000\011\000\018\000\019\000\012\000\023\000\
    \019\000\024\000\015\000\022\000\022\000\017\000\017\000\025\000\
    \006\000\027\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\026\000\028\000\029\000\030\000\
    \031\000\026\000\005\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\034\000\006\000\
    \008\000\006\000\035\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\020\000\037\000\038\000\
    \039\000\020\000\040\000\020\000\041\000\020\000\020\000\042\000\
    \043\000\046\000\047\000\020\000\020\000\048\000\049\000\020\000\
    \000\000\050\000\007\000\051\000\008\000\052\000\008\000\008\000\
    \053\000\056\000\008\000\057\000\008\000\058\000\008\000\008\000\
    \008\000\059\000\060\000\063\000\008\000\008\000\064\000\065\000\
    \008\000\066\000\067\000\068\000\069\000\071\000\073\000\074\000\
    \075\000\077\000\078\000\079\000\080\000\081\000\082\000\084\000\
    \085\000\086\000\087\000\088\000\089\000\091\000\092\000\093\000\
    \095\000\096\000\097\000\098\000\099\000\100\000\101\000\102\000\
    \103\000\104\000\105\000\106\000\108\000\111\000\105\000\112\000\
    \113\000\115\000\116\000\117\000\118\000\115\000\119\000\120\000\
    \122\000\123\000\106\000\120\000\125\000\127\000\123\000\128\000\
    \129\000\105\000\130\000\131\000\132\000\133\000\134\000\135\000\
    \115\000\138\000\134\000\139\000\140\000\141\000\120\000\142\000\
    \143\000\145\000\146\000\147\000\148\000\149\000\123\000\150\000\
    \151\000\152\000\154\000\155\000\156\000\134\000\154\000\157\000\
    \158\000\162\000\165\000\159\000\164\000\160\000\167\000\159\000\
    \164\000\160\000\163\000\120\000\169\000\170\000\171\000\163\000\
    \172\000\154\000\122\000\123\000\173\000\174\000\176\000\177\000\
    \123\000\123\000\159\000\164\000\160\000\123\000\160\000\178\000\
    \179\000\181\000\182\000\183\000\184\000\123\000\186\000\163\000\
    \188\000\123\000\164\000\123\000\189\000\123\000\190\000\191\000\
    \192\000\193\000\194\000\195\000\105\000\196\000\197\000\159\000\
    \198\000\199\000\202\000\162\000\200\000\201\000\115\000\203\000\
    \200\000\201\000\205\000\206\000\163\000\207\000\208\000\209\000\
    \210\000\163\000\163\000\211\000\210\000\212\000\163\000\211\000\
    \134\000\213\000\214\000\200\000\201\000\215\000\163\000\216\000\
    \217\000\215\000\163\000\216\000\163\000\218\000\163\000\210\000\
    \219\000\220\000\211\000\221\000\222\000\223\000\224\000\154\000\
    \237\000\225\000\223\000\238\000\215\000\226\000\216\000\239\000\
    \227\000\242\000\230\000\224\000\231\000\160\000\229\000\243\000\
    \228\000\232\000\244\000\245\000\251\000\240\000\222\000\255\000\
    \224\000\240\000\223\000\225\000\248\000\241\000\000\001\226\000\
    \233\000\241\000\227\000\001\001\230\000\002\001\231\000\008\001\
    \229\000\246\000\228\000\232\000\240\000\246\000\010\001\011\001\
    \005\001\012\001\014\001\015\001\241\000\016\001\222\000\223\000\
    \224\000\017\001\233\000\225\000\223\000\223\000\234\000\226\000\
    \246\000\223\000\227\000\215\000\230\000\225\000\231\000\230\000\
    \229\000\223\000\228\000\232\000\226\000\223\000\122\000\223\000\
    \229\000\223\000\235\000\228\000\018\001\236\000\248\000\019\001\
    \234\000\231\000\233\000\247\000\020\001\246\000\227\000\247\000\
    \249\000\232\000\250\000\021\001\253\000\249\000\250\000\233\000\
    \253\000\254\000\005\001\022\001\235\000\254\000\235\000\236\000\
    \023\001\024\001\247\000\025\001\247\000\029\001\003\001\162\000\
    \234\000\250\000\003\001\253\000\006\001\249\000\004\001\030\001\
    \254\000\006\001\004\001\234\000\031\001\007\001\033\001\026\001\
    \250\000\007\001\241\000\026\001\235\000\003\001\027\001\236\000\
    \034\001\035\001\027\001\036\001\037\001\004\001\038\001\004\001\
    \039\001\006\001\249\000\041\001\007\001\049\001\026\001\249\000\
    \249\000\042\001\051\001\052\001\249\000\027\001\042\001\053\001\
    \054\001\057\001\003\001\007\001\249\000\056\001\059\001\061\001\
    \249\000\056\001\249\000\055\001\249\000\062\001\006\001\055\001\
    \063\001\064\001\070\001\006\001\006\001\067\001\042\001\072\001\
    \006\001\073\001\074\001\075\001\056\001\060\001\056\001\071\001\
    \006\001\081\001\055\001\066\001\006\001\083\001\006\001\066\001\
    \006\001\084\001\078\001\085\001\086\001\041\001\254\000\092\001\
    \094\001\058\001\222\000\042\001\224\000\058\001\095\001\225\000\
    \042\001\042\001\066\001\226\000\066\001\042\001\227\000\055\001\
    \230\000\096\001\231\000\097\001\229\000\042\001\228\000\232\000\
    \058\001\042\001\082\001\042\001\065\001\042\001\103\001\067\001\
    \065\001\105\001\248\000\046\001\106\001\046\001\233\000\058\001\
    \046\001\046\001\046\001\046\001\046\001\046\001\046\001\046\001\
    \046\001\046\001\093\001\065\001\078\001\107\001\005\001\047\001\
    \047\001\047\001\047\001\047\001\047\001\047\001\047\001\047\001\
    \047\001\089\001\108\001\104\001\234\000\048\001\048\001\048\001\
    \048\001\048\001\048\001\048\001\048\001\048\001\048\001\049\001\
    \065\001\114\001\255\255\255\255\255\255\255\255\255\255\255\255\
    \235\000\255\255\255\255\236\000\044\001\044\001\044\001\044\001\
    \044\001\044\001\044\001\044\001\044\001\044\001\044\001\044\001\
    \044\001\044\001\044\001\044\001\044\001\044\001\044\001\044\001\
    \044\001\044\001\044\001\044\001\044\001\044\001\044\001\060\001\
    \044\001\071\001\044\001\089\001\044\001\044\001\044\001\044\001\
    \044\001\044\001\044\001\044\001\044\001\044\001\044\001\044\001\
    \044\001\044\001\044\001\044\001\044\001\044\001\044\001\044\001\
    \044\001\044\001\044\001\044\001\044\001\044\001\045\001\045\001\
    \045\001\045\001\045\001\045\001\045\001\045\001\045\001\045\001\
    \068\001\041\001\069\001\076\001\082\001\068\001\069\001\076\001\
    \077\001\079\001\255\255\045\001\077\001\080\001\079\001\057\001\
    \091\001\080\001\087\001\088\001\091\001\100\001\087\001\088\001\
    \255\255\069\001\076\001\255\255\093\001\068\001\255\255\077\001\
    \090\001\077\001\255\255\067\001\080\001\090\001\079\001\091\001\
    \069\001\087\001\088\001\045\001\088\001\104\001\098\001\111\001\
    \255\255\255\255\098\001\080\001\255\255\255\255\091\001\076\001\
    \078\001\101\001\068\001\255\255\255\255\090\001\101\001\068\001\
    \068\001\255\255\255\255\079\001\068\001\098\001\087\001\102\001\
    \079\001\079\001\099\001\102\001\068\001\079\001\099\001\100\001\
    \068\001\255\255\068\001\109\001\068\001\079\001\101\001\109\001\
    \110\001\079\001\090\001\079\001\110\001\079\001\102\001\090\001\
    \090\001\099\001\098\001\099\001\090\001\255\255\112\001\255\255\
    \255\255\111\001\109\001\112\001\090\001\102\001\255\255\110\001\
    \090\001\110\001\090\001\101\001\090\001\255\255\255\255\113\001\
    \101\001\101\001\255\255\113\001\255\255\101\001\255\255\089\001\
    \255\255\255\255\255\255\112\001\255\255\101\001\255\255\109\001\
    \255\255\101\001\255\255\101\001\255\255\101\001\113\001\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\113\001\255\255\255\255\
    \112\001\255\255\255\255\255\255\255\255\112\001\112\001\255\255\
    \255\255\255\255\112\001\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\112\001\255\255\255\255\255\255\112\001\255\255\
    \112\001\255\255\112\001\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\100\001\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\111\001\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 49 "xMLLexer.mll"
                ( token lexbuf )
# 483 "xMLLexer.ml"

  | 1 ->
# 52 "xMLLexer.mll"
                ( token lexbuf )
# 488 "xMLLexer.ml"

  | 2 ->
# 56 "xMLLexer.mll"
                ( let lxm = Lexing.lexeme lexbuf in
                    UNSIGNED_INTEGER lxm )
# 494 "xMLLexer.ml"

  | 3 ->
# 60 "xMLLexer.mll"
                ( let lxm = Lexing.lexeme lexbuf in
                    UNSIGNED_NUMBER lxm )
# 500 "xMLLexer.ml"

  | 4 ->
# 64 "xMLLexer.mll"
                ( let lxm = Lexing.lexeme lexbuf in
                    IDENT lxm )
# 506 "xMLLexer.ml"

  | 5 ->
# 68 "xMLLexer.mll"
                ( let lxm = Lexing.lexeme lexbuf in
                    STRING (String.sub lxm 1 (String.length lxm - 2)) )
# 512 "xMLLexer.ml"

  | 6 ->
# 71 "xMLLexer.mll"
                 ( let _ = Lexing.lexeme lexbuf in MODEL_TAG )
# 517 "xMLLexer.ml"

  | 7 ->
# 72 "xMLLexer.mll"
                  ( let _ = Lexing.lexeme lexbuf in NAME_TAG )
# 522 "xMLLexer.ml"

  | 8 ->
# 73 "xMLLexer.mll"
                   ( let _ = Lexing.lexeme lexbuf in NAME_END_TAG )
# 527 "xMLLexer.ml"

  | 9 ->
# 74 "xMLLexer.mll"
                      ( let _ = Lexing.lexeme lexbuf in ELEMENTS_TAG )
# 532 "xMLLexer.ml"

  | 10 ->
# 75 "xMLLexer.mll"
                      ( let _ = Lexing.lexeme lexbuf in ELEMENT_STRUCT_TAG )
# 537 "xMLLexer.ml"

  | 11 ->
# 76 "xMLLexer.mll"
                          ( let _ = Lexing.lexeme lexbuf in ELEMENT_STRUCT_SUBNODES_TAG )
# 542 "xMLLexer.ml"

  | 12 ->
# 77 "xMLLexer.mll"
                           ( let _ = Lexing.lexeme lexbuf in ELEMENT_STRUCT_SUBNODES_END_TAG )
# 547 "xMLLexer.ml"

  | 13 ->
# 78 "xMLLexer.mll"
                       ( let _ = Lexing.lexeme lexbuf in ELEMENT_STRUCT_END_TAG )
# 552 "xMLLexer.ml"

  | 14 ->
# 79 "xMLLexer.mll"
                        ( let _ = Lexing.lexeme lexbuf in ELEMENT_TERMINAL_TAG )
# 557 "xMLLexer.ml"

  | 15 ->
# 80 "xMLLexer.mll"
                      ( let _ = Lexing.lexeme lexbuf in ELEMENT_TERMINAL_KIND_TAG )
# 562 "xMLLexer.ml"

  | 16 ->
# 81 "xMLLexer.mll"
                       ( let _ = Lexing.lexeme lexbuf in ELEMENT_TERMINAL_KIND_END_TAG )
# 567 "xMLLexer.ml"

  | 17 ->
# 82 "xMLLexer.mll"
                    ( let _ = Lexing.lexeme lexbuf in ELEMENT_TERMINAL_ID_TAG )
# 572 "xMLLexer.ml"

  | 18 ->
# 83 "xMLLexer.mll"
                     ( let _ = Lexing.lexeme lexbuf in ELEMENT_TERMINAL_ID_END_TAG )
# 577 "xMLLexer.ml"

  | 19 ->
# 84 "xMLLexer.mll"
                            ( let _ = Lexing.lexeme lexbuf in element_fixed_value lexbuf )
# 582 "xMLLexer.ml"

  | 20 ->
# 85 "xMLLexer.mll"
                                    ( let _ = Lexing.lexeme lexbuf in element_terminal_initial_value_value lexbuf )
# 587 "xMLLexer.ml"

  | 21 ->
# 86 "xMLLexer.mll"
                                    ( token lexbuf )
# 592 "xMLLexer.ml"

  | 22 ->
# 87 "xMLLexer.mll"
                                 ( token lexbuf )
# 597 "xMLLexer.ml"

  | 23 ->
# 88 "xMLLexer.mll"
                                 ( token lexbuf )
# 602 "xMLLexer.ml"

  | 24 ->
# 89 "xMLLexer.mll"
                                                               ( token lexbuf )
# 607 "xMLLexer.ml"

  | 25 ->
# 90 "xMLLexer.mll"
                              ( let _ = Lexing.lexeme lexbuf in element_terminal_comment_value lexbuf )
# 612 "xMLLexer.ml"

  | 26 ->
# 91 "xMLLexer.mll"
                                    ( let _ = Lexing.lexeme lexbuf in element_terminal_nominal_value_value lexbuf )
# 617 "xMLLexer.ml"

  | 27 ->
# 92 "xMLLexer.mll"
                        ( let _ = Lexing.lexeme lexbuf in ELEMENT_TERMINAL_OUTPUT_TAG )
# 622 "xMLLexer.ml"

  | 28 ->
# 93 "xMLLexer.mll"
                                                                         ( let _ = Lexing.lexeme lexbuf in ELEMENT_TERMINAL_SELECT_TAG )
# 627 "xMLLexer.ml"

  | 29 ->
# 94 "xMLLexer.mll"
                                      ( token lexbuf )
# 632 "xMLLexer.ml"

  | 30 ->
# 95 "xMLLexer.mll"
                         ( let _ = Lexing.lexeme lexbuf in ELEMENT_TERMINAL_END_TAG )
# 637 "xMLLexer.ml"

  | 31 ->
# 96 "xMLLexer.mll"
                       ( let _ = Lexing.lexeme lexbuf in ELEMENTS_END_TAG )
# 642 "xMLLexer.ml"

  | 32 ->
# 97 "xMLLexer.mll"
                       ( let _ = Lexing.lexeme lexbuf in EQUATIONS_TAG )
# 647 "xMLLexer.ml"

  | 33 ->
# 98 "xMLLexer.mll"
                             ( let _ = Lexing.lexeme lexbuf in equation_value lexbuf )
# 652 "xMLLexer.ml"

  | 34 ->
# 99 "xMLLexer.mll"
                        ( let _ = Lexing.lexeme lexbuf in EQUATIONS_END_TAG )
# 657 "xMLLexer.ml"

  | 35 ->
# 100 "xMLLexer.mll"
                          ( token lexbuf )
# 662 "xMLLexer.ml"

  | 36 ->
# 101 "xMLLexer.mll"
                          ( let _ = Lexing.lexeme lexbuf in WHEN_CLAUSES_TAG )
# 667 "xMLLexer.ml"

  | 37 ->
# 102 "xMLLexer.mll"
                                ( let _ = Lexing.lexeme lexbuf in when_clause_value lexbuf )
# 672 "xMLLexer.ml"

  | 38 ->
# 103 "xMLLexer.mll"
                           ( let _ = Lexing.lexeme lexbuf in WHEN_CLAUSES_END_TAG )
# 677 "xMLLexer.ml"

  | 39 ->
# 104 "xMLLexer.mll"
                  ( let _ = Lexing.lexeme lexbuf in MODEL_END_TAG )
# 682 "xMLLexer.ml"

  | 40 ->
# 106 "xMLLexer.mll"
                    ( EOF )
# 687 "xMLLexer.ml"

  | 41 ->
# 108 "xMLLexer.mll"
                    ( ERROR )
# 692 "xMLLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and element_terminal_comment_value lexbuf =
    __ocaml_lex_element_terminal_comment_value_rec lexbuf 305
and __ocaml_lex_element_terminal_comment_value_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 113 "xMLLexer.mll"
                ( let lxm = Lexing.lexeme lexbuf in
                  let i = String.index lxm '\"'
                  and j = String.rindex lxm '\"' in
                  ELEMENT_TERMINAL_COMMENT_VALUE_TAG (String.sub lxm (i + 1) (j - i - 1)) )
# 706 "xMLLexer.ml"

  | 1 ->
# 117 "xMLLexer.mll"
                    ( EOF )
# 711 "xMLLexer.ml"

  | 2 ->
# 119 "xMLLexer.mll"
                    ( ERROR )
# 716 "xMLLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_element_terminal_comment_value_rec lexbuf __ocaml_lex_state

and element_terminal_initial_value_value lexbuf =
    __ocaml_lex_element_terminal_initial_value_value_rec lexbuf 316
and __ocaml_lex_element_terminal_initial_value_value_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 124 "xMLLexer.mll"
                ( let lxm = Lexing.lexeme lexbuf in
                  let i = String.index lxm '\"'
                  and j = String.rindex lxm '\"' in
                  ELEMENT_TERMINAL_INITIAL_VALUE_VALUE_TAG (String.sub lxm (i + 1) (j - i - 1)) )
# 730 "xMLLexer.ml"

  | 1 ->
# 128 "xMLLexer.mll"
                    ( EOF )
# 735 "xMLLexer.ml"

  | 2 ->
# 130 "xMLLexer.mll"
                    ( ERROR )
# 740 "xMLLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_element_terminal_initial_value_value_rec lexbuf __ocaml_lex_state

and element_fixed_value lexbuf =
    __ocaml_lex_element_fixed_value_rec lexbuf 327
and __ocaml_lex_element_fixed_value_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 135 "xMLLexer.mll"
                ( let lxm = Lexing.lexeme lexbuf in
                  let i = String.index lxm '\"'
                  and j = String.rindex lxm '\"' in
                  ELEMENT_TERMINAL_FIXED_VALUE_TAG (String.sub lxm (i + 1) (j - i - 1)) )
# 754 "xMLLexer.ml"

  | 1 ->
# 139 "xMLLexer.mll"
                    ( EOF )
# 759 "xMLLexer.ml"

  | 2 ->
# 141 "xMLLexer.mll"
                    ( ERROR )
# 764 "xMLLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_element_fixed_value_rec lexbuf __ocaml_lex_state

and element_terminal_nominal_value_value lexbuf =
    __ocaml_lex_element_terminal_nominal_value_value_rec lexbuf 338
and __ocaml_lex_element_terminal_nominal_value_value_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 146 "xMLLexer.mll"
                ( let lxm = Lexing.lexeme lexbuf in
                  let i = String.index lxm '\"'
                  and j = String.rindex lxm '\"' in
                  ELEMENT_TERMINAL_NOMINAL_VALUE_VALUE_TAG (String.sub lxm (i + 1) (j - i - 1)) )
# 778 "xMLLexer.ml"

  | 1 ->
# 150 "xMLLexer.mll"
                    ( EOF )
# 783 "xMLLexer.ml"

  | 2 ->
# 152 "xMLLexer.mll"
                    ( ERROR )
# 788 "xMLLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_element_terminal_nominal_value_value_rec lexbuf __ocaml_lex_state

and equation_value lexbuf =
    __ocaml_lex_equation_value_rec lexbuf 349
and __ocaml_lex_equation_value_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 157 "xMLLexer.mll"
                ( let lxm = Lexing.lexeme lexbuf in
                  let i = String.index lxm '\"'
                  and j = String.rindex lxm '\"' in
                  EQUATION_VALUE_TAG (String.sub lxm (i + 1) (j - i - 1)) )
# 802 "xMLLexer.ml"

  | 1 ->
# 161 "xMLLexer.mll"
                    ( EOF )
# 807 "xMLLexer.ml"

  | 2 ->
# 163 "xMLLexer.mll"
                    ( ERROR )
# 812 "xMLLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_equation_value_rec lexbuf __ocaml_lex_state

and when_clause_value lexbuf =
    __ocaml_lex_when_clause_value_rec lexbuf 360
and __ocaml_lex_when_clause_value_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 168 "xMLLexer.mll"
                ( let lxm = Lexing.lexeme lexbuf in
                  let i = String.index lxm '\"'
                  and j = String.rindex lxm '\"' in
                  WHEN_CLAUSE_VALUE_TAG (String.sub lxm (i + 1) (j - i - 1)) )
# 826 "xMLLexer.ml"

  | 1 ->
# 172 "xMLLexer.mll"
                    ( EOF )
# 831 "xMLLexer.ml"

  | 2 ->
# 174 "xMLLexer.mll"
                    ( ERROR )
# 836 "xMLLexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_when_clause_value_rec lexbuf __ocaml_lex_state

;;

