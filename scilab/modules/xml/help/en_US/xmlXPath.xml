<?xml version="1.0" encoding="UTF-8"?>
<!--
* Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
* Copyright (C) 2012 - Scilab Enterprises - Calixte DENIZET
*
* This file must be used under the terms of the CeCILL.
* This source file is licensed as described in the file COPYING, which
* you should have received as part of this distribution.  The terms
* are also available at
* http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
*
-->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="xmlXPath" xml:lang="en">
    <refnamediv>
        <refname>xmlXPath</refname>
        <refpurpose>Make a XPath query on a XML document</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>
            result = xmlXPath(xmlObj, queryStr [, namespaces])
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>xmlObj</term>
                <listitem>
                    <para>a XML mlist typed XMLDoc or XMLElem</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>queryStr</term>
                <listitem>
                    <para>a Xpath query</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>namespaces</term>
                <listitem>
                    <para>An optional matrix nx2 of strings</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>result</term>
                <listitem>
                    <para>result can be a set of XMLElements or a number or a string or a boolean</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>Make a XPath query on a document or in starting on an element. If you need to use namespaces, then you must define them in using the optional argument. XML namespaces are defined in the first tag with the keyword "xmlns".</para>
        <para>
            For more information about XPath, you can read the <ulink url="http://www.w3.org/TR/1999/REC-xpath-19991116/">W3C recommandation</ulink>.
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[
    doc = xmlRead("http://www.w3.org/TR/2009/REC-xml-names-20091208/xml-names-10-3e.xml");

    // Retrieve the nodes with name equal to "note"
    xp = xmlXPath(doc, "//note");
    s = size(xp);
    for i=1:s(2)
        xmlDump(xp(i))
    end

    // Count the nodes with name equal to "note"
    xp = xmlXPath(doc, "count(//note)")

    // Retrieve the node with id="Philosophy"
    xp = xmlXPath(doc, "//*[@id=""Philosophy""]");
    s = size(xp);
    if (s(2) <> 0) then
        xmlDump(xp(1))
    end

    // Retrieve the nodes with an attribute num equal to the number 5
    xp = xmlXPath(doc, "//*[number(@num)=5]");
    s = size(xp);
    if (s(2) <> 0) then
        xmlDump(xp(1))
    end

    // Get the name and the content of all the attributes of nodes named 'emph'
    xp = xmlXPath(doc, "//emph/@*");
    xp.name
    xp.content

    xmlDelete(doc);

    // Query using namespaces
    t = "<root xmlns:scilab=""http://www.scilab.org"">"+..
        "<scilab:a att=""foo"" rib=""bar"">"+..
        "<b>Hello</b></scilab:a></root>"
    doc = xmlReadStr(t);

    // We search for element named a
    xmlXPath(doc, "//a") // => nothing
    xmlXPath(doc, "//scilab:a", ["scilab" "http://www.scilab.org"]) // => OK

    // This code will fail:
    // xmlXPath(doc, "//scilab:a") // => error

    xmlDelete(doc);

    // Query starting on an element
    t = "<root att=""attribute""><a a1=""A1"" a2=""A2"" a3=""A3"">"+..
        "<b>Hello</b><c>Scilab</c><b>World</b></a><b>Nothing</b></root>"
    doc = xmlReadStr(t);
    e = doc.root.children(1);

    // Get the attributes of e
    xp = xmlXPath(e, "@*");
    xmlAsText(xp)

    // Get the 'b' from e
    xp = xmlXPath(e, "b");
    xmlAsText(xp)

    xmlDelete(doc);
    ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <ulink url="http://www.w3.org/TR/1999/REC-xpath-19991116/">W3C XPath recommandation</ulink>
            </member>
            <member>
                <ulink url="http://www.w3schools.com/xpath/">XPath tutorial</ulink>
            </member>
        </simplelist>
    </refsection>
    <refsection>
        <title>History</title>
        <revhistory>
            <revision>
                <revnumber>5.4.0</revnumber>
                <revremark>XML module introduced.</revremark>
            </revision>
        </revhistory>
    </refsection>
</refentry>
