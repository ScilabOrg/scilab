<?xml version="1.0" encoding="UTF-8"?>
<refentry version="5.0-subset Scilab" xml:id="GetRhsVar"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:xi="http://www.w3.org/2001/XInclude"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:html="http://www.w3.org/1999/xhtml"
          xmlns:db="http://docbook.org/ns/docbook">
  <refnamediv>
    <refname>GetRhsVar</refname>

    <refpurpose>a C gateway function which allows to access an argument
    transmitted to a Scilab function</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>Calling Sequence</title>

    <synopsis>GetRhsVar(StackPos, Type, &amp;m_rows, &amp;n_cols, &amp;l_stack_pos);</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Parameters</title>

    <variablelist>
      <varlistentry>
        <term>StackPos</term>

        <listitem>
          <para>The rank of the variable to be accessed (input
          argument)</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Type</term>

        <listitem>
          <para>The <link linkend="ScilabCTypes">Scilab C Type</link> of the
          parameter to be accessed (input argument).</para>

          <itemizedlist>
            <listitem>
              <para>STRING_DATATYPE "c"</para>
            </listitem>

            <listitem>
              <para>MATRIX_OF_STRING_DATATYPE "S"</para>
            </listitem>

            <listitem>
              <para>MATRIX_OF_DOUBLE_DATATYPE "d"</para>
            </listitem>

            <listitem>
              <para>MATRIX_OF_RATIONAL_DATATYPE "r"</para>
            </listitem>

            <listitem>
              <para>MATRIX_OF_VARIABLE_SIZE_INTEGER_DATATYPE "I"</para>
            </listitem>

            <listitem>
              <para>MATRIX_OF_INTEGER_DATATYPE "i"</para>
            </listitem>

            <listitem>
              <para>MATRIX_OF_BOOLEAN_DATATYPE "b"</para>
            </listitem>

            <listitem>
              <para>MATRIX_OF_COMPLEX_DATATYPE "z"</para>
            </listitem>

            <listitem>
              <para>SPARSE_MATRIX_DATATYPE "s"</para>
            </listitem>

            <listitem>
              <para>TYPED_LIST_DATATYPE "t"</para>
            </listitem>

            <listitem>
              <para>MATRIX_ORIENTED_TYPED_LIST_DATATYPE "m"</para>
            </listitem>

            <listitem>
              <para>SCILAB_POINTER_DATATYPE "p"</para>
            </listitem>

            <listitem>
              <para>GRAPHICAL_HANDLE_DATATYPE "h"</para>
            </listitem>

            <listitem>
              <para>EXTERNAL_DATATYPE "f"</para>
            </listitem>

            <listitem>
              <para>MATRIX_OF_POLYNOMIAL_DATATYPE "x"</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>m_rows</term>

        <listitem>
          <para>the number of lines of the accessed parameter (output
          argument)</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>n_cols</term>

        <listitem>
          <para>the number of columns of the accessed parameter (output
          argument)</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>l_stack_pos</term>

        <listitem>
          <para>the position in the Scilab memory of the accessed parameter
          (output argument)</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>

  <refsection>
    <title>Description</title>

    <para>A C gateway function which allows to access a argument transmitted
    to a Scilab function</para>

    <para>WARNING: This API is deprecated from Scilab 5.2.0 and is going to be removed with Scilab 6.0. Please use <link linkend="api_scilab">API Scilab</link> (the new Scilab API).</para>
  </refsection>

  <refsection>
    <title>Examples</title>

    <para>In this example, the function has two input arguments:</para>

    <itemizedlist>
      <listitem>
        <para>the number of columns (first argument)</para>
      </listitem>

      <listitem>
        <para>the number of lines (second argument)</para>
      </listitem>
    </itemizedlist>

    <para>The goal of this function is to created a matrix of integers equal
    to 1.</para>

    <!-- TODO: Add the potential profil of the function in Scilab -->

    <programlisting role="example"><![CDATA[ 
#include <stack-c.h>
#include <string.h>

int sci_myones(char * fname)
{
  int m_param_1, n_param_1, l_param_1;
  int m_param_2, n_param_2, l_param_2;
  int m_out_row, n_out_col, l_out_pos;
  int i;
  int * pOutPos = NULL;

  GetRhsVar(1, MATRIX_OF_INTEGER_DATATYPE, &m_param_1, &n_param_1, &l_param_1);
  GetRhsVar(2, MATRIX_OF_INTEGER_DATATYPE, &m_param_2, &n_param_2, &l_param_2);

  // We create a matrix of ints equal to 1
  m_out_row = *istk(l_param_1); // The first dimension of the matrix to be created
                                // is stored in the first input parameter
  n_out_col = *istk(l_param_2); // The second dimension of the matrix to be created
                                // is stored in the second input parameter

  CreateVar(3, MATRIX_OF_INTEGER_DATATYPE, &m_out_row, &n_out_col, &l_out_pos);

  pOutPos = istk(l_out_pos); // Get a pointer to the area allocated by CreateVar (a pointer to an integer)
  for(i=0;i<m_out_row*n_out_row;i++) pOutPos[i] = 1;

  // A concise way to write the preceding line of code:
  // for(i=0;i<m_out_row*n_out_row;i++) *istk(l_out_pos+i) = 1;

  LhsVar(1) = 3; // We return the 3rd Scilab variable of our gateway

  return 0;
}
 ]]></programlisting>
  </refsection>

  <refsection>
    <title>See Also</title>

    <simplelist type="inline">
      <member><link linkend="ScilabCTypes">Scilab C Type</link></member>

      <member><link linkend="istk">istk</link></member>

      <member><link linkend="LhsVar">LhsVar</link></member>
    </simplelist>
  </refsection>
</refentry>
