<?xml version="1.0" encoding="utf-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2009  - DIGITEO - Antoine ELIAS
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="getScalarInteger8" xml:lang="en">
    <refnamediv>
        <refname>getScalarInteger8</refname>
        <refpurpose>
            Get scalar integer variable.
        </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>int getScalarInteger8(void* _pvCtx, int* _piAddress, char* _pcData)</synopsis>
        <synopsis>int getNamedScalarInteger8(void* _pvCtx, const char* _pstName, char* _pcData)</synopsis>
        <synopsis>int getScalarInteger16(void* _pvCtx, int* _piAddress, short* _psData)</synopsis>
        <synopsis>int getNamedScalarInteger16(void* _pvCtx, const char* _pstName, short* _psData)</synopsis>
        <synopsis>int getScalarInteger32(void* _pvCtx, int* _piAddress, int* _piData)</synopsis>
        <synopsis>int getNamedScalarInteger32(void* _pvCtx, const char* _pstName, int* _piData)</synopsis>
        <synopsis>int getScalarUnsignedInteger8(void* _pvCtx, int* _piAddress, unsigned char* _pucData)</synopsis>
        <synopsis>int getNamedScalarUnsignedInteger8(void* _pvCtx, const char* _pstName, unsigned char* _pucData)</synopsis>
        <synopsis>int getScalarUnsignedInteger16(void* _pvCtx, int* _piAddress, unsigned short* _pusData)</synopsis>
        <synopsis>int getNamedScalarUnsignedInteger16(void* _pvCtx, const char* _pstName, unsigned short* _pusData)</synopsis>
        <synopsis>int getScalarUnsignedInteger32(void* _pvCtx, int* _piAddress, unsigned int* _puiData)</synopsis>
        <synopsis>int getNamedScalarUnsignedInteger32(void* _pvCtx, const char* _pstName, unsigned int* _puiData)</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>_pvCtx</term>
                <listitem>
                    <para>
                        Scilab environment pointer, pass in "pvApiCtx" provided by api_scilab.h.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>_piAddress</term>
                <listitem>
                    <para>
                        Address of the Scilab variable.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>_pstName</term>
                <listitem>
                    <para>
                        Name of the variable for "named" functions.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>_cData</term>
                <listitem>
                    <para>
                        Integer 8 bits value.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>_sData</term>
                <listitem>
                    <para>
                        Integer 16 bits value.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>_iData</term>
                <listitem>
                    <para>
                        Integer 32 bits value.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>_ucData</term>
                <listitem>
                    <para>
                        Unsigned integer 8 bits value.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>_usData</term>
                <listitem>
                    <para>
                        Unsigned integer 16 bits value.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>_uiData</term>
                <listitem>
                    <para>
                        Unsigned integer 32 bits value.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Return value</title>
        <para>if successful 0, otherwise print error(s) message(s) in the Scilab console and returns first error number.</para>
    </refsection>
</refentry>
