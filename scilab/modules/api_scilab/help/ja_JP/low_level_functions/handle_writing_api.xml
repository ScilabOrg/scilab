<?xml version="1.0" encoding="utf-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2009  - DIGITEO - Antoine ELIAS
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="handle_writing_API" xml:lang="ja">
    <refnamediv>
        <refname>ハンドルの書き込み (Scilab ゲートウェイ)</refname>
        <refpurpose>
            ハンドルの行列を書き込む方法.
        </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>呼び出し手順</title>
        <para>入力引数プロファイル:</para>
        <synopsis>SciErr createMatrixOfHandle(void* _pvCtx, int _iVar, int _iRows, int _iCols, const long long* _pllHandle)</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>引数</title>
        <variablelist>
            <varlistentry>
                <term>_pvCtx</term>
                <listitem>
                    <para>
                        Scilab環境ポインタ, api_scilab.h により定義された "pvApiCtx"で指定.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>_iVar</term>
                <listitem>
                    <para>
                        変数を保存するScilabメモリの位置.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>_piRows</term>
                <listitem>
                    <para>
                        返される変数の行数.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>_piCols</term>
                <listitem>
                    <para>
                        返される変数の列数.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>_pllHandle</term>
                <listitem>
                    <para>
                        返されるデータ配列のアドレス (大きさ: _iRows * _iCols).
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>SciErr</term>
                <listitem>
                    <para>
                        エラー構造体で,エラーメッセージ履歴と最初のエラー番号を格納します.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsynopsisdiv>
        <refsection>
            Scilabメモリに直接書き込み.
        </refsection>
        <title>呼び出し手順</title>
        <para>入力引数プロファイル:</para>
        <synopsis>SciErr allocMatrixOfHandle(void* _pvCtx, int _iVar, int _iRows, int _iCols, long long** _pllHandle)</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>引数</title>
        <variablelist>
            <varlistentry>
                <term>_pvCtx</term>
                <listitem>
                    <para>
                        Scilab環境ポインタ, api_scilab.h により定義された "pvApiCtx"で指定.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>_iVar</term>
                <listitem>
                    <para>
                        変数を保存するScilabメモリの位置.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>_iRows</term>
                <listitem>
                    <para>
                        新規変数の行数.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>_iCols</term>
                <listitem>
                    <para>
                        新規変数の列数.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>_pllHandle</term>
                <listitem>
                    <para>
                        実数データ配列のアドレスを返す (大きさ: _iCols * _iRows).
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>SciErr</term>
                <listitem>
                    <para>
                        エラー構造体で,エラーメッセージ履歴と最初のエラー番号を格納します.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>説明</title>
        <para>このヘルプはハンドルの行列を書き込む方法を示します.</para>
    </refsection>
    <refsection>
        <!--File_gateway: SCI/modules/api_scilab/tests/unit_tests/read_write_handle_api.c-->
        <!--File_scilab: SCI/modules/api_scilab/tests/unit_tests/read_write_handle_api.tst-->
        <!--Lib_name: read_write_handle-->
        <!--Func_list: read_write_handle-->
        <title>ゲートウェイのソース</title>
        <programlisting role="code_gateway">
            <![CDATA[ 
#include "api_scilab.h"
int read_write_handle(char *fname,unsigned long fname_len)
{
    SciErr sciErr;
    int i;
    //最初の変数の情報 : double実数行列
    int iRows       = 0;
    int iCols       = 0;
    int *piAddr     = NULL;
    long long* pllHandle   = NULL;
    //入力/出力引数を確認
    CheckInputArgument(pvApiCtx, 1,1);
    CheckOutputArgument(pvApiCtx, 1,1);
    //最初の入力引数の変数アドレスを取得
    sciErr = getVarAddressFromPosition(pvApiCtx, 1, &piAddr);
    if(sciErr.iErr)
    {
        printError(&sciErr, 0);
        return 0;
    }
    // Scilabメモリから大きさとデータを取得
    sciErr = getMatrixOfHandle(pvApiCtx, piAddr, &iRows, &iCols, &pllHandle);
    if(sciErr.iErr)
    {
        printError(&sciErr, 0);
        return 0;
    }
    sciErr = createMatrixOfHandle(pvApiCtx, nbInputArgument(pvApiCtx) + 1, iRows, iCols, pllHandle);
    if(sciErr.iErr)
    {
        printError(&sciErr, 0);
        return 0;
    }
    AssignOutputVariable(pvApiCtx, 1) = nbInputArgument(pvApiCtx) + 1;
    return 0;
}
 ]]>
        </programlisting>
    </refsection>
    <refsection>
        <title>Scilab テストスクリプト</title>
        <programlisting role="code_scilab">
            <![CDATA[ 
f1 = scf(1);
f2 = scf(2);
a_ref = [f1, f2];
b = read_write_handle(a_ref);
if or(b <> a_ref) then error("failed"), end
 ]]>
        </programlisting>
    </refsection>
    <title>履歴</title>
    <revhistory>
        <revision>
            <revnumber>5.5.0</revnumber>
            <revremark>この関数は Scilab 5.5.0で追加されました</revremark>
        </revision>
    </revhistory>
</refentry>
