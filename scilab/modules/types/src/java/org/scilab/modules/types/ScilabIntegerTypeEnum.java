/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.scilab.modules.types;

public enum ScilabIntegerTypeEnum {
    sci_int8(1),
    sci_int16(2),
    sci_int32(4),
    sci_int64(8),
    sci_uint8(11),
    sci_uint16(12),
    sci_uint32(14),
    sci_uint64(18);

    public final int swigValue() {
        return swigValue;
    }

    public static ScilabIntegerTypeEnum swigToEnum(int swigValue) {
        ScilabIntegerTypeEnum[] swigValues = ScilabIntegerTypeEnum.class.getEnumConstants();
        if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
            return swigValues[swigValue];
        for (ScilabIntegerTypeEnum swigEnum : swigValues)
            if (swigEnum.swigValue == swigValue)
                return swigEnum;
        throw new IllegalArgumentException("No enum " + ScilabIntegerTypeEnum.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private ScilabIntegerTypeEnum() {
        this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private ScilabIntegerTypeEnum(int swigValue) {
        this.swigValue = swigValue;
        SwigNext.next = swigValue + 1;
    }

    @SuppressWarnings("unused")
    private ScilabIntegerTypeEnum(ScilabIntegerTypeEnum swigEnum) {
        this.swigValue = swigEnum.swigValue;
        SwigNext.next = this.swigValue + 1;
    }

    private final int swigValue;

    private static class SwigNext {
        private static int next = 0;
    }
}

