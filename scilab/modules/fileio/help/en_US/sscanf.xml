<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) XXXX-2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:lang="en" xml:id="sscanf">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>
  <refnamediv>
    <refname>sscanf</refname>
    <refpurpose> Converts formatted input given by a string</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <title>Calling Sequence</title>
    <synopsis>[v_1,...v_n]=sscanf (string,format)</synopsis>
  </refsynopsisdiv>
  <refsection>
    <title>Arguments</title>
    <variablelist>
      <varlistentry>
        <term>format</term>
        <listitem>
          <para>Specifies the format conversion.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>string</term>
        <listitem>
          <para>Specifies input to be read.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>
  <refsection>
    <title>Description</title>
    <para>
      This function is obsolete, use preferably the <literal>msscanf</literal>
      function which is more efficient and is more compatible with the C
      <literal>sscanf</literal> procedure.
    </para>
    <para>
    The sscanf functions interpret character string  according
    to a format, and returns the converted results.
  </para>
    <para>
    The format parameter contains conversion specifications
    used to interpret the input.
  </para>
    <para>
    The format parameter can contain
    white-space characters (blanks, tabs, newline, or formfeed)
    that, except in the following two cases, read the input up to the
    next nonwhite-space character. Unless there is a match in the control
    string, trailing white space (including a newline character) is not
    read.
  </para>
    <itemizedlist>
      <listitem>
        <para>Any character except % (percent sign), which must match the next character of the input stream.</para>
      </listitem>
      <listitem>
        <para>A conversion specification that directs the conversion of the next input field. see <link linkend="scanf_conversion">scanf_conversion</link> for details.</para>
      </listitem>
    </itemizedlist>
  </refsection>
  <refsection role="see also">
<title>See Also</title>
    <simplelist type="inline">
      <member>
        <link linkend="mprintf">mprintf</link>
      </member>
      <member>
        <link linkend="msscanf">msscanf</link>
      </member>
      <member>
        <link linkend="mfscanf">mfscanf</link>
      </member>
      <member>
        <link linkend="scanf_conversion">scanf_conversion</link>
      </member>
    </simplelist>
  </refsection>
</refentry>
