<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="and" xml:lang="fr">
    <refnamediv>
        <refname>and</refname>
        <refpurpose>et logique des éléments d'un tableau</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Séquence d'appel</title>
        <synopsis>b=and(A), b=and(A,'*')
            b=and(A,'r'), b=and(A,1)
            b=and(A,'c'), b=and(A,2)
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Description</title>
        <para>
            <literal>and(A)</literal> donne la conjonction (et) logique des
            éléments de la matrice booléenne <literal>A</literal>.
            <literal>and(A)</literal> est vrai (<literal>%t</literal>) si tous les
            termes de <literal>A</literal> sont <literal>%t</literal>.
        </para>
        <para>
            <literal>and([])</literal> retourne <literal>%T</literal>.
        </para>
        <para>
            <literal>y=and(A,'r')</literal> (et <literal>y=and(A,1)</literal>)
            donne la conjonction suivant l'indice de ligne. Chaque élément du vecteur
            ligne <literal>y</literal> contient la conjonction de chaque colonne de
            <literal>x</literal> (<literal>y(j)= and(A(i,j),i=1,m)</literal>).
        </para>
        <para>
            <literal>y=and(A,'c')</literal> (et <literal>y=and(A,2)</literal>)
            donne la conjonction suivant l'indice de colonne. Chaque élément du
            vecteur colonne <literal>y</literal> contient la conjonction de chaque
            ligne de <literal>x</literal> (<literal>y(i)=
                and(A(i,j),j=1,n)
            </literal>
            )).
        </para>
    </refsection>
    <refsection role="see also">
        <title>Voir aussi</title>
        <simplelist type="inline">
            <member>
                <link linkend="not">not</link>
            </member>
            <member>
                <link linkend="and_op">opérateur logique et (&amp;) </link>
            </member>
            <member>
                <link linkend="or">or</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
