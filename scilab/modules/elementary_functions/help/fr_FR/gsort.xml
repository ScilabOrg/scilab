<?xml version="1.0" encoding="UTF-8"?>
<refentry version="5.0-subset Scilab" xml:id="gsort" xml:lang="fr"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns5="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:db="http://docbook.org/ns/docbook">
  <info>
    <pubdate>$LastChangedDate: 2008-03-26 09:50:39 +0100 (mer., 26 mars 2008)
    $</pubdate>
  </info>

  <refnamediv>
    <refname>gsort</refname>

    <refpurpose>tri par l'algorithme "quick sort"</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>Séquence d'appel</title>

    <synopsis>[s, [k]]=gsort(v )
[s, [k]]=gsort(v,flag1)
[s, [k]]=gsort(v,flag1,flag2)</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Paramètres</title>

    <variablelist>
      <varlistentry>
        <term>v,s</term>

        <listitem>
          <para>vecteur ou matrice de nombres réels, entiers ou de chaînes de
          caractères.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>flag1</term>

        <listitem>
          <para>la chaîne de caractères <literal>'r'</literal>,
          <literal>'c'</literal>,<literal>'g'</literal>,<literal>'lr'</literal>
          et <literal>'lc'</literal>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>flag2</term>

        <listitem>
          <para>la chaîne de caractères <literal>'i'</literal> pour l'ordre
          croissant et <literal>'d'</literal> pour l'ordre décroissant. k :
          vecteur ou matrice de nombres entiers.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>

  <refsection>
    <title>Description</title>

    <para><literal>gsort</literal> est basé sur l'algorithme de tri rapide
    "quick sort".</para>

    <para> Le troisième argument peut être utilisé pour choisir entre tri
    croissant ou décroissant. Le deuxième argument est utilisé pour l'ordre
    lexicographique.</para>

    <para><literal>[s,k]=gsort(a,'g')</literal> et
    <literal>[s,k]=gsort(a,'g','d')</literal> produisent le même résultat que
    <literal>[s,k]=gsort(a)</literal>. Ces instructions produisent un tri de
    la matrice <literal>a</literal>, <literal>a</literal> vue comme un vecteur
    <literal>a(:)</literal> (les colonnes sont empilées).
    <literal>[s,k]=gsort(a,'g','i')</literal> fonctionne de la même manière
    pour l'ordre croissant.</para>

    <para><literal>[s,k]=gsort(a,'lr')</literal> trie les lignes de la matrice
    <literal>a</literal> dans l'ordre lexical décroissant.
    <literal>s</literal> est obtenue par une permutation des lignes de la
    matrice <literal>a</literal> donnée par le vecteur <literal>k</literal>)
    de telle manière que les lignes de <literal>s</literal> vérifient
    <literal>s(i,:) &gt; s(j,:)</literal> si <literal>i&lt;j</literal>.
    <literal>[s,k]=gsort(a,'lr','i')</literal> fonctionne de la même manière
    pour l'ordre lexical croissant.</para>

    <para><literal>[s,k]=gsort(a,'lc')</literal> trie les colonnes de la
    matrice <literal>a</literal> dans l'ordre lexical décroissant.
    <literal>s</literal> est obtenue par une permutation des colonnes de la
    matrice <literal>a</literal> donnée par le vecteur <literal>k</literal>)
    de telle manière que les colonnes de <literal>s</literal> vérifient
    <literal>s(:,i) &gt; s(:,j)</literal> si <literal>i&lt;j</literal>.
    <literal>[s,k]=gsort(a,'lc','i')</literal> fonctionne de la même manière
    pour l'ordre lexical croissant.</para>

    <para>Les matrices ou vecteurs complexes sont triés par rapport au module
    complexe. Seule l'option 'g' est accessible avec des nombres
    complexes.</para>

    <para>Si <literal>a</literal> contient des <literal>%nan</literal> ou des
    <literal>%inf</literal> ceux ci seront placés en debut avec l'argument
    <literal>'i'</literal> ou à la fin avec l'argument
    <literal>'d'</literal>.</para>

    <para><emphasis role="bold">Attention: l'agorithme "quick sort" n'est pas
    stable: l'ordre relatif des éléments ayant des valeurs égales n'est pas
    maintenu dans k. En d'autres termes les éléments de k correspondant à des
    éléments égaux de v ne sont pas ordonnés.</emphasis></para>
  </refsection>

  <refsection>
    <title>Exemples</title>

    <programlisting role="example"> 
alr=[1,2,2;
     1,2,1;
     1,1,2;
     1,1,1];
[alr1,k]=gsort(alr,'lr','i')
[alr1,k]=gsort(alr,'lc','i')

v=int32(alr)

gsort(v)
gsort(v,'lr','i')
gsort(v,'lc','i')

v=['Scilab' '2.6'
   'Scilab' '2.7'
   'Scicos' '2.7'
   'Scilab' '3.1'
   'Scicos' '3.1'
   'Scicos' '4.0'
   'Scilab' '4.0']

gsort(v,'lr','i')
gsort(v,'lc','i')
 </programlisting>
  </refsection>

  <refsection>
    <title>Voir Aussi</title>

    <simplelist type="inline">
      <member><link linkend="find">find</link></member>

      <member><link linkend="sort">sort</link></member>
    </simplelist>
  </refsection>

  <refsection>
    <title>Bibliographie</title>

    <para>Quick sort algorithm</para>
  </refsection>
</refentry>