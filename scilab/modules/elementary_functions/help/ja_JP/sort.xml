<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="sort" xml:lang="ja">
    <refnamediv>
        <refname>sort</refname>
        <refpurpose>"クイックソート" アルゴリズムによる安定なソート (古い関数, gsort参照)</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>呼び出し手順</title>
        <synopsis>
            [s, [k]]=sort(v)
            [s, [k]]=sort(v,'r')
            [s, [k]]=sort(v,'c')
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>パラメータ</title>
        <variablelist>
            <varlistentry>
                <term>v</term>
                <listitem>
                    <para>実数または複素数のベクトル/行列; 疎ベクトル; 文字列ベクトル/行列
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>s</term>
                <listitem>
                    <para>実数または複素数のベクトル/行列; 疎ベクトル; 文字列ベクトル/行列
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>k</term>
                <listitem>
                    <para>整数のベクトルまたは行列</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>説明</title>
        <para>
            <literal>sort</literal> は "バブルソートアルゴリズム"を実装します.
        </para>
        <para> sort は Scilab 5.3で削除されます.  gsortを参照ください. </para>
        <para>
            <literal>s=sort(v)</literal> は <literal>v</literal> を
            降順にソートします.
            <literal>v</literal> が行列の場合, ソートは列方向に行われ,
            <literal>v</literal>はスタックされたベクトル<literal>v(:)</literal>
            とみなされます.
            <literal>[s,k]=sort(v)</literal>は
            <literal>v</literal>の中での<literal>s</literal>のエントリの添え字も
            出力します.
            すなわち, <literal>v(k(:)) </literal>はベクトル
            <literal>s</literal>となります.
        </para>
        <para>
            <literal>s=sort(v,'r')</literal> は<literal>v</literal>の
            行を降順にソートします.
            すなわち,  <literal>s</literal>の各列は
            <literal>v</literal>の各列でこれを降順に並び替えることにより
            得られます.
            <literal>[s,k]=sort(v,'r')</literal>は,
            各列<literal>i</literal>について
            <literal>v(k(:,i),i)=s(:,i)</literal>となる添え字
            <literal>k</literal>も返します.
        </para>
        <para>
            <literal>s=sort(v,'c')</literal> は<literal>v</literal>の
            列を降順にソートします.
            すなわち,  <literal>s</literal>の各行は
            <literal>v</literal>の各行でこれを降順に並び替えることにより
            得られます.
            <literal>[s,k]=sort(v,'c')</literal>は,
            各行<literal>i</literal>について
            <literal>v(i,k(i,:))=s(i,:)</literal>となる添え字
            <literal>k</literal>も返します.
        </para>
        <para>複素数の行列またはベクトルはその大きさでソートされます. 列/行
            ソートは複素数行列では実装されていません.
        </para>
        <para>
            <literal>y=sort(A)</literal> は, <literal>A</literal> は
            疎行列の場合でも使用可能です.
            列/行ソートは疎行列では実装されていません.
        </para>
        <para>
            <emphasis role="bold">注意</emphasis> : <literal>sort </literal>is
            は古い関数とされており, 
            <emphasis role="bold">
                <link linkend="gsort">gsort</link>で置き換えられています.
            </emphasis>
        </para>
    </refsection>
    <refsection>
        <title>例</title>
        <programlisting role="example"><![CDATA[ 
[s,p]=sort(rand(1,10));
//p  is a random permutation of 1:10
A=[1,2,5;3,4,2];
[Asorted,q]=sort(A);A(q(:))-Asorted(:)
v=1:10;
sort(v)
sort(v')
sort(v,'r')  //Does nothing for row vectors
sort(v,'c')
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>参照</title>
        <simplelist type="inline">
            <member>
                <link linkend="find">find</link>
            </member>
            <member>
                <link linkend="gsort">gsort</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
