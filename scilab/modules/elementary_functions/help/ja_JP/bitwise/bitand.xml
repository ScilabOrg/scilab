<?xml version="1.0" encoding="UTF-8"?>
<!--
 * 
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2011 - DIGITEO - Michael Baudin
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 * 
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="bitand" xml:lang="ja">
    <refnamediv>
        <refname>bitand</refname>
        <refpurpose>ビット単位の論理積(AND)</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>呼び出し手順</title>
        <synopsis>
            z = bitand(x,y)
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>パラメータ</title>
        <variablelist>
            <varlistentry>
                <term>x :</term>
                <listitem>
                    <para>
                        <literal>m</literal>行<literal>n</literal>列の行列(double)
                        または<literal>m1</literal> x <literal>m2</literal> 
                        x ... x <literal>mm</literal> ハイパー行列(double)
                        または符合なし整数(<literal>uint8</literal>, 
                        <literal>uint16</literal> または <literal>uint32</literal>)の
                        <literal>m</literal>行<literal>n</literal>列行列.
                        値は正の整数値である必要があります.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>y :</term>
                <listitem>
                    <para>
                        <literal>m</literal>行<literal>n</literal>列の行列(double)
                        または<literal>m1</literal> x <literal>m2</literal> x ... x 
                        <literal>mm</literal> ハイパー行列(double)
                        または符合なし整数(<literal>uint8</literal>, 
                        <literal>uint16</literal> または <literal>uint32</literal>)の
                        <literal>m</literal>行<literal>n</literal>列行列.
                        値は正の整数値である必要があります.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>z :</term>
                <listitem>
                    <para>
                        <literal>m</literal>行<literal>n</literal>列の
                        行列(double)または<literal>m1</literal> x 
                        <literal>m2</literal> x ... x <literal>mm</literal> 
                        ハイパー行列(double)
                        または符合なし整数.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>説明</title>
        <para>
            2つの正の整数 <varname>x</varname> および <varname>y</varname> 
            を指定すると,この関数は2進形式が
            <varname>x</varname> および <varname>y</varname> の
            2進形式の論理積となるような10進数を返します.
        </para>
        <para>
            <varname>x</varname>, <varname>y</varname>, <varname>z</varname>
            の大きさは同じです. 
        </para>
    </refsection>
    <refsection>
        <title>例</title>
        <programlisting role="example"><![CDATA[
// '1010110' : is the binary representation of 86 
// '1011011' : is the binary representation of 91   
// '1010010' : is the binary representation for the AND of binary representation 86 and 91 
// so the decimal number corresponding to the AND  applied to binary forms 86 and 91 is : 82
x=86; 
y=91;
z=bitand(x,y)
// Compute the bitwise AND of two matrices of doubles.
x=[12,45];
y=[25,49];
z=bitand(x,y)
// Compute the bitwise AND of two matrices of doubles.
x = [0 1 0 1];
y = [0 0 1 1];
z = bitand(x, y)
expected = [0 0 0 1];
// Compute the bitwise AND of two matrices of integers.
x = uint8([0 1 0 1]);
y = uint8([0 0 1 1]);
z = bitand(x, y)
// The types of x and y cannot be mixed (error).
x = [0 1 0 1];
y = uint8([0 0 1 1]);
// z = bitand(x, y)
//  13 is (01101)_2
//  27 is (11011)_2
// AND is (01001)_2 which is 9.
bitand(uint8(13), uint8(27))
bitand(13, 27)
   ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>参照</title>
        <simplelist type="inline">
            <member>
                <link linkend="bitor">bitor</link>
            </member>
            <member>
                <link linkend="bin2dec">bin2dec</link>
            </member>
            <member>
                <link linkend="dec2bin">dec2bin</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
