<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA - Jean-Baptiste SILVY
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:id="resize_matrix" xml:lang="en">
  <refnamediv>
    <refname>resize_matrix</refname>
    <refpurpose>create a new matrix with a different size</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <title>Calling Sequence</title>
    <synopsis>resMat = resize_matrix(mat,nbRow,nbCol,[typeOfMat])</synopsis>
  </refsynopsisdiv>
  <refsection>
    <title>Arguments</title>
    <variablelist>
      <varlistentry>
        <term>mat</term>
        <listitem>
          <para>input matrix from which the resized matrix will be
            created.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>nbRow</term>
        <listitem>
          <para>number of row of the resized matrix.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>nbCol</term>
        <listitem>
          <para>number of column of the resized matrix.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>typeOfMat</term>
        <listitem>
          <para>caracter string, type name of the resized matrix.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>resMat</term>
        <listitem>
          <para>resized matrix.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>
  <refsection>
    <title>Description</title>
    <para>
      Create a matrix of size <literal>nbRow</literal> x
      <literal>nbCol</literal> and whose elements <literal>(i,j)</literal> are
      <literal>mat(i,j)</literal> if <literal>(i,j)</literal> is in the range of
      the input matrix. Otherwise elements <literal>(i,j)</literal> are
      <literal>0</literal> for real or integer matrices, <literal>%f</literal>
      for boolean matrices and an empty string for string matrices.
    </para>
    <para>The type of the output matrix may be modified by specifying the
      <literal>typeOfMat</literal> argument. In this case, be sure that the
      input matrix type is compatible with this one.
    </para>
    <para>For now, only real, integer matrices, boolean and character string
      matrices are supported. This means that <literal>typeOfMat</literal> must
      be chosen within: 'constant', 'boolean', 'string' or any integer type
      ('int8', 'int16',...).
    </para>
  </refsection>
  <refsection>
    <title>Examples</title>
    <programlisting role="example"><![CDATA[ 
// number matrix
myMat = 5 * rand( 3, 4 )
myMat = resize_matrix( myMat, 3, 3 ) // reduce the matrix size
myMatInteger = resize_matrix( myMat, 4, 4, 'int32' ) // create an integer matrix
myMatBoolean = resize_matrix( myMat, 2, 2, 'boolean' )
myMatBoolean = resize_matrix( myMatBoolean, 3, 5 )

// string matrix
myMatString = ["Scilab","the";"Open Source","Scientific";"Software","Package"]
myMatString = resize_matrix( myMatString, 3, 1 )
 ]]></programlisting>
  </refsection>
  <refsection role="see also">
    <title>See Also</title>
    <simplelist type="inline">
      <member>
        <link linkend="matrix">matrix</link>
      </member>
      <member>
        <link linkend="size">size</link>
      </member>
      <member>
        <link linkend="typeof">typeof</link>
      </member>
    </simplelist>
  </refsection>
</refentry>
