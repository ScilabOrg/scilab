<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:id="typeof" xml:lang="en">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>
  <refnamediv>
    <refname>typeof</refname>
    <refpurpose>object type</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <title>Calling Sequence</title>
    <synopsis>[t]=typeof(object)</synopsis>
  </refsynopsisdiv>
  <refsection>
    <title>Arguments</title>
    <variablelist>
      <varlistentry>
        <term>object</term>
        <listitem>
          <para>Scilab object</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>t</term>
        <listitem>
          <para>string</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>
  <refsection>
    <title>Description</title>
    <para><literal>t=typeof(object)</literal> returns one of the following
    strings:</para>
    <variablelist>
      <varlistentry>
        <term>"constant"</term>
        <listitem>
          <para>if object is a real or complex constant matrix.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"polynomial"</term>
        <listitem>
          <para>if object is a polynomial matrix.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"function"</term>
        <listitem>
          <para>if object is a function (Scilab code).</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"handle"</term>
        <listitem>
          <para>if object is an handle.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"string"</term>
        <listitem>
          <para>if object is a matrix made of character strings.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"boolean"</term>
        <listitem>
          <para>if object is a boolean matrix.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"list"</term>
        <listitem>
          <para>if object is a list.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"rational"</term>
        <listitem>
          <para>if object is a rational matrix (transfer matrix).</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"state-space"</term>
        <listitem>
          <para>if object is a state-space model (see <link linkend="syslin">syslin</link>).</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"sparse"</term>
        <listitem>
          <para>if object is a (real) sparse matrix.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"boolean sparse"</term>
        <listitem>
          <para>if object is a boolean sparse matrix.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"hypermat"</term>
        <listitem>
          <para>if object is an hypermatrix (N-dimension array with N
          &gt;=3).</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"st"</term>
        <listitem>
          <para>if object is a structure array.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"ce"</term>
        <listitem>
          <para>if object is a cell array.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>the first string in the first list entry</term>
        <listitem>
          <para>if object is a tlist or mlist.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"fptr"</term>
        <listitem>
          <para>if object is a Scilab intrinsic (C or Fortran code).</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"pointer"</term>
        <listitem>
          <para>if object is a pointer (See <link linkend="lufact">lufact</link>).</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"size implicit"</term>
        <listitem>
          <para>if object is a size implicit polynom used for indexing.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"library"</term>
        <listitem>
          <para>if object is function library.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"int8" or "uint8" or "int16" or "uint16" or "int32" or "uint32"</term>
        <listitem>
          <para>if object is a matrix of [unsigned] integers stored on 8, 16 or 32 bits. See <link linkend="int8">int8</link>)</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>
  <refsection>
    <title>Examples</title>
    <programlisting role="example"><![CDATA[ 
typeof(1)
typeof(poly(0,'x'))

typeof(1/poly(0,'x'))
typeof(%t)

w=sprand(100,100,0.001);
typeof(w)
typeof(w==w)

deff('y=f(x)','y=2*x');
typeof(f)

L=tlist(['V','a','b'],18,'Scilab');
typeof(L)

typeof(corelib)
 ]]></programlisting>
  </refsection>
  <refsection role="see also">
    <title>See Also</title>
    <simplelist type="inline">
      <member>
        <link linkend="type">type</link>
      </member>
      <member>
        <link linkend="strings">strings</link>
      </member>
      <member>
        <link linkend="syslin">syslin</link>
      </member>
      <member>
        <link linkend="poly">poly</link>
      </member>
    </simplelist>
  </refsection>
</refentry>
