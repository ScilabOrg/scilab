<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2006-2008 - INRIA
 *
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:lang="en" xml:id="lcm">
    <refnamediv>
        <refname>lcm</refname>
        <refpurpose>least common multiple</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>[pp, fact] = lcm(p)</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>p</term>
                <listitem>
                    <para>
                        a polynomial row vector <literal>p = [p1, ..., pn]</literal> (type equal to 2) or
                        an integer row vector (type equal to 1 or 8).
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>fact</term>
                <listitem>
                    <para>a polynomial vector or an integer vector.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>pp</term>
                <listitem>
                    <para>a polynomial or an integer.</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            <code>pp = lcm(p)</code> computes the lcm <varname>pp</varname> of polynomial vector <varname>p</varname>.
        </para>
        <para>
            <code>[pp, fact] = lcm(p)</code> computes in addition the vector <varname>fact</varname> such that:
        </para>
        <para>
            <code>p.*fact = pp*ones(p)</code>.
        </para>
        <para>
            The least common multiple of an array <literal>p</literal> of real numbers can be obtained by
            converting it to a polynomial before calling <literal>lcm</literal>, through <code>p = inv_coeff(p, 0)</code>.
        </para>
        <para>
            If <literal>p</literal> is given as an integer double (type 1), then it is treated as an <literal>int32</literal>.
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[
// Polynomial case
s = %s;
p = [s s*(s+1)^2 s^2*(s+2)];
[pp,fact] = lcm(p);
p.*fact, pp

// Integer case
V = int32([2^2*3^5, 2^3*3^2,2^2*3^4*5]);
lcm(V)

// Double case
V = [2^2*3^5, 2^3*3^2,2^2*3^4*5];
lcm(V)
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="gcd">gcd</link>
            </member>
            <member>
                <link linkend="bezout">bezout</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
