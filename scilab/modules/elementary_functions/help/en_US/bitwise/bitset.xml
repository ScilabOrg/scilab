<?xml version="1.0" encoding="UTF-8"?>
<!--
 * 
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2011 - DIGITEO - Michael Baudin
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 * 
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns3="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="bitset" xml:lang="en">
    <refnamediv>
        <refname>bitset</refname>
        <refpurpose>set bit at specified position</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>
            y = bitset(x, pos)
            y = bitset(x, pos, v)
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Parameters</title>
        <variablelist>
            <varlistentry>
                <term>x :</term>
                <listitem>
                    <para>
                        a <literal>m</literal>-by-<literal>n</literal> matrix of doubles
                        or a <literal>m1</literal>-by-<literal>m2</literal>-by-...-by-<literal>mm</literal> hypermatrix of doubles
                        or a <literal>m</literal>-by-<literal>n</literal> matrix of unsigned integers (<literal>uint8</literal>, <literal>uint16</literal> or <literal>uint32</literal>).
                        Must contain positive integer values.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>pos :</term>
                <listitem>
                    <para>
                        a <literal>m</literal>-by-<literal>n</literal> matrix of doubles
                        or a <literal>m1</literal>-by-<literal>m2</literal>-by-...-by-<literal>mm</literal> hypermatrix of doubles
                        or a <literal>m</literal>-by-<literal>n</literal> matrix of unsigned integers (<literal>uint8</literal>, <literal>uint16</literal> or <literal>uint32</literal>).
                        Must contain positive integer values.
                        The input <literal>pos</literal> must be in the range 1,2,...,<literal>bitmax</literal>
                        where <literal>bitmax</literal> is the maximum number of bits in <varname>x</varname>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>v :</term>
                <listitem>
                    <para>
                        a <literal>m</literal>-by-<literal>n</literal> matrix of doubles
                        or a <literal>m1</literal>-by-<literal>m2</literal>-by-...-by-<literal>mm</literal> hypermatrix of doubles
                        or a <literal>m</literal>-by-<literal>n</literal> matrix of unsigned integers (<literal>uint8</literal>, <literal>uint16</literal> or <literal>uint32</literal>). Default <varname>v</varname><literal>=1</literal>.
                        Must contain positive integer values.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>y :</term>
                <listitem>
                    <para>
                        a <literal>m</literal>-by-<literal>n</literal> matrix of doubles
                        or a <literal>m1</literal>-by-<literal>m2</literal>-by-...-by-<literal>mm</literal> hypermatrix of doubles
                        or a <literal>m</literal>-by-<literal>n</literal> matrix of unsigned integers.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            Set the bit at specified position <varname>pos</varname>.
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[
// 9 is (01001)_2
// We set the 5th bit to 1, which gives
//      (11001)_2 producing 25
bitset(uint8(9), 5)
expected = 25

// Set the 5th bit of 25 to 0.
bitset(uint8(25), 5, 0)
expected = 9

// The input can be a positive double
bitset(25, 5, 0)
expected = 9
   ]]></programlisting>
    </refsection>
</refentry>
