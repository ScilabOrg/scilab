<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * Copyright (C) 2013 - A. Khorshidi
 *
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="sysdiag" xml:lang="en">
    <refnamediv>
        <refname>sysdiag</refname>
        <refpurpose>Create a block diagonal matrix from provided inputs or block diagonal system connection</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>r=sysdiag(a1,a2,...,an)</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Description</title>
        <para>Returns the block-diagonal system made with subsystems put in the
            main diagonal
        </para>
        <variablelist>
            <varlistentry>
                <term>ai</term>
                <listitem>
                    <para>subsystems (i.e. gains, or linear systems in state-space or
                        transfer form)
                    </para>
                    <para>constant, boolean, polynomial or rational matrices of any size </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>r</term>
                <listitem>
                    <para>a matrix with a1, a2, a3, ... on the diagonal </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            Given the inputs <varname>A</varname>, <varname>B</varname> and <varname>C</varname>,
            the output will have these matrices arranged on the diagonal:
            <latex>\begin{bmatrix} A \ \ 0 \ \ 0 \\ 0 \ \ B \ \ 0 \\ 0 \ \ 0 \ \ C \end{bmatrix}</latex>.
        </para>
        <para>
            <note>
                If all the input matrices are square, the output is known as a <emphasis>block diagonal matrix</emphasis>.
            </note>
        </para>
        <note>Used in particular for system interconnections.</note>
        <para>
            Beside this function, you can also use <code>sparse()</code> primitive to build a <emphasis>block diagonal sparse matrix</emphasis>.
        </para>
        <para>
            For boolean matrices <code>sysdiag()</code> always returns a zero one matrix in the corresponding block
            ("true" values are replaced by 1 and "false" value by 0).
        </para>
        
        <para>
            <code>sysdiag()</code> cannot be used to arrange matrices made of character strings,
            but you can overload it (see: <link linkend="overloading">overloading</link>).
        </para>
    </refsection>
    <refsection>
        <title>Remark</title>
        <para>At most 17 arguments.</para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[ 
s=poly(0,'s')
sysdiag(rand(2,2),1/(s+1),[1/(s-1);1/((s-2)*(s-3))])
sysdiag(tf2ss(1/s),1/(s+1),[1/(s-1);1/((s-2)*(s-3))])
 ]]></programlisting>
        <programlisting role="example"><![CDATA[ 
// a matrix of doubles: 
A=[1 0; 0 1], B=[3 4 5; 6 7 8], C=7
D=sysdiag(A,B,C)
// 
sysdiag([%t %f; %f %t], eye(2,2), ones(3,3))
// a polynomial matrix: 
s=%s; 
sysdiag([s 4*s; 4 s^4], [1 s^2 s+2; 3*s 2 s^2-1])
// a rational matrix: 
sysdiag([1/s 2*s/(4*s+3)], [s; 4; 1/(s^2+2*s+1)])
// a block diagonal sparse matrix:
S=sysdiag([1 2; 3 4], [5 6; 7 8], [9 10; 11 12], [13 14; 15 16])
S=sparse(S)
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="brackets">brackets</link>
            </member>
            <member>
                <link linkend="insertion">insertion</link>
            </member>
            <member>
                <link linkend="feedback">feedback</link>
            </member>
            <member>
                <link linkend="diag">diag</link>
            </member>
            <member>
                <link linkend="bdiag">bdiag</link>
            </member>
            <member>
                <link linkend="sparse">sparse</link>
            </member>
            <member>
                <link linkend="repmat">repmat</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
