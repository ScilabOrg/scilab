<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry version="5.0-subset Scilab" xml:id="kron" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns5="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:db="http://docbook.org/ns/docbook">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>

  <refnamediv>
    <refname>kron</refname>

    <refpurpose>Kronecker product (.*.)</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>Calling Sequence</title>

    <synopsis>kron(A,B)
A.*.B</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Description</title>

    <para><literal>kron(A,B)</literal> or <literal>A.*.B</literal> returns the
    Kronecker tensor product of two matrices <literal>A</literal> and
    <literal>B</literal>. The resulting matrix has the following block
    form:</para>

    <informalequation>
      <mediaobject>
        <imageobject>
          <imagedata fileref="../mml/kron_equation_1.mml" />
        </imageobject>
      </mediaobject>
    </informalequation>

    <para>If <literal>A</literal> is a <literal>m x n</literal> matrix and
    <literal>B</literal> a <literal>p x q</literal> matrix then
    <literal>A.*.B</literal> is a <literal>(m*p) x (n*q)</literal>
    matrix.</para>

    <para><literal>A</literal> and <literal>B</literal> can be sparse
    matrices.</para>
  </refsection>

  <refsection>
    <title>Examples</title>

    <programlisting role="example"><![CDATA[ 
A=[1,2;3,4];
kron(A,A)
A.*.A
sparse(A).*.sparse(A)
A(1,1)=%i;
kron(A,A)
 ]]></programlisting>
  </refsection>
</refentry>
