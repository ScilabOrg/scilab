<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry version="5.0-subset Scilab" xml:id="rand" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns5="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:db="http://docbook.org/ns/docbook">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>

  <refnamediv>
    <refname>rand</refname>

    <refpurpose>random number generator</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>Calling Sequence</title>

    <synopsis>rand(m1,m2,.. [,key])
rand(x [, key])
rand()

rand(key)
rand("seed" [,n])
rand("info")
</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Parameters</title>

    <variablelist>
      <varlistentry>
        <term>mi</term>

        <listitem>
          <para>integers</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>key</term>

        <listitem>
          <para>character string with value in <literal>"uniform"</literal>,
          <literal>"normal"</literal></para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>x</term>

        <listitem>
          <para>a matrix. Only its dimensions are taken into account.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>

  <refsection>
    <title>Description</title>

    <para>random matrix generator.</para>

    <para>Without key argument the syntaxes below produce random matrices with
    the current random generator (default is "uniform")</para>

    <variablelist>
      <varlistentry>
        <term>rand(m1,m2)</term>

        <listitem>
          <para>is a random matrix of dimension <literal>m1</literal> by
          <literal>m2</literal>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>rand(m1,m2,..,mn)</term>

        <listitem>
          <para>is a random matrix of dimension <literal>m1</literal> by
          <literal>m2</literal>,.. by <literal>mn</literal>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>rand(a)</term>

        <listitem>
          <para>is a random matrix of same size as a.
          <literal>rand(a)</literal> is complex if <literal>a</literal> is a
          complex matrix.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>rand() : with no arguments gives a scalar whose value
        changes</term>

        <listitem>
          <para>each time it is referenced.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>If present, the key argument allows to specifie an other random
    distribution.</para>

    <variablelist>
      <varlistentry>
        <term>rand('uniform')</term>

        <listitem>
          <para>The current random generator is set to a uniform random
          generator. Random numbers are uniformly distributed in the interval
          (0,1).</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>rand('normal')</term>

        <listitem>
          <para>The current random generator is set to a Gaussian (with mean 0
          and variance 1) random number generator.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>str=rand('info')</term>

        <listitem>
          <para>return the type of the default random generator ('uniform' or
          'normal')</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <para>IT is possible to (re-)initialize the seed of the rand
    generator:</para>

    <variablelist>
      <varlistentry>
        <term>rand('seed')</term>

        <listitem>
          <para>returns the current value of the seed.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>rand('seed',n)</term>

        <listitem>
          <para>puts the seed to <literal>n</literal>. (by default
          <literal>n=0</literal> at first call).</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>

  <refsection>
    <title>Remark</title>

    <para>Use the more powerful function <link linkend="grand">grand</link>
    instead.</para>
  </refsection>

  <refsection>
    <title>Examples</title>

    <programlisting role="example"> 
x=rand(10,10,'uniform')
rand('normal')
rand('info')
y=rand(x,'normal');
x=rand(2,2,2)
   </programlisting>
  </refsection>

  <refsection>
    <title>See Also</title>

    <simplelist type="inline">
      <member><link linkend="grand">grand</link></member>

      <member><link linkend="ssrand">ssrand</link></member>
    </simplelist>
  </refsection>
</refentry>
