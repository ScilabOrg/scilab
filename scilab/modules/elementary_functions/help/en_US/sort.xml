<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry version="5.0-subset Scilab" xml:id="sort" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns5="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:db="http://docbook.org/ns/docbook">
  <info>
    <pubdate>$LastChangedDate: 2008-04-10 16:45:48 +0200 (jeu., 10 avr. 2008)
    $</pubdate>
  </info>

  <refnamediv>
    <refname>sort</refname>

    <refpurpose>order sorting</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>Calling Sequence</title>

    <synopsis>
      [s, [k]]=sort(v)
      [s, [k]]=sort(v,'r')
      [s, [k]]=sort(v,'c')
</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Parameters</title>

    <variablelist>
      <varlistentry>
        <term>v</term>

        <listitem>
          <para>real or complex vector/matrix; sparse vector; character string
          vector/matrix</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>s</term>

        <listitem>
          <para>real or complex vector or matrix; sparse vector; character
          string vector/matrix</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>k</term>

        <listitem>
          <para>vector or matrix of integers</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>

  <refsection>
    <title>Description</title>

    <para>the <literal>sort</literal> function is now obsolete. It can be
    replaced by the function <link linkend="gsort">gsort</link>.</para>

    <para><literal>s=sort(v)</literal> sorts <literal>v</literal> in
    decreasing order. If <literal>v</literal> is a matrix, sorting is done
    columnwise, <literal>v</literal> being seen as the stacked vector
    <literal>v(:)</literal>. If <literal>v</literal> is a string, sort is
    increasing order. <literal>[s,k]=sort(v)</literal> gives in addition the
    indices of entries of <literal>s</literal> in <literal>v</literal>, i.e.
    <literal>v(k(:)) </literal> is the vector <literal>s</literal>.</para>

    <para><literal>s=sort(v,'r')</literal> sorts the rows of
    <literal>v</literal> in decreasing order i.e. each column of
    <literal>s</literal> is obtained from each column of <literal>v</literal>
    by reordering it in decreasing order. <literal>[s,k]=sort(v,'r')</literal>
    returns in addition in each column of <literal>k</literal> the indices
    such that <literal>v(k(:,i),i)=s(:,i)</literal> for each column index
    <literal>i</literal>.</para>

    <para><literal>s=sort(v,'c')</literal> sorts the columns of
    <literal>v</literal> in decreasing order i.e. each row of
    <literal>s</literal> is obtained from each row of <literal>v</literal> by
    reordering it in decreasing order. <literal>[s,k]=sort(v,'c')</literal>
    returns in addition in each row of <literal>k</literal> the indices such
    that <literal>v(i,k(i,:))=s(i,:)</literal> for each row index
    <literal>i</literal>.</para>

    <para>Complex matrix or vectors are sorted by their magnitude. Column/row
    sorting is not implemented for complex matrices.</para>

    <para><literal>y=sort(A)</literal> is valid when <literal>A</literal> is a
    sparse vector. Column/row sorting is not implemented for sparse
    matrix.</para>

    <para>Limitation : if <literal>v</literal> includes %nan elements, matrix
    will not sort. please uses <link linkend="gsort">gsort</link> in this
    case.</para>
  </refsection>

  <refsection>
    <title>Examples</title>

    <programlisting role="example"> 
[s,p]=sort(rand(1,10));
//p  is a random permutation of 1:10
A=[1,2,5;3,4,2];
[Asorted,q]=sort(A);A(q(:))-Asorted(:)
v=1:10;
sort(v)
sort(v')
sort(v,'r')  //Does nothing for row vectors
sort(v,'c')
    </programlisting>
  </refsection>

  <refsection>
    <title>See Also</title>

    <simplelist type="inline">
      <member><link linkend="find">find</link></member>

      <member><link linkend="gsort">gsort</link></member>
    </simplelist>
  </refsection>
</refentry>
