<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org"  xml:id="atanh" xml:lang="en">
    <refnamediv>
        <refname>atanh</refname>
        <refpurpose>hyperbolic tangent inverse</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>t = atanh(x)</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>x</term>
                <listitem>
                    <para>a real or complex vector/matrix.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>t</term>
                <listitem>
                    <para>a real or complex vector/matrix.</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            The components of vector <varname>t</varname> are the hyperbolic
            tangent inverse of the corresponding entries of vector
            <varname>x</varname>. Definition domain is <literal>[-1,1]</literal> for
            the real function (see Remark).
        </para>
    </refsection>
    <refsection>
        <title>Remark</title>
        <para>
            In Scilab (as in some others numerical software) when you try to
            evaluate an elementary mathematical function outside its definition domain
            in the real case, then the complex extension is used (with a complex
            result). The most famous example being the <function>sqrt</function> function (try
            <code>sqrt(-1)</code>!). This approach have some drawbacks when you
            evaluate the function at a singular point which may led to different
            results when the point is considered as real or complex. For the
            <function>atanh</function> this occurs for <literal>-1</literal> and
            <literal>1</literal> because the at these points the imaginary part do not
            converge and so <literal>atanh(1) = +Inf + i NaN</literal> while
            <literal>atanh(1) = +Inf</literal> for the real case (as lim <literal>x-&gt;1</literal>  of
            <code>atanh(x)</code>). So when you evaluate this function on the vector <literal>[1 2]</literal>
            then like <literal>2</literal> is outside the definition
            domain, the complex extension is used for all the vector and you get
            <literal>atanh(1) = +Inf + i NaN</literal> while you get <literal>atanh(1)
                = +Inf
            </literal>
            with <literal>[1 0.5]</literal> for instance.
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[ 
// example 1
x=[0,%i,-%i]
tanh(atanh(x))

// example 2
x = [-%inf -3 -2 -1 0 1 2 3 %inf]
ieee(2)
atanh(tanh(x))

// example 3 (see Remark)
ieee(2)
atanh([1 2])
atanh([1 0.5])
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="tanh">tanh</link>
            </member>
            <member>
                <link linkend="ieee">ieee</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
