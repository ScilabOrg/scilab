// =============================================================================
// Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
// Copyright (C) 2012 - Scilab Enterprises - Sylvestre Ledru
//
//  This file is distributed under the same license as the Scilab package.
// =============================================================================
myMat =[     0.6029980    4.2470508    3.2442814    3.7427533  
    1.4276821    2.6285304    4.9615955    2.0520295  
    4.3037573    4.9656049    0.2502099    3.0422632  ];
myMat = resize_matrix( myMat, 3, 3 ) // reduce the matrix size
 
 typeOfMat constant   
 myMat  =
 
    0.602998     4.2470508    3.2442814  
    1.4276821    2.6285304    4.9615955  
    4.3037573    4.9656049    0.2502099  
refMat=[0.602998,4.2470508,3.2442814;
1.4276821,2.6285304,4.9615955;
4.3037573,4.9656049,0.2502099];
assert_checkequal(size(myMat), size(refMat));
assert_checkequal(myMat, refMat);
refMat=int32([0,4,3,0;
1,2,4,0;
4,4,0,0;
0,0,0,0]);
myMatInteger = resize_matrix( myMat, 4, 4, 'int32' ) // create a integer matrix
 
 typeOfMat int32   
 myMatInteger  =
 
  0  4  3  0  
  1  2  4  0  
  4  4  0  0  
  0  0  0  0  
assert_checkequal(myMatInteger, refMat);
myMatBoolean = resize_matrix( myMat, 2, 2, 'boolean' );
 
 typeOfMat boolean   
assert_checkequal(size(myMatBoolean), [2, 2]);
myMatBoolean = resize_matrix( myMatBoolean, 3, 5 );
 
 typeOfMat constant   
assert_checkequal(size(myMatBoolean), [3, 5]);
// string matrix
myMatString = ["Scilab","the";"Open Source","Scientific";"Software","Package"];
myMatString = resize_matrix( myMatString, 3, 1 );
 
 typeOfMat string   
assert_checkequal(myMatString, ["Scilab";"Open Source";"Software"]);
