<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) INRIA - 
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns4="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="strindex" xml:lang="ru">
    <refnamediv>
        <refname>strindex</refname>
        <refpurpose>
            поиск положения символьной строки в другой строке
        </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Последовательность вызова</title>
        <synopsis>
            ind = strindex(haystack, needle, [flag])
            [ind, which] = strindex(haystack, needle, [flag])
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Аргументы</title>
        <variablelist>
            <varlistentry>
                <term>haystack</term>
                <listitem>
                    <para>
                        символьная строка. Строка, в которой ищутся совпадения
                        с <varname>needle</varname>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>needle</term>
                <listitem>
                    <para>
                        символьная строка или вектор символьных строк. Строка
                        (строки) которая ищется в <varname>haystack</varname>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>ind</term>
                <listitem>
                    <para>вектор индексов.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>which</term>
                <listitem>
                    <para>вектор индексов.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>flag</term>
                <listitem>
                    <para>
                        строка (<literal>"r"</literal> для регулярного
                        выражения).
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Описание</title>
        <para>
            Функция <function>strindex</function> ищет индексы, где найдена
            <literal>needle(i)</literal> в <varname>haystack</varname>.
        </para>
        <para>
            Для каждого <literal>k</literal> существует такая
            <literal>i</literal>, что <code>part(haystack,ind(k)+(0:length(needle(i))-1))</code>
            является той же самой строкой, что и <literal>needle(i)</literal>.
            Если указан аргумент <varname>which</varname>, то он содержит эти
            <literal>i</literal>. Когда используется третий параметр
            <literal>"r"</literal>, то <varname>needle</varname> должна быть
            строкой регулярного выражения, и тогда
            <function>strindex</function> будет сравнивать её с
            <varname>haystack</varname> по правилам регулярного выражения.
        </para>
        <para>
            <function>strindex</function> без аргумента регулярного выражения
            основывается на алгоритме Кнута-Морриса-Пратта [Knuth-Morris-Pratt].
        </para>
        <para>
            Этот алгоритм более мощный, чем тот, который использовался в Scilab
            4.x. В некоторых частных случаях результат может быть различным.
        </para>
        <para>Пример:</para>
        <para>// Scilab 5.x</para>
        <para>--&gt;[k,w]=strindex('aab',['a','ab'])</para>
        <para>w = 1. 1. 2. k = 1. 2. 2.</para>
        <para>// Scilab 4.x</para>
        <para>--&gt;[k,w]=strindex('aab',['a','ab'])</para>
        <para>w = 1. 1. k = 1. 2.</para>
        <para>
            Правила регулярного выражения сходны с языком Perl. Для быстрого старта см.<ulink url="http://perldoc.perl.org/perlrequick.html">http://perldoc.perl.org/perlrequick.html</ulink>.
            Для более глубокого изучения см. <ulink url="http://perldoc.perl.org/perlretut.html">http://perldoc.perl.org/perlretut.html</ulink>,
            а для справки см. <ulink url="http://perldoc.perl.org/perlre.html">http://perldoc.perl.org/perlre.html</ulink>.
        </para>
    </refsection>
    <refsection>
        <title>Примеры</title>
        <programlisting role="example"><![CDATA[ 
k=strindex('SCI/demos/scicos','/')
k=strindex('SCI/demos/scicos','SCI/')
k=strindex('SCI/demos/scicos','!')
k=strindex('aaaaa','aa') 
k=strindex('SCI/demos/scicos',['SCI','sci'])
[k,w]=strindex('1+3*abc/2.33',['+','-','*','/'])
k=strindex('2' ,'/2(]*)?$\1/' ,'r') 
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>Смотрите также</title>
        <simplelist type="inline">
            <member>
                <link linkend="string">string</link>
            </member>
            <member>
                <link linkend="strings">strings</link>
            </member>
            <member>
                <link linkend="regexp">regexp</link>
            </member>
            <member>
                <link linkend="strsubst">strsubst</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
