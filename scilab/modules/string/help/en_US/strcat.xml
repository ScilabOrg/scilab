<?xml version="1.0" encoding="UTF-8"?>
<!--
* Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
* Copyright (C) INRIA -
*
* This file must be used under the terms of the CeCILL.
* This source file is licensed as described in the file COPYING, which
* you should have received as part of this distribution.  The terms
* are also available at
* http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
*
-->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xml:id="strcat" xml:lang="en">
    <refnamediv>
        <refname>strcat</refname>
        <refpurpose>concatenates character strings</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>
            txt = strcat(strings [,string_added])
            txt = strcat(strings [,string_added, ["flag"]])
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>strings</term>
                <listitem>
                    <para>a vector or matrix of strings.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>string_added</term>
                <listitem>
                    <para>
                        a string added, default value is the zero length character
                        string <literal>""</literal>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>txt</term>
                <listitem>
                    <para>a string.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"flag"</term>
                <listitem>
                    <para>
                        a character (<literal>"r"</literal> for concatenation of
                        rows in the matrix <varname>strings</varname>,
                        <literal>"c"</literal> for concatenations of columns in the
                        matrix <varname>strings</varname>).
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            <code>txt = strcat(strings)</code> concatenates character strings:
            <literal>txt = strings(1) + ... + strings(n)</literal>.
        </para>
        <para>
            <code>txt = strcat(strings, string_added)</code> returns
            <literal>txt = strings(1) + string_added + ... + string_added + strings(n)</literal>.
        </para>
        <para>
            The plus symbol does the same: <code>"a"+"b"</code> is the
            same as <code>strcat(["a","b"]).</code>.
        </para>
        <para>
            If the size of <varname>strings</varname> is one, it returns
            <code>txt = strings(1)</code>;
        </para>
        <para>
            <code>strcat('A','B')</code> returns <literal>'A'</literal> and not
            <literal>'AB'</literal> as <code>strcat(['A','B'])</code>.
        </para>
        <para>
            If <varname>strings</varname> is a matrix of strings,
            <code>txt = strcat(strings, "", "r")</code> returns a row vector of strings.
            Each entry of <varname>txt</varname> results from the concatenation of rows along 
            the related column.
            <code>txt = strcat(strings, "", "c")</code> returns a column vector of strings.
            Each entry of <varname>txt</varname> results from the concatenation of columns along 
            the related row.
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[
strcat(string(1:10),',')
strcat(["a","b"])
strcat(["a","b"],'|')
strcat('A')
strcat('A','B')
strcat(['A','B'])
strcat(['A','B'],'')

m =["a" "b" ; "c" "d"];
strcat(m, "r")
strcat(m, "", "r")
strcat(m, "", "c")

strcat(m, "_and_", "r")
strcat(m, "_and_", "c")

    ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="string">string</link>
            </member>
            <member>
                <link linkend="strings">strings</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
