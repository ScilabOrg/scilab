<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) INRIA - 
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns4="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="strsplit" xml:lang="en">
    <refnamediv>
        <refname>strsplit</refname>
        <refpurpose>split a string into a vector of strings</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>
            v = strsplit(str,ind)
            [v, matched_separators] = strsplit(str)
            [v, matched_separators] = strsplit(str, matrix_of_strings, limit)
            [v, matched_separators] = strsplit(str, regexp_pattern, limit)
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>str</term>
                <listitem>
                    <para>a character string to split.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>ind</term>
                <listitem>
                    <para>
                        a vector of strictly increasing indices in the interval
                        <literal>[1 length(str)-1]</literal>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>v</term>
                <listitem>
                    <para>
                        the resulting column vector of string (dimension &gt;<literal>size(ind,'*')+1</literal>).
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>matched_separators</term>
                <listitem>
                    <para>
                        a column vector of the matched separators.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>matrix_of_strings</term>
                <listitem>
                    <para>
                        a matrix of strings to search in <varname>str</varname>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>regexp_pattern</term>
                <listitem>
                    <para>a regular expression pattern.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>limit</term>
                <listitem>
                    <para>maximum of limit elements.</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            <code>v= strsplit(str, ind)</code> splits the string
            <varname>str</varname> into a vector of strings at the points given by the
            indices in <varname>ind</varname> (after each characters pointed to by the
            index in <varname>ind</varname>).
        </para>
        <para>
            <code>strsplit(str)</code> returns same thing as
            <code>strsplit(str,1:length(str)-1).</code>
        </para>
        <para>
            <code>strsplit(str, regexp_pattern, limit)</code> returns an
            column vector of strings, each of which is a substring of
            <varname>str</varname> formed by splitting it on boundaries formed
            by the case-sensitive regular expression pattern.
        </para>
        <para>
            If there are <literal>n</literal> occurrences of pattern, the
            returned array will contain <literal>n+1</literal> items.
        </para>
        <para>
            For example, if there is no occurrence of pattern, an array with
            only one element will be returned. Of course, this is also true if <varname>str</varname> is empty.
        </para>
        <para>
            If <varname>limit</varname> is set, the returned array will contain
            a maximum of limit elements with the last element containing the
            whole rest of string.
        </para>
        <para>
            <code>strsplit(str, matrix_of_strings, limit)</code> splits
            <varname>str</varname> on any of elements. It allows to
            split on different separators for users without regexp knowledge.
        </para>
        <para>
            If <code>strsplit()</code> is called with a second output
            argument, the column vector of the matched separators is returned.
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[ 
S='strsplit splits a string into a vector of strings';
strsplit(S,[15 25 30])
ind=strindex(S,' ')
    
[r_1, r_2] = strsplit("abcd")
    
[r_1, r_2] = strsplit("root:x:0:0:root:/root:/bin/bash",":",5)
    
[r_1, r_2] = strsplit("abc,def:ijk,:lmo","/:|,/")
   
[r_1, r_2] = strsplit("abc,def:ijk,:lmo",[":";","])    
    
strsplit("abcdef2ghijkl3mnopqr6stuvw7xyz","/\d+/") 

[r_1, r_2] = strsplit("abcdef2ghijkl3mnopqr6stuvw7xyz","/\d+/",2) 
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="part"> part</link>
            </member>
            <member>
                <link linkend="strcat"> strcat</link>
            </member>
            <member>
                <link linkend="tokens"> tokens</link>
            </member>
            <member>
                <link linkend="regexp"> regexp</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
