<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 *
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="evstr" xml:lang="en">
    <refnamediv>
        <refname>evstr</refname>
        <refpurpose>evaluation of expressions</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>
            H = evstr(Z)
            [H, ierr] = evstr(Z)
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>Z</term>
                <listitem>
                    <para>
                        a matrix of character strings <varname>M</varname> or
                        <code>list(M,Subexp)</code>
                    </para>
                    <variablelist>
                        <varlistentry>
                            <term>M</term>
                            <listitem>
                                <para>a matrix of character strings.</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term>Subexp</term>
                            <listitem>
                                <para>a vector of character strings.</para>
                            </listitem>
                        </varlistentry>
                    </variablelist>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>H</term>
                <listitem>
                    <para>a matrix.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>ierr</term>
                <listitem>
                    <para>an integer, error indicator.</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            Returns the result of the evaluation of the matrix of character
            strings <varname>M</varname>. Each element of the matrix must define a
            valid Scilab expression.
        </para>
        <para>
            If the evaluation of <varname>M</varname> expression leads to an
            error, the single return value version, <code>H = evstr(M)</code>,
            raises the error as usual. The two return values version,
            <code>[H,ierr] = evstr(M)</code>, on the other hand, produces no
            error, but returns the error number in <varname>ierr</varname>.
        </para>
        <para>
            If <varname>Z</varname> is a list, <varname>Subexp</varname> is a
            vector of character strings, that defines subexpressions which are
            evaluated before evaluating <varname>M</varname>. These subexpressions
            must be referred to as <literal>%(k)</literal> in <varname>M</varname>,
            where <literal>k</literal> is the subexpression's index in
            <varname>Subexp</varname>.
        </para>
        <para>
            <code>evstr('a = 1')</code> is not valid (use <function>execstr</function>
            instead).
        </para>
        <para>
            <literal>Nan</literal>, <literal>NaN</literal> will be interpreted as <constant>%nan</constant>.
        </para>
        <para>
            <literal>Inf</literal> will be interpreted as <constant>%inf</constant>.
        </para>
        <note>
            Note that <varname>Z</varname> should not be composed of continuation marks (..).
        </note>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example">
            a = 1; b = 2;
            Z = ['a', 'b'] ;
            evstr(Z)
            
            Z = list(['%(1)','%(1)-%(2)'],['a+1','b+1']);
            evstr(Z)
            
            evstr('NaN'), evstr('Inf')
            
            //The two return values version
            [H, ierr] = evstr(Z) // no error
            Z = ['a', 'b', 'c'] ;// the variable c is undefined
            [H, ierr] = evstr(Z) // error 4: Undefined variable: c
        </programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="execstr">execstr</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
