// =============================================================================
// Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
// Copyright (C) ????-2008 - INRIA
//
//  This file is distributed under the same license as the Scilab package.
// =============================================================================
// =============================================================================
// Tests for cdfchn function
// =============================================================================
prec = 1.e-5;
x      = [0.01,0.025,0.05,0.1,0.9,0.95];
y1     = cdfchi("PQ",x,ones(x));
y2     = cdfchn("PQ",x,ones(x),0*ones(x));
if norm(y1-y2) > prec then bugmes();quit;end
df     = [1,2,3,4,5,6];
pno    = df/10;
[P,Q]  = cdfchn("PQ",x,df,pno);
[x1]   = cdfchn("X",df,pno,P,Q);
[df1]  = cdfchn("Df",pno,P,Q,x);
if norm(x1-x)   > prec then bugmes();quit;end
if norm(df1-df) > prec then bugmes();quit;end
// Df should be an integer matrix
df      = df - 0.5;
refMsg2 = msprintf(_("%s: Wrong value for input argument #%d: A matrix of integer value expected.\n"), "cdfchn", 2);
refMsg3 = msprintf(_("%s: Wrong value for input argument #%d: A matrix of integer value expected.\n"), "cdfchn", 3);
refMsg5 = msprintf(_("%s: Wrong value for input argument #%d: A matrix of integer value expected.\n"), "cdfchn", 5);
assert_checkerror("cdfchn(""PQ"",x,df,pno);",refMsg3);
assert_checkerror("cdfchn(""X"",df,pno,P,Q);",refMsg2);
assert_checkerror("cdfchn(""Pnonc"",P,Q,x,df);",refMsg5);
