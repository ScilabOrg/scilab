<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2000 - INRIA - Carlos Klimann
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:lang="en" xml:id="nanmin">
    <refnamediv>
        <refname>nanmin</refname>
        <refpurpose>min  (ignoring Nan's) </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>[m,index]=nanmin(x)
            [m,index]=nanmin(x,'r')
            [m,index]=nanmin(x,'c')
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>x</term>
                <listitem>
                    <para>real or complex vector or matrix</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            This function gives for a real or a numerical matrix <literal>x</literal> 
            his largest element <literal>   m</literal> (but ignoring the
            NANs).
        </para>
        <para>
            For    <literal> x</literal>,   a  numerical   vector  or matrix, 
            <literal> m=nanmin(x) </literal>  returns in scalar  <literal> m</literal> the largest
            element of <literal> x</literal> (ignoring  the  NANs). The form  
            <literal>[m,index] =nanmin(x,orient) </literal> gives  in addition of  the
            value of the largest  element of <literal>  x</literal> (ignoring  the
            NANs) in scalar  <literal> m</literal>, the index  of  this element in
            <literal> x</literal>, as a 2-vector.
        </para>
        <para>
            <literal>m=nanmin(x,'r') </literal> gives in the 1xsize(x,2) matrix 
            <literal>m</literal> the largest elements  (ignoring  the NANs) of  each
            column  of     <literal>    x</literal>.     If  the  form      
            <literal> [m,index]=nanmin(x,'r') </literal> is  used, the  elements of the
            1xsize(x,2) matrix  index are  the indexes of  the largest
            elements (ignoring the NANs)  of each column  of x  in the
            corresponding column.
        </para>
        <para>
            m=nanmin(x,'c')  gives  in  the size(x,2)x1  matrix  m the
            largest elements (ignoring the NANs) of each row of x.  If
            the form  [m,index]=nanmin(x,'c') is used, the elements of
            the size(x,2)x1   matrix  index are   the  indexes  of the
            largest elements  (ignoring the NANs) of  each row of x in
            the corresponding row.
        </para>
        <para>
            In Labostat, NAN values stand for missing values in tables.
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[ 
x=[0.2113249 %nan 0.6653811;0.7560439 0.3303271 0.6283918]
m=nanmin(x)
m=nanmin(x,'r')
m=nanmin(x,'c')
 ]]></programlisting>
    </refsection>
    <refsection>
        <title>Bibliography</title>
        <para>
            Wonacott, T.H. &amp; Wonacott, R.J.; Introductory Statistics, fifth edition, J.Wiley &amp; Sons, 1990.
        </para>
    </refsection>
</refentry>
