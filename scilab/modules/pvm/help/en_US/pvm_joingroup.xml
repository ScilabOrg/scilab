<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 1997-2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:lang="en" xml:id="pvm_joingroup">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>
  <refnamediv>
    <refname>pvm_joingroup</refname>
    <refpurpose> enrolls the calling process in a named group.  </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <title>Calling Sequence</title>
    <synopsis>[inum] = pvm_joingroup(group)</synopsis>
  </refsynopsisdiv>
  <refsection>
    <title>Arguments</title>
    <variablelist>
      <varlistentry>
        <term>group</term>
        <listitem>
          <para>string, string group name of an existing group.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>inum</term>
        <listitem>
          <para>integer, instance number returned by the routine.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>
  <refsection>
    <title>Description</title>
    <para><literal>pvm_joingroup</literal> 
    enrolls the calling task in
    the group named <literal>group</literal>
    and returns the instance number
    of this task in this group.</para>
    <para>
    The returned value will be &gt;= 0 if 
    the call is successful and will be 
    will be &lt; 0 if some error occurs.</para>
    <para>
    Instance numbers start at 0 and count up.
    When using groups a (group, inum) pair uniquely identifies a
    PVM process.
    This is consistent with the PVM 2.4 naming schemes.
    If a task leaves a group by calling pvm_lvgroup
    and later rejoins the same group,
    the task is not guaranteed to get the same instance number.
    PVM attempts to reuse old instance numbers, so when a task
    joins a group it will get the lowest available instance number.
    A task can be a member of multiple groups simultaneously.</para>
  </refsection>
  <refsection>
    <title>See Also</title>
    <simplelist type="inline">
      <member>
        <link linkend="pvm_lvgroup">pvm_lvgroup</link>
      </member>
    </simplelist>
  </refsection>
</refentry>
