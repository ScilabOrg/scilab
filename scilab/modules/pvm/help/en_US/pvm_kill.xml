<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 1997-2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:lang="en" xml:id="pvm_kill">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>
  <refnamediv>
    <refname>pvm_kill</refname>
    <refpurpose>  Terminates a specified PVM process.  </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <title>Calling Sequence</title>
    <synopsis>[infos] = pvm_kill(tids)</synopsis>
  </refsynopsisdiv>
  <refsection>
    <title>Arguments</title>
    <variablelist>
      <varlistentry>
        <term>tids</term>
        <listitem>
          <para>row of integer, task identifier of the PVM process to be killed (not yourself).</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>infos</term>
        <listitem>
          <para>row of integer, status code returned by the routine. Values less than zero indicate an error.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>
  <refsection>
    <title>Description</title>
    <para><literal>pvm_kill</literal> 
    sends a terminate (<literal>SIGTERM</literal>) signal
    to the PVM process identified by <literal>tids</literal>.</para>
    <para>
    In the case of multiprocessors the terminate signal is replaced
    with a host dependent method for killing a process.</para>
    <para>
    The array <literal>infos</literal>
    can be checked to determine the status for each process.
    Values less than zero indicate an error,
    while zero values indicate a success.</para>
    <para><literal>pvm_kill</literal> is not designed to kill the calling process.
    To kill yourself in C call <literal>pvm_exit()</literal> 
    followed by <literal>quit()</literal>.</para>
  </refsection>
  <refsection>
    <title>See Also</title>
    <simplelist type="inline">
      <member>
        <link linkend="pvm_exit">pvm_exit</link>
      </member>
    </simplelist>
  </refsection>
</refentry>
