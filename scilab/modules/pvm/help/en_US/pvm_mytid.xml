<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 1997-2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:lang="en" xml:id="pvm_mytid">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>
  <refnamediv>
    <refname>pvm_mytid</refname>
    <refpurpose> returns the tid of the calling process.  </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <title>Calling Sequence</title>
    <synopsis>[tid] = pvm_mytid()</synopsis>
  </refsynopsisdiv>
  <refsection>
    <title>Arguments</title>
    <variablelist>
      <varlistentry>
        <term>tid</term>
        <listitem>
          <para>integer, the task identifier of the calling PVM process. Values less than zero indicate an error.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>
  <refsection>
    <title>Description</title>
    <para><literal>pvm_mytid</literal> 
    enrolls this process
    into PVM on its first call. It also generates a unique 
     <literal>tid</literal></para>
    <para>
    if this process was not created by <literal>pvm_spawn</literal>.
    pvm_mytid returns the <literal>tid</literal> 
    of the calling process
    and can be called multiple times in an application.</para>
    <para>
    Any PVM system call (not just pvm_mytid) will enroll a task in PVM
    if the task is not enrolled before the call.</para>
    <para>
    The tid is a 32 bit positive integer created by the local pvmd.
    The 32 bits are divided into fields that encode various
    information about this process such as its location in
    the virtual machine (i.e. local pvmd address),
    the CPU number in the case where the process is on
    a multiprocessor, and a process ID field. This information
    is used by PVM and is not expected to be used by applications.
    Applications should not attempt to predict or interpret the tid with
    the exception of calling tidtohost()</para>
    <para>
    If PVM has not been started before an application calls 
    <literal>pvm_mytid</literal>, the returned value will be 
    will be &lt; 0.</para>
  </refsection>
  <refsection role="see also">
<title>See Also</title>
    <simplelist type="inline">
      <member>
        <link linkend="pvm_tidtohost">pvm_tidtohost</link>
      </member>
      <member>
        <link linkend="pvm_parent">pvm_parent</link>
      </member>
    </simplelist>
  </refsection>
</refentry>
