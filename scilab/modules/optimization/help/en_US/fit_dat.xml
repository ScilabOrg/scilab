<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry version="5.0-subset Scilab" xml:id="fit_dat" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns4="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:db="http://docbook.org/ns/docbook">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>

  <refnamediv>
    <refname>fit_dat</refname>

    <refpurpose>Parameter identification based on measured data</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>Calling Sequence</title>

    <synopsis>[p,err]=fit_dat(G,p0,Z [,W] [,pmin,pmax] [,DG])</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Parameters</title>

    <variablelist>
      <varlistentry>
        <term>G</term>

        <listitem>
          <para>Scilab function (e=G(p,z), e: nex1, p: npx1, z: nzx1)</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>p0</term>

        <listitem>
          <para>initial guess (size npx1)</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Z</term>

        <listitem>
          <para>matrix [z_1,z_2,...z_n] where z_i (nzx1) is the ith
          measurement</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>W</term>

        <listitem>
          <para>weighting matrix of size nexne (optional; default 1)</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>pmin</term>

        <listitem>
          <para>lower bound on p (optional; size npx1)</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>pmax</term>

        <listitem>
          <para>upper bound on p (optional; size npx1)</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>DG</term>

        <listitem>
          <para>partial of G wrt p (optional; S=DG(p,z), S: nexnp)</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>

  <refsection>
    <title>Description</title>

    <para><literal>fit_dat</literal> is used for fitting data to a model. For
    a given function G(p,z), this function finds the best vector of parameters
    p for approximating G(p,z_i)=0 for a set of measurement vectors z_i.
    Vector p is found by minimizing
    <literal>G(p,z_1)'WG(p,z_1)+G(p,z_2)'WG(p,z_2)+...+G(p,z_n)'WG(p,z_n)</literal></para>
  </refsection>

  <refsection>
    <title>Examples</title>

    <programlisting role="example"> 
deff('y=FF(x)','y=a*(x-b)+c*x.*x')
X=[];Y=[];
a=34;b=12;c=14;for x=0:.1:3, Y=[Y,FF(x)+100*(rand()-.5)];X=[X,x];end
Z=[Y;X];
deff('e=G(p,z)','a=p(1),b=p(2),c=p(3),y=z(1),x=z(2),e=y-FF(x)')

[p,err]=fit_dat(G,[3;5;10],Z)

xset('window',0)
xbasc();
plot2d(X',Y',-1) 
plot2d(X',FF(X)',5,'002')
a=p(1),b=p(2),c=p(3);plot2d(X',FF(X)',12,'002')

a=34;b=12;c=14;
deff('s=DG(p,z)','y=z(1),x=z(2),s=-[x-p(2),-p(1),x*x]')

[p,err]=fit_dat(G,[3;5;10],Z,DG)

xset('window',1)
xbasc();
plot2d(X',Y',-1) 
plot2d(X',FF(X)',5,'002')
a=p(1),b=p(2),c=p(3);plot2d(X',FF(X)',12,'002')
  </programlisting>
  </refsection>

  <refsection>
    <title>See Also</title>

    <simplelist type="inline">
      <member><link linkend="optim">optim</link></member>

      <member><link linkend="datafit">datafit</link></member>
    </simplelist>
  </refsection>
</refentry>
