<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2013 - Scilab Enterprises - Adeline CARNIS
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns4="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="optimbase_hasbounds" xml:lang="en">
    <refnamediv>
        <refname>optimbase_hasbounds</refname>
        <refpurpose>Checks if the bounds are specified.</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>
            [opt, hasbounds] = optimbase_hasbounds(opt)
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Argument</title>
        <variablelist>
            <varlistentry>
                <term>opt </term>
                <listitem>
                    <para>The object of TOPTIM type (tlist).</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>hasbounds </term>
                <listitem>
                    <para>A boolean.</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            The <literal>optimbase_hasbounds</literal> function returns %t if current problem has 
            bounds.
        </para>
    </refsection>
    <refsection>
        <title>Example</title>
        <programlisting role="example">
            <![CDATA[ 
    opt = optimbase_new();

    // Set number of variables
    opt = optimbase_configure ( opt, "-numberofvariables", 2);
    
    // Set minimal and maximal bounds
    opt = optimbase_configure(opt, "-boundsmin",[-5 -5]');
    opt = optimbase_configure(opt, "-boundsmax",[5 5]');

    // Check if the bounds are specified
    [opt, hasbounds] = optimbase_hasbounds (opt);
    disp(hasbounds)

    opt = optimbase_destroy(opt);
 ]]>
        </programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="optimbase_hasconstraints">optimbase_hasconstraints</link>
            </member>
            <member>
                <link linkend="optimbase_hasnlcons">optimbase_hasnlcons</link>
            </member>
            <member>
                <link linkend="optimbase_checkbounds">optimbase_checkbounds</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
