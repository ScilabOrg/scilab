// Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
// Copyright (C) 2008-2009 - INRIA - Michael Baudin
//
// This file must be used under the terms of the CeCILL.
// This source file is licensed as described in the file COPYING, which
// you should have received as part of this distribution.  The terms
// are also available at
// http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
// <-- JVM NOT MANDATORY -->
//
// assert_close --
//   Returns 1 if the two real matrices computed and expected are close,
//   i.e. if the relative distance between computed and expected is lesser than epsilon.
// Arguments
//   computed, expected : the two matrices to compare
//   epsilon : a small number
//
function flag = assert_close ( computed, expected, epsilon )
  if expected==0.0 then
    shift = norm(computed-expected);
  else
    shift = norm(computed-expected)/norm(expected);
  end
  if shift < epsilon then
    flag = 1;
  else
    flag = 0;
  end
  if flag <> 1 then bugmes();quit;end
endfunction
//
// assert_equal --
//   Returns 1 if the two real matrices computed and expected are equal.
// Arguments
//   computed, expected : the two matrices to compare
//   epsilon : a small number
//
function flag = assert_equal ( computed , expected )
  if computed==expected then
    flag = 1;
  else
    flag = 0;
  end
  if flag <> 1 then bugmes();quit;end
endfunction
function [ y , index ] = rosenbrock ( x , index )
  y = 100*(x(2)-x(1)^2)^2 + (1-x(1))^2;
endfunction
//
// Check behaviour with default settings.
//
nm = nmplot_new ();
nm = nmplot_configure(nm,"-numberofvariables",2);
nm = nmplot_configure(nm,"-function",rosenbrock);
nm = nmplot_configure(nm,"-x0",[-1.2 1.0].');
nm = nmplot_configure(nm,"-maxiter",10);
nm = nmplot_configure(nm,"-maxfunevals",300);
nm = nmplot_configure(nm,"-tolfunrelative",10*%eps);
nm = nmplot_configure(nm,"-tolxrelative",10*%eps);
nm = nmplot_configure(nm,"-simplex0method","axes");
nm = nmplot_configure(nm,"-simplex0length",1.0);
nm = nmplot_configure(nm,"-method","variable");
nm = nmplot_configure(nm,"-simplexfn","rosenbrock.history.simplex.txt");
nm = nmplot_configure(nm,"-fbarfn","rosenbrock.history.fbar.txt");
nm = nmplot_configure(nm,"-foptfn","rosenbrock.history.fopt.txt");
nm = nmplot_configure(nm,"-sigmafn","rosenbrock.history.sigma.txt");
sfn = nmplot_cget ( nm , "-simplexfn" );
assert_equal ( sfn , "rosenbrock.history.simplex.txt" );
sfn = nmplot_cget ( nm , "-fbarfn" );
assert_equal ( sfn , "rosenbrock.history.fbar.txt" );
sfn = nmplot_cget ( nm , "-foptfn" );
assert_equal ( sfn , "rosenbrock.history.fopt.txt" );
sfn = nmplot_cget ( nm , "-sigmafn" );
assert_equal ( sfn , "rosenbrock.history.sigma.txt" );
// Check the display
nmplot_display(nm);
Nelder-Mead Plot Object
ATTENTION : neldermead_display: obsolete use of neldermead_display, use directly the variable instead.
ATTENTION : optimsimplex_tostring: obsolete use of optimsimplex_tostring, use string instead.
ATTENTION : optimsimplex_tostring: obsolete use of optimsimplex_tostring, use string instead.
Nelder-Mead Object:
======================
 
Optim Base Object:
==================
Number of variables : 2
Initial Guess : [-1.2 1]
Initial Function Value :
Number of Inequality Constraints :0
Bounds Mininimum : []
Bounds Maxinimum :[]
Optimum Parameters : [0]
Optimum Function Value :0.000000e+000
Number of iterations : 0
Maximum number of iterations : 10
Number function evaluations : 0
Maximum number of function evaluations : 300
Termination Method on function value : F
Termination Absolute Tolerance on function value : 0
Termination Relative Tolerance on function value : 2.220D-15
Termination Method on x : T
Termination Absolute Tolerance on x : 0
Termination Relative Tolerance on x : 2.220D-15
Optimization Status : 
Verbose logging : 0
Verbose Termination : 0
Verbose Log File : 
Verbose Log File Startup Up: F
Store History : F

Simplex0 : 
Optim Simplex Object:
=====================
Empty simplex (zero dimension)
Simplex Optimum : 
Simplex0 Method : axes
Simplex0 Length : 1
Simplex0, Pfeffer, Delta Usual : 0.05
Simplex0, Pfeffer, Delta Zero : 0.0075
Simplex0, Given, Coords :
[]

Termination parameters
Termination on simplex size : T
Termination on simplex size, Absolute Tolerance : 0
Termination on simplex size, Relative Tolerance : 2.220D-16
Termination on simplex size, Initial Simplex Size : 0
Termination on simplex size + Delta of function value : F
Termination on simplex size + Delta of function value, Absolute Tolerance on Delta F : 2.220D-16
Termination on Kelley's Stagnation : F
Termination on Kelley's Stagnation, Normalization : T
Termination on Kelley's Stagnation, Alpha0 : 0.0001
Termination on Kelley's Stagnation, Alpha : 0.0001
Termination by Box : F
Termination by Box, Absolute Tolerance on Function: 0.00001
Termination by Box, Maximum Number of Consecutive Match : 5
Termination by Box, Current Number of Consecutive Match : 0
Termination on Variance : F
Termination on Variance, Absolute Tolerance : 0
Termination on Variance, Relative Tolerance : 2.220D-16
Termination on Variance, Variance of Initial Simplex : 0

Algorithms parameters
Method : variable
Reflection Factor (rho) : 1
Expansion Factor (chi) : 2
Contraction Factor (gamma) : 0.5
Shrinkage Factor (sigma) : 0.5
Kelley Stagnation : F
Restart Epsilon : 2.220446e-016
Restart Step : 1
Restart Maximum : 3
Restart Simplex Method : oriented
Restart Flag : F
Restart Number : 0
Restart Detection Method : oneill
Startup Flag : F
Automatic Checking of Cost Function : T
Box, Number of Points  : 2n
Box, Current Number of Points  : 0
Box, Scaling, Factor  : 0.5
Box, Scaling, Method  : tox0
Box, Scaling, Minimum : 0.00001
Box, Bounds Parameter: 0.000001
Box, Reflection Coefficient : 1.3
Simplex data file : rosenbrock.history.simplex.txt
Fbar data file : rosenbrock.history.fbar.txt
Fopt data file : rosenbrock.history.fopt.txt
Sigma data file : rosenbrock.history.sigma.txt
nm = nmplot_destroy(nm);
