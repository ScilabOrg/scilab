// Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
// Copyright (C) 2008-2009 - INRIA - Michael Baudin
// Copyright (C) 2011 - DIGITEO - Michael Baudin
//
// This file must be used under the terms of the CeCILL.
// This source file is licensed as described in the file COPYING, which
// you should have received as part of this distribution.  The terms
// are also available at
// http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
// <-- JVM NOT MANDATORY -->
//
// Check behaviour with configured settings.
//
function [ y , index ] = rosenbrock ( x , index )
  y = 100*(x(2)-x(1)^2)^2 + (1-x(1))^2;
endfunction
//
// Check maxfunevals with "variable" method
//
nm = neldermead_new ();
nm = neldermead_configure(nm,"-numberofvariables",2);
nm = neldermead_configure(nm,"-x0",[1.1 1.1]');
nm = neldermead_configure(nm,"-simplex0method","axes");
nm = neldermead_configure(nm,"-simplex0length",0.1);
nm = neldermead_configure(nm,"-method","variable");
nm = neldermead_configure(nm,"-function",rosenbrock);
nm = neldermead_configure(nm,"-maxfunevals",10);
nm = neldermead_search(nm);
funevals = neldermead_get(nm,"-funevals");
// Let's be not strict
assert_checkequal ( funevals < 15 , %T );
// Cleanup
nm = neldermead_destroy(nm);
//
// Check maxiter with "variable" method
//
nm = neldermead_new ();
nm = neldermead_configure(nm,"-numberofvariables",2);
nm = neldermead_configure(nm,"-x0",[1.1 1.1]');
nm = neldermead_configure(nm,"-simplex0method","axes");
nm = neldermead_configure(nm,"-simplex0length",0.1);
nm = neldermead_configure(nm,"-method","variable");
nm = neldermead_configure(nm,"-function",rosenbrock);
nm = neldermead_configure(nm,"-maxiter",10);
nm = neldermead_search(nm);
iterations = neldermead_get(nm,"-iterations");
assert_checkequal ( iterations , 10 );
// Cleanup
nm = neldermead_destroy(nm);
// Wrong -method flag
nm = neldermead_new ();
cmd = "nm = neldermead_configure(nm,''-method'',''foo'')";
assert_checkerror(cmd,"%s: Unknown value %s for %s option",[],"unknownValueForOption","foo","-method");
nm = neldermead_destroy(nm);
// Wrong -simplex0method flag
nm = neldermead_new ();
cmd = "nm = neldermead_configure(nm,''-simplex0method'',''foo'')";
assert_checkerror(cmd,"%s: Unknown value %s for %s option",[],"unknownValueForOption","foo","-simplex0method");
nm = neldermead_destroy(nm);
// Wrong -tolsimplexizemethod flag
nm = neldermead_new ();
cmd = "nm = neldermead_configure(nm,''-tolsimplexizemethod'',''foo'')";
assert_checkerror(cmd,"%s: Expected boolean but for variable %s at input #%d, got %s instead.",[],"assert_typeboolean","value",3,"string");
nm = neldermead_destroy(nm);
// Wrong -tolssizedeltafvmethod flag
nm = neldermead_new ();
cmd = "nm = neldermead_configure(nm,''-tolssizedeltafvmethod'',''foo'')";
assert_checkerror(cmd,"%s: Expected boolean but for variable %s at input #%d, got %s instead.",[],"assert_typeboolean","value",3,"string");
nm = neldermead_destroy(nm);
//
// Check wrong key for get method
nm = neldermead_new ();
nm = neldermead_configure(nm,"-numberofvariables",2);
nm = neldermead_configure(nm,"-x0",[1.1 1.1]');
nm = neldermead_configure(nm,"-simplex0method","axes");
nm = neldermead_configure(nm,"-simplex0length",0.1);
nm = neldermead_configure(nm,"-method","variable");
nm = neldermead_configure(nm,"-function",rosenbrock);
nm = neldermead_configure(nm,"-maxfunevals",2);
nm = neldermead_search(nm);
cmd = "funevals = neldermead_get(nm,''-foo'')";
assert_checkerror(cmd,"%s: Unknown key %s",[],"optimbase_get","-foo");
nm = neldermead_destroy(nm);
//
// Check that x0 is forced to be a column vector
nm = neldermead_new ();
nm = neldermead_configure(nm,"-numberofvariables",2);
cmd = "nm = neldermead_configure(nm,''-x0'',[-1.2 1.0]);";
assert_checkerror(cmd,"%s: The x0 vector is expected to be a column matrix, but current shape is %d x %d",[],"optimbase_configure",1,2);
nm = neldermead_destroy(nm);
//
// Check -restartstep
nm = neldermead_new ();
nm = neldermead_configure(nm,"-numberofvariables",2);
cmd = "nm = neldermead_configure(nm,''-restartstep'',[1 2 3]);";
assert_checkerror(cmd,"%s: The restartstep vector is expected to have %d x %d shape, but current shape is %d x %d",[],"neldermead_configure",2,1,1,3);
cmd = "nm = neldermead_configure(nm,''-restartstep'',[-1 2]'');";
assert_checkerror(cmd,"%s: The restartstep vector is expected to be positive",[],"neldermead_configure");
nm = neldermead_destroy(nm);
//
// Check -restarteps
nm = neldermead_new ();
nm = neldermead_configure(nm,"-numberofvariables",2);
cmd = "nm = neldermead_configure(nm,''-restarteps'',[1 2]);";
assert_checkerror(cmd,"%s: The restarteps option is expected to be a scalar, but current shape is %d x %d",[],"neldermead_configure",1,2);
cmd = "nm = neldermead_configure(nm,''-restarteps'',-1);";
assert_checkerror(cmd,"%s: The restarteps option is expected to be positive",[],"neldermead_configure");
nm = neldermead_destroy(nm);
//
// Check the display system
nm = neldermead_new ();
nm
 nm  =
 
Nelder-Mead Object:
======================

Simplex0 Method : axes
Simplex0 Length : 1
Simplex0, Pfeffer, Delta Usual : 0.05
Simplex0, Pfeffer, Delta Zero : 0.0075
Simplex0, Given, Coords :
[]

Termination parameters
Termination on simplex size : T
Termination on simplex size, Absolute Tolerance : 0
Termination on simplex size, Relative Tolerance : 2.220D-16
Termination on simplex size, Initial Simplex Size : 0
Termination on simplex size + Delta of function value : F
Termination on simplex size + Delta of function value, Absolute Tolerance on Delta F : 2.220D-16
Termination on Kelley's Stagnation : F
Termination on Kelley's Stagnation, Normalization : T
Termination on Kelley's Stagnation, Alpha0 : 0.0001
Termination on Kelley's Stagnation, Alpha : 0.0001
Termination by Box : F
Termination by Box, Absolute Tolerance on Function: 0.00001
Termination by Box, Maximum Number of Consecutive Match : 5
Termination by Box, Current Number of Consecutive Match : 0
Termination on Variance : F
Termination on Variance, Absolute Tolerance : 0
Termination on Variance, Relative Tolerance : 2.220D-16
Termination on Variance, Variance of Initial Simplex : 0

Algorithms parameters
Method : variable
Reflection Factor (rho) : 1
Expansion Factor (chi) : 2
Contraction Factor (gamma) : 0.5
Shrinkage Factor (sigma) : 0.5
Kelley Stagnation : F
Restart Epsilon : 2.220446e-016
Restart Step : 1
Restart Maximum : 3
Restart Simplex Method : oriented
Restart Flag : F
Restart Number : 0
Restart Detection Method : oneill
Startup Flag : F
Automatic Checking of Cost Function : T
Box, Number of Points  : 2n
Box, Current Number of Points  : 0
Box, Scaling, Factor  : 0.5
Box, Scaling, Method  : tox0
Box, Scaling, Minimum : 0.00001
Box, Bounds Parameter: 0.000001
Box, Reflection Coefficient : 1.3

Optim Base Object:
==================
Number of variables : 0
Initial Guess : []
Initial Function Value :
Number of Inequality Constraints :0
Bounds Mininimum : []
Bounds Maxinimum :[]
Optimum Parameters : [0]
Optimum Function Value :0.000000e+000
Number of iterations : 0
Maximum number of iterations : 100
Number function evaluations : 0
Maximum number of function evaluations : 100
Termination Method on function value : F
Termination Absolute Tolerance on function value : 0
Termination Relative Tolerance on function value : 2.220D-16
Termination Method on x : T
Termination Absolute Tolerance on x : 0
Termination Relative Tolerance on x : 2.220D-16
Optimization Status : 
Verbose logging : 0
Verbose Termination : 0
Verbose Log File : 
Verbose Log File Startup Up: F
Store History : F

Simplex0 : 
Optim Simplex Object:
=====================
Empty simplex (zero dimension)

Simplex Optimum : 
nm = neldermead_destroy(nm);
