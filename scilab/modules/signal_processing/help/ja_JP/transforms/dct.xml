<?xml version="1.0" encoding="UTF-8"?>
<!--
* Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
* Copyright (C) 1997   - INRIA
* Copyright (C) 2012 - Serge Steer - INRIA
*
* This file must be used under the terms of the CeCILL.
* This source file is licensed as described in the file COPYING, which
* you should have received as part of this distribution.  The terms
* are also available at
* http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
*
-->
<refentry xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:db="http://docbook.org/ns/docbook"
          xmlns:scilab="http://www.scilab.org" xml:lang="ja" xml:id="dct">
    <refnamediv>
        <refname>dct</refname>
        <refpurpose>離散コサイン変換.</refpurpose>
    </refnamediv>
    <refnamediv xml:id="idct">
        <refname>idct</refname>
        <refpurpose>逆離散コサイン変換.</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>呼び出し手順</title>
        <synopsis>X=dct(A [,sign] [,option])
            X=dct(A,sign,selection [,option])
            X=dct(A,sign,dims,incr [,option])
            X=idct(A [,option])
            X=idct(A,selection [,option])
            X=idct(A,dims,incr [,option])
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>引数</title>
        <variablelist>
            <varlistentry>
                <term>A</term>
                <listitem>
                    <para>実数/複素ベクトルまたは実数/複素配列
                        (ベクトル, 行列または N-D 配列).
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>X</term>
                <listitem>
                    <literal>A</literal>と同じ大きさの
                    実数または複素配列.
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>sign</term>
                <listitem>
                    整数.値は <literal>1</literal>または
                    <literal>-1</literal>となります.
                    順方向または逆変換を選択します.
                    デフォルト値は<literal>-1</literal>
                    (順方向変換)です.
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>selection</term>
                <listitem>
                    <literal>A</literal>の各配列次元への添字を有する
                    ベクトル. 詳細は説明を参照ください.
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>dims</term>
                <listitem>
                    整数値を有する正の数値ベクトル, または正の整数のベクトル.
                    詳細は説明を参照ください.
                    <para>
                        各要素は
                        <literal>A</literal>の要素の総数の約数となります.
                    </para>
                    <para>
                        各要素の積は<literal>A</literal>の要素の総数よりも
                        小さな値とする必要があります.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>incr</term>
                <listitem>
                    整数値を有する正の数値ベクトル, または正の整数のベクトル.
                    詳細は説明を参照ください.
                    <para>
                        <literal>incr</literal> は,
                        <literal>dims</literal>の要素数と同じにする
                        必要があります.
                    </para>
                    <para>
                        各要素は,<literal>A</literal>の要素の総数の約数とする
                        必要があります.
                    </para>
                    <para>
                        <literal>incr</literal> の要素は,
                        厳密に昇順とする必要があります.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>option</term>
                <listitem>
                    文字列. 値は,順方向変換の場合,
                    <literal>"dct1"</literal>, <literal>"dct2"</literal>,
                    <literal>"dct4"</literal> または <literal>"dct"</literal>,
                    逆変換の場合は <literal>"dct1"</literal>,
                    <literal>"dct3"</literal>, <literal>"dct4"</literal>または
                    <literal>"idct"</literal> です.
                    デフォルト値は,順方向変換の場合に<literal>"dct"</literal>,
                    逆変換の場合に<literal>"idct"</literal>です.
                    詳細は説明を参照ください.
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>説明</title>
        <refsection>
            <title>変換の説明</title>
            <para>
                この関数は,
                パラメータ値<literal>option</literal>で指定したシフト量を用いて
                順方向または逆方向の1次元またはN次元離散コサイン変換を
                行います.
                長さ<latex scilab:localized="true">$n$</latex>の1次元配列<latex scilab:localized="true">$A$</latex>の場合:
            </para>
            <itemizedlist>
                <listitem>
                    <para>
                        <literal>"dct1"</literal>の場合, この関数は
                        正規化しないDCT-I変換を計算します:
                    </para>
                    <para>
                        <latex>
                            $X(k) = A(1) + (-1)^{k-1}A(n) + 2\sum_{i=2}^{n-1} {A(i)
                            \cos\frac{\pi (i -1)(k-1)}{n-1}}, k=1\ldots n$
                        </latex>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <literal>"dct2"</literal>の場合,この関数は
                        正規化しないDCT-II変換を計算します:
                    </para>
                    <para>
                        <latex>
                            $X(k) = 2 \sum_{i=1}^{n} {A(i) \cos\frac{\pi (i
                            -1/2)(k-1)}{n}}, k=1\ldots n$
                        </latex>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <literal>"dct3"</literal>の場合,この関数は
                        正規化しないDCT-III変換を計算します:
                    </para>
                    <para>
                        <latex>
                            $X(k) = A(1) + 2 \sum_{i=2}^{n} {A(i) \cos\frac{\pi (i
                            -1)(k-1/2)}{n}}, k=1\ldots n$
                        </latex>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <literal>"dct4"</literal>の場合,この関数は
                        正規化しないDCT-IV変換を計算します:
                    </para>
                    <para>
                        <latex>
                            $X(k) = 2 \sum_{i=1}^{n} {A(i) \cos\frac{\pi (i
                            -1/2)(k-1/2)}{n}}, k=1\ldots n$
                        </latex>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <literal>"dct"</literal>の場合,この関数は
                        正規化されたDCT-II変換を計算します:
                    </para>
                    <para>
                        <latex>
                            $X(k) = \omega(k)
                            \sum_{i=1}^n {A(i) \cos\frac{\pi (i
                            -1/2)(k-1)}{n}}, k=1\ldots n \quad\text{with }
                            \omega(1)=\frac{1}{\sqrt{n}} \quad\text{and }
                            \omega(k)=\sqrt{\frac{2}{n}} , k>1$
                        </latex>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        <literal>"idct"</literal>の場合,この関数は
                        正規化されたDCT-III変換を計算します:
                    </para>
                    <para>
                        <latex>
                            $X(i) = \sum_{k=1}^n {\omega(k) A(k) \cos\frac{\pi (i
                            -1/2)(k-1)}{n}}, k=1\ldots n \quad\text{with }
                            \omega(1)=\frac{1}{\sqrt{n}} \quad\text{and }
                            \omega(k)=\sqrt{\frac{2}{n}} , k>1$
                        </latex>
                    </para>
                </listitem>
            </itemizedlist>
            <para>
                多次元のDCT変換は,一般に,
                配列の各次元方向の1次元変換の分離可能な積です.
                正規化しない変換の場合,
                順方向の後に逆方向多次元変換を行うと,
                元の配列が各次元の大きさの積で拡大されたものと
                なります.
            </para>
            <para>
                次元が	<latex>$n_1, n_2, \ldots, n_p$</latex>の
                配列<literal>A</literal>の正規化された多次元DCT変換
                は以下のように計算されます
            </para>
            <para>
                <latex>
                    $\begin{array} \\X(k_1, \dots, k_p) =
                    \omega_1(k_1) \ldots \omega_p(k_p)
                    \sum_{i_1=1}^{n_1} \ldots \sum_{i_p=1}^{n_p}
                    {A(i_1,\ldots ,i_p) \cos\frac{\pi (2 i_1
                    -1)(k_1-1)}{2 n} \ldots \cos\frac{\pi (2 i_p
                    -1)(k_p-1)}{2 n}}, k_j=1\ldots n_j\\
                    \text{with}\\
                    \omega_j(1)=\frac{1}{\sqrt{n_j}}\\
                    \omega_j(k)=\sqrt{\frac{2}{n_j}} , k>1
                    \end{array}$
                </latex>
            </para>
            <para>
                次元が<latex>$n_1, n_2, \ldots, n_p$</latex>の
                配列<literal>A</literal>の正規化された多次元DCT逆変換
                は以下のように計算されます
            </para>
            <para>
                <latex>
                    $\begin{array} \\X(i_1, \dots, i_p) = \sum_{k_1=1}^{n_1}
                    \ldots \sum_{k_p=1}^{n_p} {\omega_1(i_1) \ldots \omega_p(i_p)
                    A(k_1,\ldots ,k_p) \cos\frac{\pi (2 k_1 -1)(i_1-1)}{2 n}
                    \ldots \cos\frac{\pi (2 k_p -1)(i_p-1)}{2 n}}, i_j=1\ldots
                    n_j\\
                    \text{with}\\
                    \omega_j(1)=\frac{1}{\sqrt{n_j}}\\
                    \omega_j(k)=\sqrt{\frac{2}{n_j}} , k>1 \end{array}$
                </latex>
            </para>
        </refsection>
        <refsection>
            <title>構文の説明</title>
            <variablelist>
                <varlistentry>
                    <term>短縮構文</term>
                    <listitem>
                        <variablelist>
                            <varlistentry>
                                <term>順方向</term>
                                <listitem>
                                    <para>
                                        <literal>X=dct(A,-1 [,option])</literal> または
                                        <literal>X=dct(A [,option])</literal> により,
                                        オプション値を指定した順方向変換が得られます.
                                        デフォルトは,正規化された
                                        DCT-II順方向変換です.
                                    </para>
                                    <para>
                                        <literal>A</literal>がベクトルの場合
                                        (1より大きい次元が1つだけの場合),
                                        1次元の変換が行われ,
                                        その他の場合にはn次元変換が行われます.
                                    </para>
                                    <para>
                                        (引数<literal>-1</literal>は"inverse"ではなく,
                                        指数の符号を意味します).
                                    </para>
                                </listitem>
                            </varlistentry>
                            <varlistentry>
                                <term>逆方向</term>
                                <listitem>
                                    <para>
                                        <literal>X=dct(A,1 [,option])</literal>または
                                        <literal>X=idct(A [,option])</literal>は
                                        逆変換を行います.
                                    </para>
                                    <para>
                                        <literal>A</literal>がベクトルの場合
                                        (1より大きい次元が1つだけの場合),
                                        1次元の変換が行われ,
                                        その他の場合にはn次元変換が行われます.
                                    </para>
                                </listitem>
                            </varlistentry>
                        </variablelist>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>指定した次元方向のDCTの長い構文</term>
                    <listitem>
                        <itemizedlist>
                            <listitem>
                                <para>
                                    <literal>X=dct(A,sign,selection [,option])</literal>
                                    により,
                                    選択した次元方向の<literal>A</literal>の"スライス"の
                                    順方向または逆方向dctを
                                    効率的に計算することができます.
                                </para>
                                <para>
                                    例えば, <literal>A</literal> が3次元配列の場合,
                                    <literal>X=dct(A,-1,2)</literal> は以下と等価になります:
                                </para>
                                <programlisting role=""><![CDATA[
            for i1=1:size(A,1),
              for i3=1:size(A,3),
                X(i1,:,i3)=dct(A(i1,:,i3),-1);
              end
            end
            ]]></programlisting>
                                <para>
                                    そして <literal>X=dct(A,-1,[1 3])</literal> は
                                    以下と等価になります:
                                </para>
                                <programlisting role=""><![CDATA[
            for i2=1:size(A,2),
              X(:,i2,:)=dct(A(:,i2,:),-1);
            end
            ]]></programlisting>
                            </listitem>
                            <listitem>
                                <para>
                                    <literal>X=dct(A,sign,dims,incr)</literal> は
                                    古い構文であり,この方法でも
                                    指定した次元方向の<literal>A</literal>のスライスの
                                    順方向または逆方向のdctを行うことができます.
                                </para>
                                <para>
                                    例えば,<literal>A</literal>が
                                    <literal>n1*n2*n3</literal> 個の要素を有する配列の場合,
                                    <literal>X=dct(A,-1,n1,1)</literal> は
                                    <literal>X=dct(matrix(A,[n1,n2,n3]),-1,1)</literal>
                                    と等価で,
                                    <literal>X=dct(A,-1,[n1 n3],[1 n1*n2])</literal>
                                    は
                                    <literal>X=dct(matrix(A,[n1,n2,n3]),-1,[1,3])</literal>
                                    と等価です.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
        </refsection>
        <refsection>
            <title>dctを最適化</title>
            <para>
                注意:
                この関数は直近のパラメータをメモリに保持し,2回目に再利用します.
                これにより(同じパラメータで)連続的にコールした場合の
                計算時間が著しく改善されます.
            </para>
            <para>
                <link linkend="get_fftw_wisdom">get_fftw_wisdom</link>, <link
          linkend="set_fftw_wisdom">set_fftw_wisdom</link> 関数により
                dctを更に最適化することができます.
            </para>
        </refsection>
    </refsection>
    <refsection>
        <title>アルゴリズム</title>
        <para>
            この関数は,<ulink url="http://www.fftw.org/">fftw3</ulink>ライブラリを
            使用します.
        </para>
    </refsection>
    <refsection>
        <title>例</title>
        <para>1次元dct</para>
        <programlisting role="example"><![CDATA[
  // 信号の周波数要素
  //----------------------------------
  // 50および70Hzの信号を含む1000hzで標本化された信号を構築
  sample_rate=1000;
  t = 0:1/sample_rate:0.6;
  N=size(t,'*'); //number of samples
  s=sin(2*%pi*50*t)+sin(2*%pi*70*t+%pi/4)+grand(1,N,'nor',0,1);
  d=dct(s);
  // 低エネルギー部分を0にする
  d(abs(d)<1)=0;
  size(find(y1<>0),'*') //only 30 non zero coefficients out of 600
  clf;plot(s,'b'),plot(dct(d,1),'r')
  ]]></programlisting>
        <para>2次元 dct</para>
        <programlisting role="example"><![CDATA[
  //----------------------------------
  function [z]=__milk_drop(x,y)
      sq=x.^2+y.^2;
      z= exp( exp(-sq).*(exp(cos(sq).^20)+8*sin(sq).^20+2*sin(2*(sq)).^8) );
  endfunction
  x=-2:0.1:2;
  A=eval3d(__milk_drop,x,x);
  d=dct(A);
  d(abs(d)<1)=0;
  size(find(d1<>0),'*')
  A1=dct(d,1);
  clf();fig=gcf();fig.color_map=graycolormap(128);
  subplot(121),grayplot(x,x,A)
  subplot(122),grayplot(x,x,A1)
  ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>参照</title>
        <simplelist type="inline">
            <member>
                <link linkend="fft">fft</link>
            </member>
            <member>
                <link linkend="dst">dst</link>
            </member>
            <member>
                <link linkend="fftw_flags">fftw_flags</link>
            </member>
            <member>
                <link linkend="get_fftw_wisdom">get_fftw_wisdom</link>
            </member>
            <member>
                <link linkend="set_fftw_wisdom">set_fftw_wisdom</link>
            </member>
            <member>
                <link linkend="fftw_forget_wisdom">fftw_forget_wisdom</link>
            </member>
        </simplelist>
    </refsection>
    <refsection>
        <title>参考文献</title>
        <para>
            Matteo Frigo and Steven G. Johnson, "FFTW Documentation" <ulink
    url="http://www.fftw.org/#documentation">http://www.fftw.org/#documentation</ulink>
        </para>
    </refsection>
</refentry>
