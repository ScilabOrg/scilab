<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:lang="en" xml:id="detrend">
    <refnamediv>
        <refname>detrend</refname>
        <refpurpose>remove constant, linear or piecewise linear trend from a vector</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>y = detrend(x)
            y = detrend(x,flag)
            y = detrend(x,flag,bp)
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>x</term>
                <listitem>
                    <para>vector or matrix of real or complex numbers (the signal to treat)
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>flag</term>
                <listitem>
                    <para>a string equal to "linear" (or "l") for linear or piecewise linear treatment  
                        or "constant" (or "c") for constant treatment.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>bp</term>
                <listitem>
                    <para>the breakpoints to provide if you want a piecewise linear treatment. 
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>y</term>
                <listitem>
                    <para>output, the signal x with the trend removed from it.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            This function removes the constant or linear or
            piecewise linear trend from a vector <literal>x</literal>. In general
            this can be useful before a fourier analysis. If <literal>x</literal> is
            matrix this function removes the trend of each column of x.
        </para>
        <para>
            When <literal>flag</literal> = "constant" or "c"  <literal>detrend</literal> removes the constant trend 
            (simply the mean of the signal) and when <literal>flag</literal> = "linear" or "l" the function
            removes the linear trend. By adding a third argument <literal>bp</literal> it is possible to
            remove a continuous <emphasis>piecewise linear</emphasis> trend. Note that the "instants" of the signal 
            <literal>x</literal> goes from 0 to m-1  (m = length(x) if x is a vector and m = size(x,1) in case
            x is a matrix). So the breakpoints <literal>bp(i)</literal> must be reals in <emphasis>[0 m-1]</emphasis> 
            (breakpoints outside are simply removed from <literal>bp</literal> vector). 
        </para>
        <para>
            The trend is got by a least square fit of <literal>x</literal> on the appropriate function space. 
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[ 
t = linspace(0,16*%pi,1000)';
x = -20 + t + 0.3*sin(0.5*t) + sin(t) + 2*sin(2*t) + 0.5*sin(3*t); 
y = detrend(x);
clf()
plot2d(t,[x y],style=[2 5])
legend(["before detrend","after detrend"]);
xgrid()
 ]]></programlisting>
        <scilab:image>
            t = linspace(0,16*%pi,1000)';
            x = -20 + t + 0.3*sin(0.5*t) + sin(t) + 2*sin(2*t) + 0.5*sin(3*t); 
            y = detrend(x);
            clf()
            plot2d(t,[x y],style=[2 5])
            legend(["before detrend","after detrend"]);
            xgrid()
        </scilab:image>
        <programlisting role="example"><![CDATA[ 
t = linspace(0,32*%pi,2000)';
x = abs(t-16*%pi) + 0.3*sin(0.5*t) + sin(t) + 2*sin(2*t) + 0.5*sin(3*t); 
y = detrend(x,"linear",1000);
clf()
plot2d(t,[x y],style=[2 5])
legend(["before detrend","after detrend"]);
xgrid()
 ]]></programlisting>
        <scilab:image>
            t = linspace(0,32*%pi,2000)';
            x = abs(t-16*%pi) + 0.3*sin(0.5*t) + sin(t) + 2*sin(2*t) + 0.5*sin(3*t); 
            y = detrend(x,"linear",1000);
            clf()
            plot2d(t,[x y],style=[2 5])
            legend(["before detrend","after detrend"]);
            xgrid()
        </scilab:image>
    </refsection>
</refentry>
