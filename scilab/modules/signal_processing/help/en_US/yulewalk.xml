<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:lang="en" xml:id="yulewalk">
    <refnamediv>
        <refname>yulewalk</refname>
        <refpurpose>least-square filter design</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>Hz = yulewalk(N,frq,mag)</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>N</term>
                <listitem>
                    <para>integer (order of desired filter)</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>frq</term>
                <listitem>
                    <para>real row vector (non-decreasing order), frequencies.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>mag</term>
                <listitem>
                    <para>non negative real row vector (same size as frq), desired magnitudes.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Hz</term>
                <listitem>
                    <para>
                        filter <literal>B(z)/A(z)</literal>
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            Hz = yulewalk(N,frq,mag) finds the N-th order iir filter
        </para>
        <programlisting role="no-scilab-exec"><![CDATA[ 
                  n-1         n-2
      B(z)   b(1)z     + b(2)z    + .... + b(n)
H(z)= ---- = ---------------------------------
                n-1       n-2
      A(z)    z   + a(2)z    + .... + a(n)
 ]]></programlisting>
        <para>
            which matches the magnitude frequency response given by vectors frq and mag.
            Vectors frq and mag specify the frequency and magnitude of the desired
            frequency response. The frequencies in frq must be between 0.0 and 1.0,
            with 1.0 corresponding to half the sample rate. They must be in
            increasing order and start with 0.0 and end with 1.0.
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[ 
f=[0,0.4,0.4,0.6,0.6,1];
H=[0,0,1,1,0,0];
Hz=yulewalk(8,f,H);
fs=1000;
fhz = f*fs/2; 
clf(0);
xset('window',0);
plot2d(fhz',H');
xtitle('Desired Frequency Response (Magnitude)')
[frq,repf]=repfreq(Hz,0:0.001:0.5);
clf(1);
xset('window',1);
plot2d(fs*frq',abs(repf'));
xtitle('Obtained Frequency Response (Magnitude)')
 ]]></programlisting>
        <scilab:image>
            f=[0,0.4,0.4,0.6,0.6,1];
            H=[0,0,1,1,0,0];
            Hz=yulewalk(8,f,H);
            fs=1000;
            fhz = f*fs/2; 
            clf(0);
            xset('window',0);
            plot2d(fhz',H');
            xtitle('Desired Frequency Response (Magnitude)')
            [frq,repf]=repfreq(Hz,0:0.001:0.5);
        </scilab:image>
        <scilab:image>
            f=[0,0.4,0.4,0.6,0.6,1];
            H=[0,0,1,1,0,0];
            Hz=yulewalk(8,f,H);
            fs=1000;
            fhz = f*fs/2;
            [frq,repf]=repfreq(Hz,0:0.001:0.5);
            plot2d(fs*frq',abs(repf'));
            xtitle('Obtained Frequency Response (Magnitude)')
        </scilab:image>
    </refsection>
</refentry>
