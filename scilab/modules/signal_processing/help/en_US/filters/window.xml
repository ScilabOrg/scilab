<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook"  xml:lang="en" xmlns:scilab="http://www.scilab.org" xml:id="window">
    <refnamediv>
        <refname>window</refname>
        <refpurpose>compute symmetric window of various type</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>win_l=window('re',n)
            win_l=window('tr',n)
            win_l=window('hn',n)
            win_l=window('hm',n)
            win_l=window('kr',n,Beta)
            [win_l,cwp]=window('ch',n,par)
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>n</term>
                <listitem>
                    <para>window length</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>par</term>
                <listitem>
                    <para>
                        parameter 2-vector <literal>par=[dp,df])</literal>, where
                        <literal>dp</literal>  (<literal>0&lt;dp&lt;.5</literal>) rules the  main lobe
                        width and  <literal>df</literal> rules the side lobe height
                        (<literal>df&gt;0</literal>).
                    </para>
                    <para>Only one of these two value should be specified, the other one
                        must be equal to a nonpositive value.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Beta</term>
                <listitem>
                    <para>
                        Kaiser window parameter <literal>Beta &gt;0</literal>).
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>win</term>
                <listitem>
                    <para>window</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>cwp</term>
                <listitem>
                    <para>unspecified Chebyshev window parameter</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            function which calculates various symmetric window for Digital signal processing.
        </para>
        <itemizedlist>
            <listitem>
                <para>
                    The Kaiser window is a nearly optimal window function. <literal>Beta</literal>
                    is an arbitrary positive real number that determines the shape of the
                    window,  and the integer  <literal>n</literal> is the length of the window.
                </para>
                <para>
                    By construction, this function peaks at unity for <literal> k = n/2</literal> ,
                    i.e. at the center of the window, and decays exponentially towards the
                    window edges.   The larger the value of <literal>Beta</literal>, the narrower
                    the window becomes; <literal>Beta = 0</literal> corresponds to a rectangular window.
                    Conversely, for larger <literal>Beta</literal> the width of the main lobe
                    increases in the Fourier transform, while the side lobes decrease in
                    amplitude.
                    Thus, this parameter controls the tradeoff between main-lobe width and
                    side-lobe area.
                </para>
                <informaltable border="1">
                    <tr>
                        <td>Beta</td>
                        <td>window shape</td>
                    </tr>
                    <tr>
                        <td>0</td>
                        <td>Rectangular shape</td>
                    </tr>
                    <tr>
                        <td>5</td>
                        <td>Similar to the Hamming window</td>
                    </tr>
                    <tr>
                        <td>6</td>
                        <td>Similar to the Hann window</td>
                    </tr>
                    <tr>
                        <td>8.6</td>
                        <td>Similar to the Blackman window</td>
                    </tr>
                </informaltable>
            </listitem>
            <listitem>
                <para>
                    The Chebyshev window minimizes the mainlobe width, given a particular sidelobe
                    height. It is characterized by an equiripple behavior, that is, its
                    sidelobes all have the same height.
                </para>
            </listitem>
            <listitem>
                <para>
                    The Hann and Hamming windows are quite similar, they only differ in
                    the choice of one parameter <literal>alpha</literal>:
                    <literal> w=alpha+(1 - alpha)*cos(2*%pi*x/(n-1))</literal>
                    <literal>alpha</literal> is equal to 1/2 in Hann window and to 0.54 in
                    Hamming window.
                </para>
            </listitem>
        </itemizedlist>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[
    clf()
    N = 24;
    whm = window('hm', N); // Hamming window
    wkr = window('kr', N, 6); // Hamming Kaiser window
    wch = window('ch', N, [0.005 -1]); // Chebychev window

    // Plot the window profile
    subplot(121);
    plot((1:N)', [whm; wkr; wch]')
    set(gca(), 'grid', [1 1]*color('gray'))
    xlabel("n")
    ylabel("w_n")
    title(gettext("Profile plot"))

    // Plot the magnitude of the frequency responses
    n = 256;
    [Whm,fr] = frmag(whm, n);
    [Wkr,fr] = frmag(wkr, n);
    [Wch,fr] = frmag(wch, n);
    subplot(122);
    plot(fr', 20*log10([Whm; Wkr; Wch]'))
    set(gca(), 'grid', [1 1]*color('gray'))
    xlabel(gettext("Pulsation (rad/s)"))
    ylabel(gettext("Magnitude (dB)"))
    legend(["Hamming N=24"; "Kaiser N=24, Beta=6"; "Chebychev N=24, dp=0.005"]);
    title(gettext("Magnitude plot"))
    ]]></programlisting>
        <para>
            <scilab:image>
                clf()
                N=24;
                whm=window('hm',N);//Hamming window
                wkr=window('kr',N,6);//Hamming Kaiser window
                wch=window('ch',N,[0.005,-1]);//Chebychev window
                //plot the window profile
                subplot(121);plot((1:N)',[whm;wkr;wch]')
                set(gca(),'grid',[1 1]*color('gray'))
                xlabel("n")
                ylabel("w_n")
                title(gettext("Profile plot"))
                //plot the magnitude of the frequency responses
                n=256;
                [Whm,fr]=frmag(whm,n);
                [Wkr,fr]=frmag(wkr,n);
                [Wch,fr]=frmag(wch,n);
                subplot(122);plot(fr',20*log10([Whm;Wkr;Wch]'))
                set(gca(),'grid',[1 1]*color('gray'))
                xlabel(gettext("Pulsation (rad/s)"))
                ylabel(gettext("Magnitude (dB)"))
                legend(["Hamming N=24";"Kaiser N=24, Beta=6";"Chebychev N=24, dp=0.005"]);
                title(gettext("Magnitude plot"))
            </scilab:image>
        </para>
        <programlisting role="example"><![CDATA[
    clf()
    N = 140;
    w1 = window('kr', N, 1);
    w2 = window('kr', N, 2);
    w4 = window('kr', N, 4);
    w8 = window('kr', N, 8);
    w16 = window('kr', N, 16);

    // Plot the window profile
    plot((1:N)', [w1; w2; w4; w8; w16]')
    set(gca(), 'grid', [1 1]*color('gray'))
    legend("$\beta = "+string([1;2;4;8;16])+'$',[55,0.3])
    xlabel("n")
    ylabel("w_n")
    title(gettext("Comparison of Kaiser window profiles"))
    ]]></programlisting>
        <para>
            <scilab:image>
                clf()
                N=140;
                w1=window('kr',N,1);
                w2=window('kr',N,2);
                w4=window('kr',N,4);
                w8=window('kr',N,8);
                w16=window('kr',N,16);
                
                //plot the window profile
                plot((1:N)',[w1;w2;w4;w8;w16]')
                set(gca(),'grid',[1 1]*color('gray'))
                legend("$\beta="+string([1;2;4;8;16])+'$',[55,0.3])
                xlabel("n")
                ylabel("w_n")
                title(gettext("Comparison of Kaiser window profiles"))
            </scilab:image>
        </para>
        <programlisting role="example"><![CDATA[
    clf()
    N = 140;
    w1 = window('ch', N, [0.001 -1]);
    w2 = window('ch', N, [0.05 -1]);
    w3 = window('ch', N, [-1 0.4]);

    // Plot the window profile
    subplot(121);
    plot((1:N)', [w1; w2; w3]')
    set(gca(), 'grid', [1 1]*color('gray'))
    //legend("$\beta = "+string([1;2;4;8;16])+'$',[55,0.3])
    xlabel("n")
    ylabel("w_n")
    title(gettext("Comparison of Chebychev window profiles"))

    // Plot the magnitude of the frequency responses
    n = 256;
    [W1,fr] = frmag(w1, n);
    [W2,fr] = frmag(w2, n);
    [W3,fr] = frmag(w3, n);
    subplot(122);
    plot(fr', 20*log10([W1; W2; W3]'))
    set(gca(), 'grid', [1 1]*color('gray'))
    xlabel(gettext("Pulsation (rad/s)"))
    ylabel(gettext("Magnitude (dB)"))
    legend(["Chebychef dp=0.001"; "Chebychef dp=0.05"; "Chebychef df=0.4"]);
    title(gettext("Chebychev window Magnitude plot"))
    ]]></programlisting>
        <para>
            <scilab:image>
                N=140;
                w1=window('ch',N,[0.001,-1]);
                w2=window('ch',N,[0.05,-1]);
                w3=window('ch',N,[-1,0.4]);
                
                //plot the window profile
                subplot(121);plot((1:N)',[w1;w2;w3]')
                set(gca(),'grid',[1 1]*color('gray'))
                //legend("$\beta="+string([1;2;4;8;16])+'$',[55,0.3])
                xlabel("n")
                ylabel("w_n")
                title(gettext("Comparison of Chebychev window profiles"))
                //plot the magnitude of the frequency responses
                n=256;
                [W1,fr]=frmag(w1,n);
                [W2,fr]=frmag(w2,n);
                [W3,fr]=frmag(w3,n);
                subplot(122);plot(fr',20*log10([W1;W2;W3]'))
                set(gca(),'grid',[1 1]*color('gray'))
                xlabel(gettext("Pulsation (rad/s)"))
                ylabel(gettext("Magnitude (dB)"))
                legend(["Chebychef dp=0.001";"Chebychef dp=0.05";"Chebychef df=0.4"]);
                title(gettext("Chebychev window Magnitude plot"))
            </scilab:image>
            
        </para>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="wfir">wfir</link>
            </member>
            <member>
                <link linkend="frmag">frmag</link>
            </member>
            <member>
                <link linkend="ffilt">ffilt</link>
            </member>
        </simplelist>
    </refsection>
    <refsection>
        <title>Bibliography</title>
        <para>IEEE. Programs for Digital Signal Processing. IEEE Press. New York: John
            Wiley and Sons, 1979. Program 5.2.
        </para>
    </refsection>
</refentry>
