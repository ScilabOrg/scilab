<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - Yann COLLETTE <yann.collette@renault.com>
 * Copyright (C) 2010 - DIGITEO - Michael Baudin
 *
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns4="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="neigh_func_default" xml:lang="en">
    <refnamediv>
        <refname>neigh_func_default</refname>
        <refpurpose>A SA function which computes a neighbor of a given
            point
        </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>
            x_neigh = neigh_func_default(x_current,T)
            x_neigh = neigh_func_default(x_current,T,param)
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>x_current</term>
                <listitem>
                    <para>the point for which we want to compute a neighbor</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>T</term>
                <listitem>
                    <para>the current temperature. This parameter is ignored but is 
                        there to make all the neighbour function consistent.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>param</term>
                <listitem>
                    <para>a two columns vector. The first column correspond to the
                        negative amplitude of variation and the second column corresponds to
                        the positive amplitude of variation of the neighborhood. By default,
                        the first column is a column of -0.1 and the second column is a
                        column of 0.1.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>x_neigh</term>
                <listitem>
                    <para>the computed neighbor</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>This function computes a neighbor of a given point. For example,
            for a continuous vector, a neighbor will be produced by adding some
            noise to each component of the vector. For a binary string, a neighbor
            will be produced by changing one bit from 0 to 1 or from 1 to
            0.
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[ 
function y = rastrigin(x)
  y = x(1)^2+x(2)^2-cos(12*x(1))-cos(18*x(2));
endfunction
    
x0          = [2 2];
Proba_start = 0.7;
It_Pre      = 100;
It_extern   = 100;
It_intern   = 1000;
x_test = neigh_func_default(x0,%nan);

saparams = init_param();
saparams = add_param(saparams,'neigh_func', neigh_func_default);

T0 = compute_initial_temp(x0, rastrigin, Proba_start, It_Pre, saparams);
Log = %T;
[x_opt, f_opt, sa_mean_list, sa_var_list] = optim_sa(x0, rastrigin, It_extern, It_intern, T0, Log,saparams);

mprintf('optimal solution:\n'); disp(x_opt);
mprintf('value of the objective function = %f\n', f_opt);
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="optim_sa"> optim_sa </link>
            </member>
            <member>
                <link linkend="compute_initial_temp"> compute_initial_temp
                </link>
            </member>
            <member>
                <link linkend="temp_law_default"> temp_law_default
                </link>
            </member>
        </simplelist>
    </refsection>
</refentry>
