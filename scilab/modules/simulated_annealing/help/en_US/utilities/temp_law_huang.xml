<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - Yann COLLETTE <yann.collette@renault.com>
 *
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns4="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="temp_law_huang" xml:lang="en">
    <refnamediv>
        <refname>temp_law_huang</refname>
        <refpurpose>The Huang temperature decrease law for the simulated
            annealing
        </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>T_out = temp_law_huang(T_in,step_mean,step_var,temp_stage,n,param)</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>T_in</term>
                <listitem>
                    <para>the temperature at the current stage</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>step_mean</term>
                <listitem>
                    <para>the mean value of the objective function computed during the
                        current stage
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>step_var</term>
                <listitem>
                    <para>the variance value of the objective function computed during
                        the current stage
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>temp_stage</term>
                <listitem>
                    <para>the index of the current temperature stage</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>n</term>
                <listitem>
                    <para>the dimension of the decision variable (the x in f(x))</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>param</term>
                <listitem>
                    <para>a float corresponding to the lambda parameter of the Huang
                        temperature decrease law (0.01 by default)
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>T_out</term>
                <listitem>
                    <para>the temperature for the temperature stage to come</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <itemizedlist>
            <listitem>
                <para>This function implements the Huang temperature decrease law for
                    the simulated annealing.
                </para>
            </listitem>
        </itemizedlist>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[ 
function y = rastrigin(x)
  y = x(1)^2+x(2)^2-cos(12*x(1))-cos(18*x(2));
endfunction

x0 = [-1, -1];
Proba_start = 0.8;
It_intern = 1000;
It_extern = 30;
It_Pre    = 100;

mprintf('SA: the Huang temperature decrease law\n');

T0 = compute_initial_temp(x0, rastrigin, Proba_start, It_Pre, neigh_func_default);
mprintf('Initial temperatore T0 = %f\n', T0);

[x_opt, f_opt, sa_mean_list, sa_var_list, temp_list] = optim_sa(x0, rastrigin, It_extern, It_intern, T0, Log = %T, temp_law_huang, neigh_func_default);

mprintf('optimal solution:\n'); disp(x_opt);
mprintf('value of the objective function = %f\n', f_opt);

scf();
subplot(2,1,1);
xtitle('Huang simulated annealing','Iteration','Mean / Variance');
t = 1:length(sa_mean_list);
plot(t,sa_mean_list,'r',t,sa_var_list,'g');
legend(['Mean','Variance']);
subplot(2,1,2);
xtitle('Temperature evolution','Iteration','Temperature');
plot(t,temp_list,'k-');
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="optim_sa"> optim_sa </link>
            </member>
            <member>
                <link linkend="temp_law_csa"> temp_law_csa </link>
            </member>
            <member>
                <link linkend="neigh_func_csa"> neigh_func_csa </link>
            </member>
        </simplelist>
    </refsection>
</refentry>
