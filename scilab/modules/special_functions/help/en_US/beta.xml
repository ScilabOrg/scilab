<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 *
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns4="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org"  xml:id="beta" xml:lang="en">
    <refnamediv>
        <refname>beta</refname>
        <refpurpose>beta function (Euler integral of the first kind)</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>z = beta(x,y)</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>x, y</term>
                <listitem>
                    <para>
                        2 positive real scalars, vectors or matricesof equal sizes.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>z</term>
                <listitem>
                    <para>
                        a real or a matrix of the same size than <literal>x</literal>
                        with <literal>z(i,j) = beta(x(i,j),y(i,j))</literal>.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>Computes the complete beta function :</para>
        <informalequation>
            <mediaobject>
                <imageobject>
                    <imagedata align="center" fileref="../mml/beta_equation1.mml"/>
                </imageobject>
            </mediaobject>
        </informalequation>
        <para>
            For small <literal>x</literal> and <literal>y</literal> (<literal>x+y&#8804;2</literal> elementwise),
            the algorithm uses the expression in function of the gamma function, else it
            applies the exponential function onto the result of the
            <literal>betaln</literal> function provided with the DCDFLIB: Library of
            Fortran Routines for Cumulative Distribution Functions, Inverses, and
            Other Parameter (see <link linkend="cdfbet">cdfbet</link> for more
            information about DCDFLIB).
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[
// example 1 :
beta(5,2) - beta(2,5)   // symmetry (must be exactly 0)
beta(0.5,0.5)           // exact value is pi
 ]]></programlisting>
        <programlisting role="example"><![CDATA[
// example 2 : an error study based on the relation  B(1,x) = 1/x
// (computing 1/x must lead to only a relative error of eps_m, so
//  it may be used near as a reference to evaluate the error in B(1,x))
x = logspace(-8,8,20000)';
e = beta(ones(x),x) - (1)./x;
er = abs(e) .* x;
ind = find(er ~= 0);
eps = ones(x(ind))*number_properties("eps");
clf()
plot2d(x(ind),[er(ind) eps 2*eps],style=[1 2 3],logflag="ll",leg="er@eps_m@2 eps_m")
xtitle("approximate relative error in computing beta(1,x)")
show_window()
 ]]></programlisting>
        <scilab:image>
            x = logspace(-8,8,20000)';
            e = beta(ones(x),x) - (1)./x;
            er = abs(e) .* x;
            ind = find(er ~= 0);
            eps = ones(x(ind))*number_properties("eps");
            plot2d(x(ind),[er(ind) eps 2*eps],style=[1 2 3],logflag="ll",leg="er@eps_m@2 eps_m")
            xtitle("approximate relative error in computing beta(1,x)")
        </scilab:image>
        <programlisting role="example"><![CDATA[
// example 3 : plotting the beta function
t = linspace(0.2,10,60);
X = t'*ones(t); Y = ones(t')*t;
Z = beta(X,Y);
clf()
plot3d(t, t, Z, flag=[2 4 4], leg="x@y@z", alpha=75, theta=30)
xtitle("The beta function on [0.2,10]x[0.2,10]")
show_window()
 ]]></programlisting>
        <scilab:image>
            t = linspace(0.2,10,60);
            X = t'*ones(t); Y = ones(t')*t;
            Z = beta(X,Y);
            clf()
            plot3d(t, t, Z, flag=[2 4 4], leg="x@y@z", alpha=75, theta=30)
            xtitle("The beta function on [0.2,10]x[0.2,10]")
        </scilab:image>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="gamma">gamma</link>
            </member>
            <member>
                <link linkend="cdfbet">cdfbet</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
