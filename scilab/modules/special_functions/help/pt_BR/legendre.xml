<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns3="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="legendre" xml:lang="en">
    <refnamediv>
        <refname>legendre</refname>
        <refpurpose>funções associadas de Legendre</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Seqüência de Chamamento</title>
        <synopsis>y = legendre(n,m,x [,normflag])</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Parâmetros</title>
        <variablelist>
            <varlistentry>
                <term>n</term>
                <listitem>
                    <para>inteiro não-negativo ou vetor de inteiros não-negativos
                        igualmente espaçados com incremento igual a 1 
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>m</term>
                <listitem>
                    <para>inteiro não-negativo ou vetor de inteiros não-negativos
                        igualmente espaçados com incremento igual a 1 
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>x</term>
                <listitem>
                    <para>
                        vetor (linha) de reais (os elementos de <literal>x</literal>
                        devem estar no intervalo <literal>(-1,1)</literal> )
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>normflag</term>
                <listitem>
                    <para>(opcional) escalar string </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Descrição</title>
        <para>
            Quando <literal>n</literal> e <literal>m</literal> são escalares,
            <literal>legendre(n,m,x)</literal> avalia a função de Legendre associada
            Pnm(x) em todos os elementos de <literal>x</literal>. A definição usada é
            : 
        </para>
        <programlisting role=""><![CDATA[ 
                            m
             m        m/2  d  
Pnm(x) = (-1)  (1-x^2)    --- Pn(x)
                            m  
                          dx 
 ]]></programlisting>
        <para>
            onde <literal>Pn</literal> é o polinômio de Legendre de grau
            <literal>n</literal>. Então, <literal>legendre(n,0,x)</literal> avalia o
            polinômio de Legendre Pn(x) em todos os elementos de
            <literal>x</literal>.
        </para>
        <para>Quando normflag é igual a "norm" o resultado é uma versão
            normalizada (sem o fator <literal>(-1)^m</literal> ), precisamente :
        </para>
        <programlisting role=""><![CDATA[ 
                   _____________                m
                  /(2n+1)(n-m)!          m/2   d
Pnm(x,"norm") =  /--------------  (1-x^2)     --- Pn(x)
               \/     2  (n+m)!                 m
                                              dx 
 ]]></programlisting>
        <para>que é útil para computar funções harmônicas esféricas (ver exemplo
            3): 
        </para>
        <para>Por eficiência, um dos primeiros dois argumentos pode ser um vetor,
            por exemplo <literal>legendre(n1:n2,0,x)</literal> avalia todos os
            polinômios de Legendre de graus <emphasis>n1, n1+1, ..., n2</emphasis> nos
            elementos de <literal>x</literal> e <literal>legendre(n,m1:m2,x)</literal>
            avalia todas as funções de Legendre associadas Pnm para <emphasis>m=m1,
                m1+1, ..., m2
            </emphasis>
            em <literal>x</literal>.
        </para>
    </refsection>
    <refsection>
        <title>Formato de Saída </title>
        <para>
            Em qualquer caso, o formato é <literal>y</literal> :
        </para>
        <programlisting role=""><![CDATA[ 
max(length(n),length(m)) x length(x)
 ]]></programlisting>
        <para>e :</para>
        <programlisting role=""><![CDATA[ 
y(i,j) = P(n(i),m;x(j))   se n é um vetor
y(i,j) = P(n,m(i);x(j))   se m é um vetor
y(1,j) = P(n,m;x(j))      se ambos n e m são escalares
 ]]></programlisting>
        <para>
            de tal modo que <literal>x</literal> é preferivelmente um vetor
            linha, mas qualquer matriz <literal>mx x nx</literal> é excetuada e
            considerada como uma matriz <literal>1 x (mx * nx)</literal> matrix,
            reformada segundo a ordem das colunas. 
        </para>
    </refsection>
    <refsection>
        <title>Exemplos</title>
        <programlisting role="example"><![CDATA[ 
// exemplo 1 : plot dos primeiros 6 polinômios de Legendre em (-1,1)
l = nearfloat("pred",1);
x = linspace(-l,l,200)';
y = legendre(0:5, 0,  x);
clf()
plot2d(x,y', leg="p0@p1@p2@p3@p4@p5@p6")
xtitle("Os 6 primeiros polinômios de Legendre")

// exemplo 2 : plot das funções associadas de Legendre de grau 5 
l = nearfloat("pred",1);
x = linspace(-l,l,200)';
y = legendre(5, 0:5, x, "norm");
clf()
plot2d(x,y', leg="p5,0@p5,1@p5,2@p5,3@p5,4@p5,5")
xtitle("As funções associadas de Legendre (normalizadas) de grau 5")

// exemplo 3 : definindo e plotando uma função harmônica esférica
// 3-1 : definindo a função Ylm
function [y] = Y(l,m,theta,phi)
  // teta pode ser um escalar ou um vetor linha
  // phi pode ser um escalar ou um vetor coluna
  if m >= 0 then
     y = (-1)^m/(sqrt(2*%pi))*exp(%i*m*phi)*legendre(l, m, cos(theta), "norm")
  else
     y = 1/(sqrt(2*%pi))*exp(%i*m*phi)*legendre(l, -m, cos(theta), "norm")
  end      
endfunction

// 3.2 : definindo outra função útil
function [x,y,z] = sph2cart(theta,phi,r)
  // vetor linha teta      1 x nt
  // vetor coluna phi  np x 1
  // r     escalar ou matriz np x nt (r(i,j) o comprimento em phi(i) theta(j)) 
  x = r.*(cos(phi)*sin(theta));
  y = r.*(sin(phi)*sin(theta));
  z = r.*(ones(phi)*cos(theta));
endfunction

// 3-3 plot de Y31(theta,phi)
l = 3; m = 1;
theta = linspace(0.1,%pi-0.1,60);
phi = linspace(0,2*%pi,120)';
f = Y(l,m,theta,phi);
[x1,y1,z1] = sph2cart(theta,phi,abs(f));       [xf1,yf1,zf1] = nf3d(x1,y1,z1);
[x2,y2,z2] = sph2cart(theta,phi,abs(real(f))); [xf2,yf2,zf2] = nf3d(x2,y2,z2);
[x3,y3,z3] = sph2cart(theta,phi,abs(imag(f))); [xf3,yf3,zf3] = nf3d(x3,y3,z3);

clf()
subplot(1,3,1)
plot3d(xf1,yf1,zf1,flag=[2 4 4]); xtitle("|Y31(theta,phi)|")
subplot(1,3,2)
plot3d(xf2,yf2,zf2,flag=[2 4 4]); xtitle("|Real(Y31(theta,phi))|")
subplot(1,3,3)
plot3d(xf3,yf3,zf3,flag=[2 4 4]); xtitle("|Imag(Y31(theta,phi))|")
 ]]></programlisting>
    </refsection>
    <refsection>
        <title>Autores</title>
        <simplelist type="vert">
            <member>Smith, John M. (código dxlegf.f de Slatec) </member>
            <member>B. Pincon (interface Scilab)</member>
        </simplelist>
    </refsection>
</refentry>
