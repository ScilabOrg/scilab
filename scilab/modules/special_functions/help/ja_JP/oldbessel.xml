<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns4="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="oldbessel" xml:lang="ja">
    <refnamediv xml:id="oldbesseli">
        <refname>oldbesseli</refname>
        <refpurpose>第1種の修正ベッセル関数 (I_alpha).</refpurpose>
    </refnamediv>
    <refnamediv xml:id="oldbesselj">
        <refname>oldbesselj</refname>
        <refpurpose>第1種のベッセル関数 (J_alpha).</refpurpose>
    </refnamediv>
    <refnamediv xml:id="oldbesselk">
        <refname>oldbesselk</refname>
        <refpurpose>第2種の修正ベッセル関数 (K_alpha).</refpurpose>
    </refnamediv>
    <refnamediv xml:id="oldbessely">
        <refname>oldbessely</refname>
        <refpurpose>第2種のベッセル関数 (Y_alpha).</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>呼び出し手順</title>
        <synopsis>y = oldbesseli(alpha,x)
            y = oldbesseli(alpha,x,ice)
            y = oldbesselj(alpha,x)
            y = oldbesselk(alpha,x)
            y = oldbesselk(alpha,x,ice)
            y = oldbessely(alpha,x)
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>パラメータ</title>
        <variablelist>
            <varlistentry>
                <term>x</term>
                <listitem>
                    <para>real vector with non negative entries</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>alpha</term>
                <listitem>
                    <para>real vector with non negative entries regularly spaced with
                        increment equal to one
                        <literal>alpha=alpha0+(n1:n2)</literal>
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>ice</term>
                <listitem>
                    <para>integer flag, with default value 1</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>説明</title>
        <para>これらの関数は古い関数であり,
            <link linkend="besseli">besseli</link>, <link linkend="besselj">besselj</link>,
            <link linkend="besselk">besselk</link>, <link linkend="bessely">bessely</link> を代わりに使用してください. 
            しかし,これらの2組の関数の構文は異なっていることに注意してください.
        </para>
        <para>
            <literal>oldbesseli(alpha,x)</literal> computes modified Bessel
            functions of the first kind (I sub alpha), for real, non-negative order
            <literal>alpha</literal> and real non negative argument
            <literal>x</literal>. <literal>besseli(alpha,x,2)</literal> computes
            <literal>besseli(alpha,x).*exp(-x)</literal>.
        </para>
        <para>
            <literal>oldbesselj(alpha,x)</literal> computes Bessel functions of
            the first kind (J sub alpha), for real, non-negative order
            <literal>alpha</literal> and real non negative argument
            <literal>x</literal>.
        </para>
        <para>
            <literal>oldbesselk(alpha,x)</literal> computes modified Bessel
            functions of the second kind (K sub alpha), for real, non-negative order
            <literal>alpha</literal> and real non negative argument
            <literal>x</literal>. <literal>besselk(alpha,x,2)</literal> computes
            <literal>besselk(alpha,x).*exp(x)</literal>.
        </para>
        <para>
            <literal>oldbessely(alpha,x)</literal> computes Bessel functions of
            the second kind (Y sub alpha), for real, non-negative order
            <literal>alpha</literal> and real non negative argument
            <literal>x</literal>.
        </para>
        <para>
            <literal>alpha</literal> and <literal>x</literal> may be vectors.
            The output is <literal>m</literal>-by-<literal>n</literal> with <literal>m
                = size(x,'*')
            </literal>
            ,<literal>n = size(alpha,'*')</literal> whose
            <literal>(i,j)</literal> entry is
            <literal>oldbessel?(alpha(j),x(i))</literal>.
        </para>
    </refsection>
    <refsection>
        <title>Remarks</title>
        <para>Y_alpha and J_alpha Bessel functions are 2 independant solutions of
            the Bessel 's differential equation :
        </para>
        <informalequation>
            <mediaobject>
                <imageobject>
                    <imagedata align="center" fileref="../mml/bessel_equation1.mml"/>
                </imageobject>
            </mediaobject>
        </informalequation>
        <para>K_alpha and I_alpha modified Bessel functions are 2 independant
            solutions of the modified Bessel 's differential equation :
        </para>
        <informalequation>
            <mediaobject>
                <imageobject>
                    <imagedata align="center" fileref="../mml/bessel_equation2.mml"/>
                </imageobject>
            </mediaobject>
        </informalequation>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[ 
// example #1: display some I Bessel functions
x = linspace(0.01,10,5000)';
y = oldbesseli(0:4,x);
ys = oldbesseli(0:4,x,2);
clf()
subplot(2,1,1)
plot2d(x,y, style=2:6, leg="I0@I1@I2@I3@I4", rect=[0,0,6,10])
xtitle("Some modified Bessel functions of the first kind")
subplot(2,1,2)
plot2d(x,ys, style=2:6, leg="I0s@I1s@I2s@I3s@I4s", rect=[0,0,6,1])
xtitle("Some modified scaled Bessel functions of the first kind")
// example #2 : display some J Bessel functions
x = linspace(0,40,5000)';
y = besselj(0:4,x);
clf()
plot2d(x,y, style=2:6, leg="J0@J1@J2@J3@J4")
xtitle("Some Bessel functions of the first kind")
// example #3 : use the fact that J_(1/2)(x) = sqrt(2/(x pi)) sin(x)
//              to compare the algorithm of besselj(0.5,x) with
//              a more direct formula 
x = linspace(0.1,40,5000)';
y1 = besselj(0.5, x);
y2 = sqrt(2 ./(%pi*x)).*sin(x);
er = abs((y1-y2)./y2);
ind = find(er &gt; 0 &amp; y2 ~= 0);
clf()
subplot(2,1,1)
plot2d(x,y1,style=2)
xtitle("besselj(0.5,x)")
subplot(2,1,2)
plot2d(x(ind), er(ind), style=2, logflag="nl")
xtitle("relative error between 2 formulae for besselj(0.5,x)") 
// example #4: display some K Bessel functions
x = linspace(0.01,10,5000)';
y = besselk(0:4,x);
ys = besselk(0:4,x,1);
clf()
subplot(2,1,1)
plot2d(x,y, style=0:4, leg="K0@K1@K2@K3@K4", rect=[0,0,6,10])
xtitle("Some modified Bessel functions of the second kind")
subplot(2,1,2)
plot2d(x,ys, style=0:4, leg="K0s@K1s@K2s@K3s@K4s", rect=[0,0,6,10])
xtitle("Some modified scaled Bessel functions of the second kind")
// example #5: plot severals Y Bessel functions
x = linspace(0.1,40,5000)'; // Y Bessel functions are unbounded  for x -> 0+
y = bessely(0:4,x);
clf()
plot2d(x,y, style=0:4, leg="Y0@Y1@Y2@Y3@Y4", rect=[0,-1.5,40,0.6])
xtitle("Some Bessel functions of the second kind")
 ]]></programlisting>
    </refsection>
</refentry>
