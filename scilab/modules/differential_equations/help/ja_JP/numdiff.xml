<?xml version="1.0" encoding="UTF-8"?>

<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->

<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:id="numdiff" xml:lang="ja">
    
    <refnamediv>
        
        <refname>numdiff</refname>
        
        <refpurpose>
            
            ある点における数値的な傾きの推定.
            
            <emphasis role="bold"> この関数は廃止されます. 
                
                <link linkend="numderivative">numderivative</link> 関数を代わりに
                
                使用してください.
                
            </emphasis>
            
        </refpurpose>
        
    </refnamediv>
    
    <refsynopsisdiv>
        
        <title>呼び出し手順</title>
        
        <synopsis>g = numdiff(fun, x [,dx])</synopsis>
        
    </refsynopsisdiv>
    
    <refsection>
        
        <title>引数</title>
        
        <variablelist>
            
            <varlistentry>
                
                <term>fun</term>
                
                <listitem>
                    
                    <para>
                        
                        外部, Scilab 関数またはリスト. 呼び出し手順については,
                        
                        以下を参照ください. また,外部関数に関する詳細については,
                        
                        <link linkend="external">external</link>を参照ください.
                        
                        f: R<superscript>n</superscript> --> R<superscript>p</superscript>
                        
                    </para>
                    
                </listitem>
                
            </varlistentry>
            
            <varlistentry>
                
                <term>x</term>
                
                <listitem>
                    
                    <para>
                        
                        傾きを探す点の <code>n</code> 座標のベクトル
                        
                    </para>
                    
                </listitem>
                
            </varlistentry>
            
            <varlistentry>
                
                <term>dx</term>
                
                <listitem>
                    
                    <para>
                        
                        ベクトル, 有限差分ステップ. デフォルト値は
                        
                        <literal>dx = sqrt(%eps)*(1+1d-3*abs(x))</literal>です.
                        
                    </para>
                    
                </listitem>
                
            </varlistentry>
            
            <varlistentry>
                
                <term>g</term>
                
                <listitem>
                    
                    <para>
                        
                        行列, 軌跡<varname>x</varname>における傾きの推定値
                        
                    </para>
                    
                </listitem>
                
            </varlistentry>
            
        </variablelist>
        
    </refsection>
    
    <refsection>
        
        <title>説明</title>
        
        <para>
            
            R<superscript>n</superscript> から R<superscript>p</superscript>まで
            
            関数 <literal>fun(x)</literal>を指定すると, 有限差分法により
            
            以下のような <code>p x n</code> 行列 <varname>g</varname>を計算します.
            
        </para>
        
        <programlisting role="no-scilab-exec">
            
            <![CDATA[
         g(i,j) = [(df_i)/(dx_j)](x)
         ]]>
            
        </programlisting>
        
        <para>
            
            1次の式を使用します.
            
        </para>
        
        <para>
            
            パラメータがない場合, 関数<varname>fun</varname>の呼び出し手順は,
            
            <varname>x</varname> &#8712; R<superscript>n</superscript> 
            
            および <varname>y</varname> &#8712; R<superscript>p</superscript>として,
            
            <code>y = fun(x)</code> となります.
            
            <function>numdiff</function> は,
            
            <code>g = numdiff(fun, x)</code>のようにコールできます.
            
            これ以外の場合,関数<varname>fun</varname>の呼び出し手順は,
            
            <literal>y = fun(x, param_1, pararm_2, ..., param_q)</literal>
            
            となります.
            
            パラメータ<literal>param_1, param_2, ..., param_q</literal>が存在する場合,
            
            <function>numdiff</function> は以下のようにコールすることができます
            
            <literal>g = numdiff(list(fun, param_1, param_2, ..., param_q), x)</literal>.
            
        </para>
        
        <para>
            
            数値精度,2つのアルゴリズムの比較については,
            
            <link linkend="derivative">微分</link>を参照ください.
            
        </para>
        
    </refsection>
    
    <refsection>
        
        <title>例</title>
        
        <programlisting role="example">
            
            <![CDATA[
         // 例1 (パラメータなし)
         // myfun は R^2 から R への関数:   (x(1),x(2)) |--> myfun(x)
         function f = myfun(x)
         f = x(1)*x(1) + x(1)*x(2)
         endfunction
         x = [5 8];
         g = numdiff(myfun, x)
         // 正確な傾き (すなわち,最初の要素x(1)に関する微分および二番目の要素x(2)に関する
         // 微分はexact=[2*x(1)+x(2)  x(1)]となります.
         exact = [2*x(1)+x(2)  x(1)]
         // 例2 (パラメータあり)
         // myfun はRからRへの関数:  x(1) |--> myfun(x) 
         // myfun は3個のパラメータ a, b, cを有します
         function  f = myfun(x, a, b, c)
         f = (x+a)^c + b
         endfunction
         a = 3; b = 4; c = 2;
         x = 1;
         g2 = numdiff(list(myfun, a, b, c), x)
         // 正しい傾き, すなわち,x(1)に関する微分は以下のようになります:
         exact2 = c*(x+a)^(c-1)
         // 例3 (f: R^3 --> R^3)
         // myfunはR^2からR^2への関数: (x(1), x(2), x(3)) |--> (myfun(x)(1), myfun(x)(2), mfun(x)(3))
         function f = myfun(x)
         f(1) = x(1) * x(1);
         f(2) = x(1) * x(2) * x(3);
         f(3) = 2*x(1) + 2*x(2) + 2*x(3);
         endfunction
         x = [5 8 10];
         g = numdiff(myfun, x)
         // 正確な傾斜は以下となります:
         // [  df_1/dx_1  df_1/dx_2  df_1/dx_3 ;
         //    df_2/dx_1  df_2/dx_2  df_2/dx_3 ;
         //    df_3/dx_1  df_3/dx_2  df_3/dx_3 ; ]
         exact3 = [2*x(1) 0 0  ;  x(2)*x(3) x(1)*x(3) x(1)*x(2)  ;  2 2 2]
         ]]>
            
        </programlisting>
        
    </refsection>
    
    <refsection role="see also">
        
        <title>参照</title>
        
        <simplelist type="inline">
            
            <member>
                
                <link linkend="interp">interp</link>
                
            </member>
            
            <member>
                
                <link linkend="interp2d">interp2d</link>
                
            </member>
            
            <member>
                
                <link linkend="splin">splin</link>
                
            </member>
            
            <member>
                
                <link linkend="eval_cshep2d">eval_cshep2d</link>
                
            </member>
            
            <member>
                
                <link linkend="optim">optim</link>
                
            </member>
            
            <member>
                
                <link linkend="diff">diff</link>
                
            </member>
            
            <member>
                
                <link linkend="derivative">derivative</link>
                
            </member>
            
            <member>
                
                <link linkend="numderivative">numderivative</link>
                
            </member>
            
            <member>
                
                <link linkend="external">external</link>
                
            </member>
            
        </simplelist>
        
    </refsection>
    
    <refsection>
        
        <title>履歴</title>
        
        <revhistory>
            
            <revision>
                
                <revnumber>5.5.0</revnumber>
                
                <revremark>廃止予定となりました. 
                    
                    Scilab 6.0.0で削除されます.
                    
                </revremark>
                
            </revision>
            
        </revhistory>
        
    </refsection>
    
    <refsection>
        
        <title>付録</title>
        
        <para>
            
            我々は,<literal>numdiff</literal>関数を使用する	
            
            <literal>numderivative</literal>関数を使うように更新できる方法について
            
            議論しています.
            
        </para>
        
        <para>
            
            以下の関数について考えてみましょう:
            
        </para>
        
        <programlisting role="example">
            
            <![CDATA[
         function f = myfun(x)
         f = x(1)*x(1)+x(1)*x(2)
         endfunction
         ]]>
            
        </programlisting>
        
        <para>
            
            および点:
            
        </para>
        
        <programlisting role="example">
            
            <![CDATA[
         x = [5 8]
         ]]>
            
        </programlisting>
        
        <para>
            
            ここで, 命令:
            
        </para>
        
        <programlisting role="example">
            
            <![CDATA[
         g1 = numdiff(myfun, x)
         ]]>
            
        </programlisting>
        
        <para>
            
            は以下で置換できます
            
        </para>
        
        <programlisting role="example">
            
            <![CDATA[
         g2 = numderivative(myfun, x)
         ]]>
            
        </programlisting>
        
        <para>
            
            正確に同じステップを使用することが重要です,
            
            <literal>numdiff</literal>と値が同じステップを使用します:
            
        </para>
        
        <programlisting role="example">
            
            <![CDATA[
         x = [5 8];
         h = sqrt(%eps)*(1+1d-3*abs(x))
         g1 = numdiff(myfun, x)
         g2 = numderivative(myfun, x, h)
         g1 == g2
         ]]>
            
        </programlisting>
        
    </refsection>
    
</refentry>

