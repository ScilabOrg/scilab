<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * ...
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry version="5.0-subset Scilab" xml:id="intg" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns5="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:db="http://docbook.org/ns/docbook">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>

  <refnamediv>
    <refname>intg</refname>

    <refpurpose>definite integral</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>Calling Sequence</title>

    <synopsis>[v,err]=intg(a,b,f [,ea [,er])</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Arguments</title>

    <variablelist>
      <varlistentry>
        <term>a,b</term>

        <listitem>
          <para>real numbers</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>f</term>

        <listitem>
          <para>external (function or list or string)</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>ea, er</term>

        <listitem>
          <para>real numbers</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>ea</term>

        <listitem>
          <para>absolute error required on the result. Default value:
          1.d-14</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>er</term>

        <listitem>
          <para>relative error required on the result. Default value:
          1.d-8</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>err</term>

        <listitem>
          <para>estimated absolute error on the result.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>

  <refsection>
    <title>Description</title>

    <para><literal>intg(a,b,f)</literal> evaluates the definite integral from
    <literal>a</literal> to <literal>b</literal> of <literal>f(t)dt</literal>.
    The function <literal>f(t)</literal> should be continuous.</para>

    <para>The evaluation hopefully satisfies following claim for accuracy:
    <literal>abs(I-v)&lt;= max(ea,er*abs(I))</literal> where I stands for the
    exact value of the integral.</para>

    <para><literal>f</literal> is an external :</para>

    <para>If <literal>f</literal> is function its definition must be as
    follows <literal> y = f(t) </literal></para>

    <para>If <literal>f</literal> is a list the list must be as follows:
    <literal> list(f,x1,x2,...)</literal> where <literal>f</literal> is a
    function with calling sequence <literal>f(t,x1,x2,...)</literal>.</para>

    <para>If <literal>f</literal> is a string it refers to a the name of a
    Fortran function or a C prodedure with a given calling sequence:</para>

    <para>In the fortran case the calling sequence should be <literal>double
    precision function f(x)</literal> where <literal>x</literal> is also a
    double precision number.</para>

    <para>In the C case the calling sequence should be <literal>double
    f(double *x)</literal>.</para>
  </refsection>

  <refsection>
    <title>Examples</title>

    <programlisting role="example"><![CDATA[ 
//External écrit en Scilab
function y=f(x),y=x*sin(30*x)/sqrt(1-((x/(2*%pi))^2)),endfunction
exact=-2.5432596188;
I=intg(0,2*%pi,f)
abs(exact-I)

//External écrit en Scilab avec un argument
function y=f1(x,w),y=x*sin(w*x)/sqrt(1-((x/(2*%pi))^2)),endfunction
I=intg(0,2*%pi,list(f1,30))
abs(exact-I)


// External écrit en Fortran (un compilateur Fortran est nécessaire)
// Ecriture du code fortran
cd TMPDIR;
F=['      double precision function ffun(x)'
   '      double precision x,pi'
   '      pi=3.14159265358979312d+0'
   '      ffun=x*sin(30.0d+0*x)/sqrt(1.0d+0-(x/(2.0d+0*pi))**2)'
   '      return'
   '      end'];
mputl(F,TMPDIR+'/ffun.f')

// compilation du code Fortran
l=ilib_for_link('ffun','ffun.f',[],'f');

// link incrémental
link(l,'ffun','f')

// integration de la fonction
I=intg(0,2*%pi,'ffun')
abs(exact-I)

// External écrit en C (un compilateur C est nécessaire)
// Ecriture du code C
C=['#include <math.h>'
   'double cfun(double *x)'
   '{'
   '  double y,pi=3.14159265358979312;'
   '  y=*x/(2.0e0*pi);'
   '  return *x*sin(30.0e0**x)/sqrt(1.0e0-y*y);'
   '}'];
mputl(C,TMPDIR+'/cfun.c')

// compilation du code C
l=ilib_for_link('cfun','cfun.f',[],'c');

// incremental linking
link(l,'cfun','c')

// integration de la fonction
I=intg(0,2*%pi,'cfun')
abs(exact-I)
 ]]></programlisting>
  </refsection>

  <refsection>
    <title>See Also</title>

    <simplelist type="inline">
      <member><link linkend="intc">intc</link></member>

      <member><link linkend="intl">intl</link></member>

      <member><link linkend="inttrap">inttrap</link></member>

      <member><link linkend="intsplin">intsplin</link></member>

      <member><link linkend="ode">ode</link></member>
    </simplelist>
  </refsection>

  <refsection>
    <title>Used Functions</title>

    <para>The associated routines can be found in SCI/modules/differential_equations/src/fortran directory
    :</para>

    <para>dqag0.f and dqags.f from quadpack</para>
  </refsection>
</refentry>
