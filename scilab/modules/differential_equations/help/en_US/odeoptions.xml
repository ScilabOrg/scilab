<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * ...
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry version="5.0-subset Scilab" xml:id="odeoptions" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns5="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:db="http://docbook.org/ns/docbook">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>

  <refnamediv>
    <refname>odeoptions</refname>
    <refpurpose>set options for ode solvers</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>Calling Sequence</title>

    <synopsis>odeoptions()</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Description</title>

    <para>This function interactively displays a command which should be
    executed to set various options of ode solvers. The context variable
    <literal>%ODEOPTIONS</literal> sets the options.</para>

    <para>CAUTION: the <literal>ode</literal> function checks if this variable
    exists and in this case it uses it. For using default values you should
    clear this variable. Note that <literal>odeoptions</literal> does not
    create this variable. To create it you must execute the command line
    displayed by <literal>odeoptions</literal>.</para>

    <para>The variable <literal>%ODEOPTIONS</literal> is a vector with the
    following elements:

    <literal>[itask, tcrit, h0, hmax, hmin, jactyp, mxstep, maxordn, maxords, ixpr, ml, mu]</literal></para>
    <para>The default value is:<literal>[1,0,0,%inf,0,2,500,12,5,0,-1,-1]</literal>

    <para>The meaning of the elements is described below.</para>
    <itemizedlist>
      <item><literal>itask</literal> set the integration mode:
      <itemizedlist>
        <item>1 : normal computation at specified times </item>
        <item>2 : computation at mesh points (given in first row of output of
        <literal>ode</literal>)</item>
        <item>3 : one step at one internal mesh point and return</item>
        <item>4 : normal computation without overshooting <literal>tcrit</literal></item>
        <item>5 :    one step, without passing <literal>tcrit</literal>, and return</item>
      </itemizedlist>
      </item>
      <item><literal>tcrit</literal> critical time used only if  <literal>itask</literal> equals 4
      or 5 as described above
       </item>
       <item><literal>h0</literal> first step tried</item>
       <item><literal>hmax</literal> max step size</item>
       <item><literal>hmin</literal> min step size</item>
       <item><literal>jactype</literal> set jacobian properties:
       <itemizedlist>
         <item>0 : functional iterations, no jacobian used
         (<literal>"adams"</literal> or <literal>"stiff"</literal>
         only) </item>
         <item>1 : user-supplied full jacobian </item>
         <item>2 : internally generated full jacobian </item> 
         <item>3: internally generated diagonal jacobian
         (<literal>"adams"</literal> or <literal>"stiff"</literal>
         only) </item> 
         <item>4 : user-supplied banded jacobian (see
         <literal>ml</literal> and <literal>mu</literal> below)</item>
         <item>5 : internally generated banded jacobian
         (<literal>see</literal> ml and <literal>mu</literal>
         below)</item>
       </itemizedlist>
       </item>
       <item><literal>maxordn</literal> maximum non-stiff order
       allowed, at most 12</item>
       <item><literal>maxords</literal> maximum stiff order allowed,
       at most 5</item>
       <item><literal>ixpr</literal> print level, 0 or 1</item>
       <item> <literal>ml</literal>,<literal>mu</literal> <para> If
       <literal>jactype</literal> equals 4 or 5, <literal>ml</literal>
       and <literal>mu</literal> are the lower and upper
       half-bandwidths of the banded jacobian: the band is the i,j's
       with i-ml &lt;= j &lt;= ny-1. </para>

       <para>If <literal>jactype</literal> equals 4 the jacobian
       function must return a matrix J which is ml+mu+1 x ny (where
       ny=dim of y in ydot=f(t,y)) such that column 1 of J is made of
       mu zeros followed by df1/dy1, df2/dy1, df3/dy1, ... (1+ml
       possibly non-zero entries) column 2 is made of mu-1 zeros
       followed by df1/dx2, df2/dx2, etc</para>
       </item>

    </itemizedlist>
  </refsection>
  <refsection>
    <title>Examples</title>
    <para>
      In the following example, we solve the Ordinary Differential Equation
      <literal>dy/dt=y^2-y sin(t)+cos(t)</literal> with the initial
      condition <literal>y(0)=0</literal> claiming the solution be stored at each mesh value.
    </para>
    <programlisting role="example"><![CDATA[ 
function ydot=f(t,y)
	ydot=y^2-y*sin(t)+cos(t)
endfunction
%ODEOPTIONS=[2,0,0,%inf,0,2,500,12,5,0,-1,-1];
y=ode(0,0,%pi,f);
plot(y(1,:),y(2,:))
clear %ODEOPTIONS
 ]]></programlisting>
 </refsection>
  <refsection role="see also">
<title>See Also</title>

    <simplelist type="inline">
      <member><link linkend="ode">ode</link></member>
    </simplelist>
  </refsection>
</refentry>
