<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:lang="en" xml:id="umf_luinfo">
    <refnamediv>
        <refname>umf_luinfo </refname>
        <refpurpose>get information on LU factors  </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>[OK, nrow, ncol, lnz, unz, udiag_nz, it] = umf_luinfo(LU_ptr)</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>LU_ptr  </term>
                <listitem>
                    <para>a pointer to umf lu factors (L,U,p,q, R)</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>OK  </term>
                <listitem>
                    <para>a scalar boolean</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>nrow, ncol, lnz, unz, udiag_nz, it</term>
                <listitem>
                    <para>scalars (integers)</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            This function may be used to know basic information about 
            LU factors created with umf_lufact :
        </para>
        <para>
            first <literal>OK</literal> is %t if <literal>LU_ptr</literal> is a valid pointer to an umfpack 
            LU numeric handle (and %f else)
        </para>
        <para>
            if <literal>OK</literal> is %t then: 
        </para>
        <variablelist>
            <varlistentry>
                <term>nrow, ncol</term>
                <listitem>
                    <para>
                        are the matrix size (L is <literal>nrow x n</literal> and U is  <literal>n x ncol</literal>
                        where <literal>n = min(nrow,ncol)</literal>
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>lnz, unz</term>
                <listitem>
                    <para>are the number of non zeros elements in L and in U;
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>udiag_nz</term>
                <listitem>
                    <para>are the number of non zeros elements on the diagonal of U; if the matrix
                        is square (<literal>nrow = ncol = n)</literal> then it is not inversible if 
                        udiag_nz &lt; n (more precisely it appears to be numericaly not
                        inversible through the LU factorization).
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>it</term>
                <listitem>
                    <para>0 if the factors are real and 1 if they are complex.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
        <para>
            if OK is %f then all the others outputs are set to the empty matrix [].
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[ 
// this is the test matrix from UMFPACK
A = sparse( [ 2  3  0  0  0;
              3  0  4  0  6; 
              0 -1 -3  2  0; 
              0  0  1  0  0; 
              0  4  2  0  1] );
Lup = umf_lufact(A);
[OK, nrow, ncol, lnz, unz, udiag_nz, it] = umf_luinfo(Lup)  // OK must be %t, nrow=ncol = 5, 
[L,U,p,q,R] = umf_luget(Lup);
nnz(L)  // must be equal to lnz
nnz(U)  // must be equal to unz
umf_ludel(Lup) // clear memory
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="umfpack">umfpack</link>
            </member>
            <member>
                <link linkend="umf_lufact">umf_lufact</link>
            </member>
            <member>
                <link linkend="umf_lusolve">umf_lusolve</link>
            </member>
            <member>
                <link linkend="umf_ludel">umf_ludel</link>
            </member>
            <member>
                <link linkend="umf_luget">umf_luget</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
