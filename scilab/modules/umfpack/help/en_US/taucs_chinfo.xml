<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:lang="en" xml:id="taucs_chinfo">
    <refnamediv>
        <refname>taucs_chinfo </refname>
        <refpurpose>get information on Cholesky factors  </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>[OK, n, cnz] = taucs_chinfo(C_ptr)</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>C_ptr  </term>
                <listitem>
                    <para>a pointer to a Cholesky factorization</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>OK  </term>
                <listitem>
                    <para>a scalar boolean</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>n  </term>
                <listitem>
                    <para>a scalar integer</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>cnz  </term>
                <listitem>
                    <para>a scalar integer</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            This function may be used to know basic information about 
            the Cholesky factor created with taucs_chfact :
        </para>
        <itemizedlist>
            <listitem>
                <para>
                    first <literal>OK</literal> is <literal>%t</literal> if <literal>C_ptr</literal> is a valid pointer to an Cholesky 
                    factorization (and <literal>%f</literal> else)
                </para>
            </listitem>
            <listitem>
                <para>
                    if <literal>OK</literal> is <literal>%t</literal> then <literal>n</literal> and <literal>cnz</literal> are respectively the 
                    matrix order and the number of non zeros elements in the supernodal structure storing 
                    <literal>C</literal> ; if <literal>OK</literal> is <literal>%f</literal>, <literal>n</literal> and <literal>cnz</literal> are set 
                    to the void matrix [].
                </para>
            </listitem>
        </itemizedlist>
    </refsection>
    <refsection>
        <title>Details</title>
        <para>
            Due to the supernodal structure used for <literal>C</literal>, <literal>cnz</literal> is larger 
            than the exact number of non-zeros elements in <literal>C</literal> (and so this <literal>cnz</literal>
            is a mesure of the memory used internally). To get the exact <literal>cnz</literal> you may retrieve 
            the Cholesky factor with <link linkend="taucs_chget">taucs_chget</link> then apply 
            the <link linkend="nnz">nnz</link> scilab function (see the 2d example in <link linkend="taucs_chget">taucs_chget</link>).
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[ 
// Example #1 : a small linear test system 
// whom solution must be [1;2;3;4;5]
A = sparse( [ 2 -1  0  0  0;
             -1  2 -1  0  0; 
              0 -1  2 -1  0; 
              0  0 -1  2 -1; 
              0  0  0 -1  2] );
b = [0 ; 0; 0; 0; 6];
Cp = taucs_chfact(A);
[OK, n, cnz]=taucs_chinfo(Cp)
 ]]></programlisting>
        <programlisting role="example"><![CDATA[ 
// Example #2 a real example
// first load a sparse matrix
[A] = ReadHBSparse(SCI+"/modules/umfpack/examples/bcsstk24.rsa");
// compute the factorization
Cp = taucs_chfact(A);
[OK, n, cnz]=taucs_chinfo(Cp)
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="taucs_chfact">taucs_chfact</link>
            </member>
            <member>
                <link linkend="taucs_chsolve">taucs_chsolve</link>
            </member>
            <member>
                <link linkend="taucs_chdel">taucs_chdel</link>
            </member>
            <member>
                <link linkend="taucs_chget">taucs_chget</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
