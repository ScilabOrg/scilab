<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:lang="ja" xml:id="errcatch">
    <refnamediv>
        <refname>errcatch</refname>
        <refpurpose>エラーの捕捉</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>呼出し手順</title>
        <synopsis>errcatch(n [,'action'] [,'option'])
            errcatch()
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>パラメータ</title>
        <variablelist>
            <varlistentry>
                <term>n</term>
                <listitem>
                    <para>整数</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>action, option</term>
                <listitem>
                    <para>文字列</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>説明</title>
        <para>
            <literal>errcatch</literal> は,
            <literal>n</literal>型のエラーが発生した時に
            実行される "処理" (エラーハンドラ)を指定します,
            <literal>n</literal> は以下の意味を有します:
        </para>
        <para>
            <literal>n&gt;0</literal>の場合, <literal>n</literal> は
            捕捉するエラー番号となります.
        </para>
        <para>
            <literal>n&lt;0</literal>  の場合,全てのエラーが捕捉されます.
        </para>
        <para>
            <literal>action</literal> は以下の文字列のどれかとなります:
        </para>
        <variablelist>
            <varlistentry>
                <term>"pause"</term>
                <listitem>
                    <para>
                        誤差を捕捉した際に pause が実行されます.
                        このオプションはデバッグの際に有用です.
                        カレントのコンテキストで情報を取得するには
                        <literal>whereami()</literal>を使用してください.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"continue"</term>
                <listitem>
                    <para>
                        関数または実行ファイルないの次の命令が実行され,
                        カレントの命令は無視されます.
                        <literal>iserror</literal>関数により,
                        エラーが発生したかどうかを調べることが可能です.できるだけ早く
                        <literal>errclear</literal>関数によりエラーをクリアすることを
                        忘れないようにしてください.
                        このオプションはエラーからの回復の際に有用です.
                        多くの場合,
                        <link linkend="execstr">execstr</link> 関数または
                        <link linkend="try">try</link>制御構造を使用することにより
                        <literal>errcatch(n,"continue",..)</literal>を
                        置換することができます.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"kill"</term>
                <listitem>
                    <para>デフォルトのモードであり,全ての実行中の関数の実行が破棄され,
                        Scilabの処理はレベル0プロンプトに戻ります.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"stop"</term>
                <listitem>
                    <para>
                        カレントのScilabセッションを中断します(Scilabが外部プログラムからコールされた時に有用).
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
        <para>
            <literal>option</literal> は中断時のエラーメッセージである
            文字列 <literal>'nomessage'</literal> です.
        </para>
        <para>
            デフォルトモードに戻すためには,
            <literal>errcatch(-1,"kill")</literal>または
            <literal>errcatch(-1)</literal> と入力してください.
            <literal>errcatch()</literal> は以前使用されていた <literal>errcatch(-1)</literal> と
            等価です. 
        </para>
        <para/>
        <para>
            <literal>errcatch</literal>のアクションはカレントの評価コンテキスト
            (function, exec, pause) およびサブレベル全体に適用されます.
            あるサブレベル内で<literal>errcatch</literal> を2回コールすると
            このサブレベルでの最初のコールが隠蔽され,
            最初の関数コールの効果は削除されます.
        </para>
        <para> 
            Scilab関数または exec のコンテキスト内でコールされた場合,
            <literal>errcatch</literal>は,関数のリターンの時に自動的にリセットされます.
        </para>
    </refsection>
    <refsection role="see also">
        <title>参照</title>
        <simplelist type="inline">
            <member>
                <link linkend="try">try</link>
            </member>
            <member>
                <link linkend="errclear">errclear</link>
            </member>
            <member>
                <link linkend="iserror">iserror</link>
            </member>
            <member>
                <link linkend="whereami">whereami</link>
            </member>
            <member>
                <link linkend="execstr">execstr</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
