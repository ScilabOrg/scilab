<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="dot" xml:lang="ja">
    <refnamediv>
        <refname>dot</refname>
        <refpurpose>(.) 記号</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>呼び出し手順</title>
        <synopsis>
            123.33
            
            a.*b
            a .*. b
            
            %pi * (%e + ..
            %i)
            
            cd ..
            dir ..
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>説明</title>
        <variablelist>
            <varlistentry>
                <term>.</term>
                <listitem>
                    <para>ドットは以下のように数字の小数点を示すために使用されます : 3.25 および
                        0.001
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>.&lt;op&gt;</term>
                <listitem>
                    <para>
                        は他の演算記号 (<literal>* /
                            \ ^ '
                        </literal>
                        )と組み合わせて別の演算子を作成するために
                        使用されます.
                        要素毎の複合演算子は<literal> .* , .^ , ./
                            , .\
                        </literal>
                        または <literal>.'</literal>により
                        得られます.
                        例えば, C = A ./ B は c(i,j) = a(i,j)/b(i,j) を要素とする
                        行列となります.
                        クロネッカー積は .*. と表記されます.
                        ドットの後に数字が続く場合,このドットは数字の一部とみなされる
                        ことに注意してください.
                        このため, 2.*x は 2.0*x として評価され,
                        2 .*x は (2).*x として評価されます.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>..</term>
                <listitem>
                    <para>継続記号. 2つ以上の小数点が行の末尾(あるいはコメントの前)にあると,
                        次の行は継続されます.
                    </para>
                    <para>継続行は, プリプロセッサにより処理され,
                        一連の継続行から一つの長い論理行が作成されます.
                        このため,継続記号は,行を任意の点で分割するために使用することができます..
                    </para>
                    <para>以下の関数 foo:</para>
                    <programlisting role=""><![CDATA[
function foo()
    plot2d()
    xtitle(["General title"; "It can be multiline, so quite long"], ..
            "This is the X-axis title", "Y title")
endfunction
 ]]></programlisting>
                    <para>は次の関数と等価です:</para>
                    <programlisting role=""><![CDATA[
function foo()
    plot2d()

    xtitle(["General title"; "It can be multiline, so quite long"], "This is the X-axis title", "Y title")
endfunction
 ]]></programlisting>
                    <para>物理行3行目と物理行4行目からなる論理行は
                        物理行4行目に全体が書かれ,物理行3行目が空の時と
                        同じとなります.このようなことが可能なのは,
                        継続記号を式の中の任意の場所に置く事ができるためです.
                        <note>The difference between logical and physical
                            lines is of importance when dealing with edition (scinotes, edit), with
                            profiling (profile, showprofile, plotprofile), and within error messages
                            (whereami), when the line number is provided or displayed.
                        </note>
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>".." parameter</term>
                <listitem>
                    <para>
                        When functions are used in a console-oriented way, <literal>..</literal>
                        is not considered as a continuation mark but as a simple argument. The most
                        common usage is with <literal>cd ..</literal>, <literal>dir ..</literal>
                        or <literal>ls ..</literal> actually standing for <literal>cd("..")</literal>,
                        etc.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>例</title>
        <programlisting role="example"><![CDATA[
//decimal point
1.345

//used as part of an operator
x = [1 2 3];x.^2 .*x // a space is required between 2 and dot

// When writing rows of a matrix on different lines, ".." can be used but are not mandatory.
N = [   ..
    63.    89.    3.   ..
    91.    56.    22.  ..
    15.    64.    40.  ..
    ]
// It can be more simply entered as (or copied/pasted from/to console or script), without appending ".."
N = [
    63.    89.    3.
    91.    56.    22.
    15.    64.    40.
    ]

// Within very long instructions like when creating uicontrol where many properties must be set,
// continuation marks are almost mandatory and allow to write and set one property per line
// in a readable way. A single huge line would not comply with Scilab coding style:
fig = figure("figure_name", "FIGURE", ..
             "dockable",    "off", ..
             "axes_size",   [990,670], ..
             "infobar_visible", "off", ..
             "toolbar",     "none", ..
             "menubar_visible", "on", ..
             "menubar",     "none", ..
             "default_axes","off", ..
             "layout",      "border", ..
             "background",  color(244,244,244), ..
             "tag",         "figure_1", ..
             "visible",     "on");

// Console-oriented calls with some ".." argument
d = pwd(); cd SCI/contrib
cd ..   // stands for cd("..") and expects nothing on the next line
cd(d)   // Go back to your working directory

// This expression does not work anymore in Scilab 6
a = "here I start a very long string...  //but I'm not in the mood of continuing
     - and here I go on"
// This one is the correct expression now
a = "here I start a very long string"+...  //but I'm not in the mood of continuing
    "    - and here I go on"
// This expression is not allowed anymore in Scilab 6: scalar number must be written on one line
y = 12..
45
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>参照</title>
        <simplelist type="inline">
            <member>
                <link linkend="star">star</link>
            </member>
            <member>
                <link linkend="hat">hat</link>
            </member>
            <member>
                <link linkend="slash">slash</link>
            </member>
            <member>
                <link linkend="backslash">backslash</link>
            </member>
            <member>
                <link linkend="whereami">whereami</link>
            </member>
            <member>
                <link linkend="edit">edit</link>
            </member>
        </simplelist>
    </refsection>
    <refsection>
        <title>History</title>
        <revhistory>
            <revision>
                <revnumber>6.0.0</revnumber>
                <revremark>
                    <para>
                        It is not possible anymore to cut a scalar number.
                    </para>
                    <para>
                        To cut a single string, "+.." operators must be used.
                    </para>
                    <para>
                        In console-oriented calls, <literal>myfun ..</literal> no longer expects
                        a continuation on the next line.
                    </para>
                </revremark>
            </revision>
        </revhistory>
    </refsection>
</refentry>
