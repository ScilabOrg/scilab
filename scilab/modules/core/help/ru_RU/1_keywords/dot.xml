<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="dot" xml:lang="ru">
    <refnamediv>
        <refname>точка</refname>
        <refpurpose>(.) символ точка</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Последовательность вызова</title>
        <synopsis>
            123.33

            a.*b
            a .*. b

            %pi * (%e + ..
            %i)

            cd ..
            dir ..
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Описание</title>
        <variablelist>
            <varlistentry>
                <term>.</term>
                <listitem>
                    <para>
                        Точка используется для обозначения десятичной запятой для чисел: 3.25 и
                        0.001
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>.&lt;оператор&gt;</term>
                <listitem>
                    <para>
                        используется в сочетании с другими символами операторов (<literal>*/ \ ^ '</literal>) 
                        для формирования других операторов. Операторы поэлементного умножения, деления и 
                        возведения в степень и транспонирования получаются с помощью
                        <literal> .*, ./, .\, .^ </literal>; транспонирование без комплексного сопряжения 
                        получается с помощью <literal>.'</literal> . Например,  <literal>C = A ./ B</literal> 
                        является матрицей с элементами <literal>c(i,j) = a(i,j)/b(i,j)</literal>. Произведение 
                        Кронекера обозначается <literal>.*.</literal> . Заметьте, что когда точка стоит
                        сразу после числа, то она всегда является частью числа, так что <literal>2.*x</literal> 
                        вычисляется как <literal>2.0*x</literal>, а <literal>2 .*x</literal> вычисляется как 
                        <literal>(2).*x</literal>. 
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>..</term>
                <listitem>
                    <para>
                        Обозначение продолжения. Две или более точек в конце строки
                        (или с последующим комментарием) приводит к тому, что следующая
                        строка будет продолжением.
                    </para>
                    <para>
                        Строки продолжения обрабатываются предпроцессором, который строит длинную логическую
                        линию из последовательности строк продолжения. Так что обозначения продолжения
                        могут использоваться для разрезания строки во многих местах.
                    </para>
                    <para>
                        Следующая функция <literal>foo</literal>:
                    </para>
                    <programlisting role=""><![CDATA[ 
function foo()
    plot2d()
    xtitle(["General title"; "It can be multiline, so quite long"], ..
            "This is the X-axis title", "Y title")
endfunction
 ]]></programlisting>
                    <para>эквивалентна:</para>
                    <programlisting role=""><![CDATA[ 
function foo()
    plot2d()

    xtitle(["General title"; "It can be multiline, so quite long"], "This is the X-axis title", "Y title")
endfunction
 ]]></programlisting>
                    <para>
                        Логическая строка, сформированная физической строкой №3 и физической строкой №4, 
                        построена так, как если бы она была полностью написана на физической строке №4, а 
                        физическая строка №3 была бы пустой. Так сделано для того, чтобы обозначения 
                        конкатенации можно было помещать куда угодно внутри выражения.
                        <note>The difference between logical and physical
                        lines is of importance when dealing with edition (scinotes, edit), with
                        profiling (profile, showprofile, plotprofile), and within error messages
                        (whereami), when the line number is provided or displayed.
                        </note>
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Примеры</title>
        <programlisting role="example"><![CDATA[ 
//десятичная запятая
1.345
 
//используется как часть оператора
x=[1 2 3];x.^2 .*x // требуется пробел между 2 и точкой
 
// When writing rows of a matrix on different lines, ".." can be used but are not mandatory.
N = [   ..
    63.    89.    3.   ..
    91.    56.    22.  ..
    15.    64.    40.  ..
    ]
// It can be more simply entered as (or copied/pasted from/to console or script), without appending ".."
N = [
    63.    89.    3.
    91.    56.    22.
    15.    64.    40.
    ]

// Within very long instructions like when creating uicontrol where many properties must be set,
// continuation marks are almost mandatory and allow to write and set one property per line
// in a readable way. A single huge line would not comply with Scilab coding style:
fig = figure("figure_name", "FIGURE", ..
             "dockable",    "off", ..
             "axes_size",   [990,670], ..
             "infobar_visible", "off", ..
             "toolbar",     "none", ..
             "menubar_visible", "on", ..
             "menubar",     "none", ..
             "default_axes","off", ..
             "layout",      "border", ..
             "background",  color(244,244,244), ..
             "tag",         "figure_1", ..
             "visible",     "on");

// Console-oriented calls with some ".." argument
d = pwd(); cd SCI/contrib
cd ..   // stands for cd("..") and expects nothing on the next line
cd(d)   // Go back to your working directory

// This expression does not work anymore in Scilab 6
a = "here I start a very long string...  //but I'm not in the mood of continuing
     - and here I go on"
// This one is the correct expression now
a = "here I start a very long string"+...  //but I'm not in the mood of continuing
    "    - and here I go on"
// This expression is not allowed anymore in Scilab 6: scalar number must be written on one line
y = 12..
45
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>Смотрите также</title>
        <simplelist type="inline">
            <member>
                <link linkend="star">звёздочка</link>
            </member>
            <member>
                <link linkend="hat">крышечка</link>
            </member>
            <member>
                <link linkend="slash">слэш</link>
            </member>
            <member>
                <link linkend="backslash">обратный слэш</link>
            </member>
            <member>
                <link linkend="whereami">whereami</link>
            </member>
            <member>
                <link linkend="showprofile">showprofile</link>
            </member>
            <member>
                <link linkend="edit">edit</link>
            </member>
        </simplelist>
    </refsection>
    <refsection>
        <title>History</title>
        <revhistory>
            <revision>
                <revnumber>6.0.0</revnumber>
                <revremark>
                    <para>
                        It is not possible anymore to cut a scalar number.
                    </para>
                    <para>
                        To cut a single string, "+.." operators must be used.
                    </para>
                    <para>In console-oriented calls, <literal>myfun ..</literal> no longer expects
                        a continuation on the next line.
                    </para>
                </revremark>
            </revision>
        </revhistory>
    </refsection>
</refentry>
