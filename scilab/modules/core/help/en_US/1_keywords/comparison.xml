<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:lang="en" xml:id="comparison">
    <refnamediv>
        <refname>comparison</refname>
        <refpurpose>comparison, relational operators</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>
            a==b
            a~=b or a&lt;&gt;b
            a&lt;b
            a&lt;=b
            a&gt;b
            a&gt;=b
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>a</term>
                <listitem>
                    <para>
                        any type of variable for <literal>a==b</literal>, <literal>a~=b</literal> 
                        <literal>a&lt;&gt;b</literal> equality comparisons and restricted to real floating point and integer
                        array for order related comparisons <literal>a&lt;b</literal>,
                        <literal>a&lt;=b</literal>, <literal>a&gt;b</literal>, <literal>a&gt;=b</literal>. 
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>b</term>
                <listitem>
                    <para>
                        any type of variable for <literal>a==b</literal>, <literal>a~=b</literal> 
                        <literal>a&lt;&gt;b</literal> equality  comparisons and restricted to
                        real floating point and integer arrays for order related comparisons
                        <literal>a&lt;b</literal>, <literal>a&lt;=b</literal>,
                        <literal>a&gt;b</literal>, <literal>a&gt;=b</literal>.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>Two classes of operators have to be distinguished:</para>
        <variablelist>
            <varlistentry>
                <term>The equality and inequality comparisons: </term>
                <listitem>
                    <para>
                        <literal>a==b</literal>, <literal>a~=b</literal> (or equivalently <literal>a&lt;&gt;b</literal>).
                        These operators apply to any type of operands.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>The order related comparisons: </term>
                <listitem>
                    <para>
                        <literal>a&lt;b</literal>, <literal>a&lt;=b</literal>,
                        <literal>a&gt;b</literal>, <literal>a&gt;=b</literal>. These operators apply
                        only to real floating point and integer arrays.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
        <para>The semantics of the comparison operators also depend on the operands types:</para>
        <variablelist>
            <varlistentry>
                <term>With array variables </term>
                <listitem>
                    <para> like floating point and integer arrays, logical arrays,
                        string arrays, polynomial and rational arrays, handle arrays, lists... the following rules apply:
                    </para>
                    <itemizedlist>
                        <listitem>
                            <para>
                                If <literal>a</literal> and <literal>b</literal> evaluates as arrays with same types
                                and identical dimensions, the comparison is performed element by
                                element and the result is an array of booleans of the same size.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                If <literal>a</literal> and <literal>b</literal> evaluates as arrays 
                                with same types, but <literal>a</literal> or <literal>b</literal> is a scalar,
                                then the scalar is compared with each element of the
                                other array. The result is an array of booleans of the size of
                                the non scalar operand.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                If <literal>a</literal> or <literal>b</literal> are arrays, but one of them
                                is empty, then an equality or an inequality comparison is possible. In this case,
                                the result is a scalar boolean.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                In the others cases the result is the boolean <literal>%f</literal>
                            </para>
                        </listitem>
                        <listitem>
                            <para>If the operand data types are different but "compatible" like
                                floating points and integers, then a type conversion is performed before
                                the comparison.
                            </para>
                        </listitem>
                    </itemizedlist>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>With other type of operands </term>
                <listitem>
                    <para>
                        like <literal>function</literal>,
                        <literal>libraries</literal>, the result is <literal>%t</literal>
                        if the objects are identical and <literal>%f</literal> in the
                        other cases.
                    </para>
                    <para>
                        Equality comparison between operands of incompatible data types
                        returns <literal>%f</literal>.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[ 
//element wise comparisons
(1:5)==3
(1:5)<=4 
(1:5)<=[1 4 2 3 0]
1<[]
list(1,2,3)~=list(1,3,3)
"foo"=="bar"
sparse([1,2;4,5;3,10],[1,2,3]) == sparse([1,2;4,5;3,10],[1,2,3])

//object wise comparisons
(1:10)==[4,3]
'foo'==3
1==[]
list(1,2,3)==1

isequal(list(1,2,3),1)
isequal(1:10,1)

//comparison with type conversion
int32(1)==1
int32(1)<1.5
int32(1:5)<int8(3)
p=poly(0,'s','c')
p==0
p/poly(1,'s','c')==0
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="less">less</link>
            </member>
            <member>
                <link linkend="greater">greater</link>
            </member>
            <member>
                <link linkend="boolean">boolean</link>
            </member>
            <member>
                <link linkend="isequal">isequal</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
