<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:lang="en" xml:id="resume">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>
  <refnamediv>
    <refname>resume</refname>
    <refpurpose>return or resume execution and copy some local variables</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <title>Calling Sequence</title>
    <synopsis>resume
      [x1,..,xn]=resume(a1,..,an)
    </synopsis>
  </refsynopsisdiv>
  <refsection>
    <title>Arguments</title>
    <variablelist>
      <varlistentry>
        <term>x1,..,xn</term>
        <listitem>
          <para>variables in calling environnement</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>a1,..,an</term>
        <listitem>
          <para>local variables</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>
  <refsection>
    <title>Description</title>
    <para>
      In a function <literal>resume</literal> stops the execution of the function,
      <literal>[x1,..,xn]=resume(a1,..,an)</literal> stops the execution of the function and put the
      local variables <literal>ai</literal> in calling environment under names
      <literal>xi</literal>.
    </para>
    <para>
      In <literal>pause</literal> mode, it allows to return to lower level
      <literal>[x1,..,xn]=resume(a1,..,an)</literal> returns to lower level and put the local variables
      <literal>ai</literal> in calling environment under names <literal>xi</literal>.
    </para>
    <para>
      In an <literal>execstr</literal> called by a function <literal>[..]=resume(..)</literal> stops
      the execution of the function and put the local variables 
      <literal>ai</literal> in calling environment under names <literal>xi</literal>.
    </para>
    <para>
      <literal>resume</literal> is equivalent to <literal>return</literal>.
    </para>
  </refsection>
  <refsection role="see also">
    <title>See Also</title>
    <simplelist type="inline">
      <member>
        <link linkend="abort">abort</link>
      </member>
      <member>
        <link linkend="break">break</link>
      </member>
      <member>
        <link linkend="pause">pause</link>
      </member>
      <member>
        <link linkend="quit">quit</link>
      </member>
      <member>
        <link linkend="return">return</link>
      </member>
      <member>
        <link linkend="execstr">execstr</link>
      </member>
    </simplelist>
  </refsection>
</refentry>
