<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:lang="en" xml:id="for">
    <refnamediv>
        <refname>for</refname>
        <refpurpose>language keyword for loops</refpurpose>
    </refnamediv>
    <refsection>
        <title>Description</title>
        <para>
            Used to define loops. Its syntax is:
            <literal> for variable=expression ,instruction, .. ,instruction,end</literal>
        </para>
        <para>
            <literal> for variable=expression do instruction,   ,instruction,end</literal>
        </para>
        <para>
            If <literal>expression</literal> is a matrix or a row vector, <literal>variable</literal>
            takes as values the values of each column of the matrix.
        </para>
        <para>
            A particular case uses the <link linkend="colon">colon</link> operator to create regularly
            spaced row vectors, and is similar to traditional for loop forms:
            <literal>for variable=n1:step:n2, ...,end</literal>
        </para>
        <para>
            If <literal>expression</literal> is a list <literal>variable</literal> takes as values the
            successive entries of the list.
        </para>
        <para>
            According to the Code Conventions for the Scilab Programming Language it is recommended:
        </para>
        <itemizedlist>
            <listitem>
                <para>
                    Start each statement on a new line.
                </para>
            </listitem>
            <listitem>
                <para>
                    Write no more than one simple statement per line.
                </para>
            </listitem>
            <listitem>
                <para>
                    Break compound statements over multiple lines.
                </para>
            </listitem>
        </itemizedlist>
        <para>
            For example, use:
        </para>
        <programlisting role=""><![CDATA[
      for i = 1:5 
          disp(i);
      end
]]></programlisting>
        <para>
            rather than
        </para>
        <programlisting role=""><![CDATA[
      for i = 1:5 disp(i); end
]]></programlisting>
        <para>
            <warning>
                The number of characters used to define the body of any
                conditional instruction (if while for or select/case) must be limited to
                16k.
            </warning>
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[ 
// "traditional" for loops
n=5;
for i = 1:n
    for j = 1:n
        a(i,j) = 1/(i+j-1);
    end;
end
for j = 2:n-1
    a(j,j) = j; 
end; 
a
for j= 4:-1:1
    disp(j);
end // decreasing loop

//loop on matrix columns
for  e=eye(3,3), e, end  
for v=a, write(6,v), end
for j=1:n, v=a(:,j), write(6,v), end 

//loop on list entries
for l=list(1,2,'example'); l, end 

 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="while">while</link>
            </member>
            <member>
                <link linkend="end">end</link>
            </member>
            <member>
                <link linkend="do">do</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
