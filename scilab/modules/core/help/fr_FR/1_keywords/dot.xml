<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns3="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="dot" xml:lang="fr">
    <refnamediv>
        <refname>dot (.)</refname>
        <refpurpose>point</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Séquence d'appel</title>
        <synopsis>123.33

            a.*b
            a .*. b

            %pi * (%e + ..
            %i)

            cd ..
            ls ..
            dir ..
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Description</title>
        <variablelist>
            <varlistentry>
                <term>.</term>
                <listitem>
                    <para>Le point est utilisé dans la notation décimale : 3.25 et 0.001.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>.&lt;op&gt;</term>
                <listitem>
                    <para>Il est aussi utilisé en conjonction avec d'autres opérateurs
                        (<literal>* / \ ^ '</literal>) pour en former de nouveaux. Les opérations
                        multiplicatives "élément par élément" sont obtenues avec <literal>.* , .^ ,
                            ./ , .\ ou .'
                        </literal>
                        .Par exemple, <literal>C = A ./ B</literal> est la matrice dont les
                        éléments sont <literal>c(i,j) = a(i,j)/b(i,j)</literal>. Le produit de Kronecker est
                        noté <literal>.*.</literal>.
                    </para>
                    <para>
                        <note>
                            Notez que lorsqu'un point suit un nombre entier il est
                            considéré comme en faisant partie. Ainsi <literal>2.*x</literal> est évalué comme <literal>2.0*x</literal>
                            et <literal>2 .*x</literal> est évalué comme <literal>(2).*x</literal>.
                        </note>
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>..</term>
                <listitem>
                    <para>A suivre. Deux points ou plus à la fin d'une ligne font en
                        sorte que la ligne suivante est considérée comme en étant la suite
                        (le passage à la ligne n'est pas pris en compte).
                    </para>
                    <para>Les lignes de suite sont traitées par un préprocesseur dont
                        l'objet est de construire une ligne logique à partir d'une suite de
                        lignes physiques. Les points de suite peuvent ainsi être utilisés
                        pour couper une ligne logique à n'importe quel endroit.
                    </para>
                    <para>
                        La fonction <literal>foo</literal> suivante :
                    </para>
                    <programlisting role=""><![CDATA[
function foo()
    plot2d()
    xtitle(["Titre général"; "Peut être sur plusieurs lignes, donc assez long"], ..
            "Ceci est le titre de l''axe des X", "titre de l''axe Y")
endfunction
 ]]></programlisting>
                    <para>est équivalente à :</para>
                    <programlisting role=""><![CDATA[
function foo()
    plot2d()

    xtitle(["Titre général"; "Peut être sur plusieurs lignes, donc assez long"], "Ceci est le titre de l''axe des X", "titre de l''axe Y")
endfunction
 ]]></programlisting>
                    <para>La ligne logique formée par les lignes physiques 3 et 4 est
                        construite comme si elle était entièrement écrite sur la ligne
                        physique 4 alors que la ligne physique 3 serait vide. Cette manière
                        de faire est nécessaire car les points de suite peuvent apparaître
                        n'importe où dans la ligne logique, même à l'intérieur d'une
                        expression. Notez que la différence entre lignes logiques et lignes physiques
                        a son importance lors de l'édition (scinotes, edit), lors de profilage (profile, 
                        showprofile, plotprofile), et lorsque le numéro de ligne est indiqué dans les
                        messages d'erreur (whereami).
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Exemples</title>
        <programlisting role="example"><![CDATA[ 
1.345
x = [1 2 3];x.^2 .*x // il faut absolument mettre un espace entre le 2 et le point

// Pour une meilleure lisibilité, il est possible d'écrire un vecteur ou une matrice
// sur plusieurs lignes
T = [0, ..
     0.14083587356641726296, ..
     0.19835452215880472592, ..
     0.24194508276597658228, ..
     0.27824682273479715921];

// Les points de suite peuvent également permettre une meilleure lisibilité
// lors de la création de figure ou d'uicontrol
fig = figure("figure_name", "FIGURE", ..
"dockable", "off", ..
"axes_size", [990,670], ..
"infobar_visible", "off", ..
"toolbar", "none", ..
"menubar_visible", "on", ..
"menubar", "none", ..
"default_axes", "off", ..
"layout", "border", ..
"background", color(244,244,244), ..
"tag", "figure_1", ..
"visible", "on");

// Cette expression ne fonctionne plus dans Scilab 6
a = "Je commence à écrire une très longue chaîne de caractères...
     - et je continue ici"
// L'expression suivante est celle à utiliser
a = "Je commence à écrire une très longue chaîne de caractères"+...
    "    - et je continue ici"
// Cette expression n'est plus autorisée dans Scilab 6: Les singletons doivent être écrits sur une ligne
y = 12..
45
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>Voir aussi</title>
        <simplelist type="inline">
            <member>
                <link linkend="star">star</link>
            </member>
            <member>
                <link linkend="hat">hat</link>
            </member>
            <member>
                <link linkend="slash">slash</link>
            </member>
            <member>
                <link linkend="backslash">backslash</link>
            </member>
            <member>
                <link linkend="whereami">whereami</link>
            </member>
            <member>
                <link linkend="showprofile">showprofile</link>
            </member>
            <member>
                <link linkend="edit">edit</link>
            </member>
        </simplelist>
    </refsection>
    <refsection>
        <title>Historique</title>
        <revhistory>
            <revision>
                <revnumber>6.0.0</revnumber>
                <revremark>
                    <para>
                        Il est désormais impossible de couper un scalaire.
                    </para>
                    <para>
                        Pour couper une chaîne de caractères, les opérateurs "+.." doit être utilisé.
                    </para>
                    <para>
                        Pour accéder au répertoire parent, ";" n'est plus nécessaire dans la commande "cd ..;".
                    </para>
                </revremark>
            </revision>
        </revhistory>
    </refsection>
</refentry>
