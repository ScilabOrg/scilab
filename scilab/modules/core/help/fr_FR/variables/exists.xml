<?xml version="1.1" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:lang="fr" xml:id="exists">
    <refnamediv>
        <refname>exists</refname>
        <refpurpose>teste l'existence d'une
            variable
        </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Séquence d'appel</title>
        <synopsis>ve = exists(name [,where])</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Paramètres</title>
        <variablelist>
            <varlistentry>
                <term>ve</term>
                <listitem>
                    <para>une matrice de même taille que <varname>name</varname> dont les éléments prennent comme valeur 0 ou 1</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>name</term>
                <listitem>
                    <para>matrice de chaînes de caractères</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>where</term>
                <listitem>
                    <para>une chaîne de caractères optionnelle pouvant
                        prendre les valeurs: <literal>'l'</literal> (local),
                        <literal>'n'</literal> (nolocal) et <literal>'a'</literal>
                        (all). La valeur par défaut est
                        <literal>'all'</literal>
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            <literal>exists(name)</literal> renvoie <literal>1</literal> si la variable nommée
            <literal>name</literal> existe et <literal>0</literal> sinon.
        </para>
        <para>
            Mise en garde : une fonction utilisant <literal>exists</literal> peut
            renvoyer un résultat dépendant de l'environnement courant !
        </para>
        <para>
            <literal>exists(name,'local')</literal> renvoie <literal>1</literal> si la variable
            nommée <literal>name</literal> existe dans l'environnement de la fonction
            courante et <literal>0</literal> sinon.
        </para>
        <para>
            <literal>exists(name,'nolocal')</literal> renvoie <literal>1</literal> si la
            variable nommée <literal>name</literal> existe dans l'environnement appelant (y
            compris le niveau du shell Scilab) de la fonction courante et <literal>0</literal>
            sinon.
        </para>
        <para>
            Attention: la fonction <literal>exists</literal> ne teste
            pas si une variable existe dans l'espace de nom <link linkend="global">global</link>.
        </para>
    </refsection>
    <refsection>
        <title>Exemples</title>
        <programlisting role="example"><![CDATA[ 
deff('foo(x)',..
['disp([exists(''a12''),exists(''a12'',''local'')])'
 'disp([exists(''x''),exists(''x'',''local'')])'])
foo(1)
a12=[];foo(1)

function level1()
  function level2()
    disp(exists(["a", "b"],"all"));
    disp(exists(["a", "b"],"local"));
    disp(exists(["a", "b"],"nolocal"));
  endfunction
  level2()
endfunction
function go()
  a=1;
  level1()
endfunction
go()
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>Voir aussi</title>
        <simplelist type="inline">
            <member>
                <link linkend="isdef">isdef</link>
            </member>
            <member>
                <link linkend="isglobal">isglobal</link>
            </member>
            <member>
                <link linkend="whereis">whereis</link>
            </member>
            <member>
                <link linkend="type">type</link>
            </member>
            <member>
                <link linkend="typeof">typeof</link>
            </member>
            <member>
                <link linkend="macrovar">macrovar</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
