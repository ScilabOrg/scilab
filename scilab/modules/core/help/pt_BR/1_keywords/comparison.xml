<?xml version="1.1" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="comparison" xml:lang="en">
    <refnamediv>
        <refname>comparison</refname>
        <refpurpose>comparação, operadores relacionais</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title> Seqüência de Chamamento </title>
        <synopsis>a==b
            a~=b ou a&lt;&gt;b
            a&lt;b
            a&lt;=b
            a&gt;b
            a&gt;=b
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title> Parâmetros </title>
        <variablelist>
            <varlistentry>
                <term>a</term>
                <listitem>
                    <para>qualquer tipo de variável para comparações de igualdade
                        <literal>a==b</literal>, <literal>a~=b</literal>
                        <literal>a&lt;&gt;b</literal> e restrita a arrays de pontos
                        flutuantes reais e inteiros para comparações relacionadas à ordem
                        <literal>a&lt;b</literal>, <literal>a&lt;=b</literal>,
                        <literal>a&gt;b</literal>,<literal>a&gt;=b</literal>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>b</term>
                <listitem>
                    <para>qualquer tipo de variável para comparações de igualdade
                        <literal>a==b</literal>, <literal>a~=b</literal> <literal>a&lt; &gt;
                            b
                        </literal>
                        erestrita a arrays de ponto flutuantes reais e inteiros
                        para comparações relacionadas à ordem <literal>a&lt;b</literal>,
                        <literal>a&lt;=b</literal>,
                        <literal>a&gt;b</literal>,<literal>a&gt;=b</literal>.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Descrição</title>
        <para> Duas classes de operadores devem ser distinguidas:</para>
        <variablelist>
            <varlistentry>
                <term>Comparações de igualdade e desigualdade:</term>
                <listitem>
                    <para>
                        <literal>a==b</literal>, <literal>a~=b</literal> (ou de modo
                        equivalente <literal>a&lt;&gt;b</literal>). Estes operadores se
                        aplicam a quaisquer tipos de operandos. 
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Comparações de ordem:</term>
                <listitem>
                    <para>
                        <literal>a&lt;b</literal>, <literal>a&lt;=b</literal>,
                        <literal>a&gt;b</literal>,<literal>a&gt;=b</literal>. Estes
                        operadores se aplicam apenas a arrays de pontos flutuantes reais e
                        inteiros.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
        <para>A semântica dos operadores de comparação também depende dos tipos de
            operandos:
        </para>
        <variablelist>
            <varlistentry>
                <term>Com variáveis arrays</term>
                <listitem>
                    <para>como arrays de pontos flutuantes ou inteiros, arrays lógicos,
                        arrays de strings, arrays de polinômios ou razões de polinômios,
                        arrays de manipuladores, listas,... o seguinte se aplica:
                    </para>
                    <itemizedlist>
                        <listitem>
                            <para>
                                Se <literal> a</literal> e <literal> b</literal> são
                                avaliados como arrays do mesmo tipo e dimensões idênticas, a
                                comparação é realizada elemento a elemento e o resultado é um
                                array de booleanos da comparação. 
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                Se <literal> a</literal> e <literal> b</literal> são
                                avaliados como arrays do mesmo tipo, mas <literal> a</literal>
                                ou <literal> b</literal> é um array 1 por 1, o elemento é
                                comparado com cada elemento do outro array. O resultado é um
                                array de booleanos com o tamanho do operando não-escalar.
                            </para>
                        </listitem>
                        <listitem>
                            <para>Em outros casos, o resultado é o booleano <literal>
                                    %f
                                </literal>
                            </para>
                        </listitem>
                        <listitem>
                            <para>Se os tipos de dados dos operandos são diferentes, mas
                                "compatíveis", como pontos flutuantes e inteiros, uma conversão
                                de tipo é realizada antes da comparação.
                            </para>
                        </listitem>
                    </itemizedlist>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Com outros tipos de operandos</term>
                <listitem>
                    <para>
                        como <literal>function</literal>,
                        <literal>libraries</literal>, o resultado é <literal> %t</literal>
                        se os objetos são idênticos e <literal> %f</literal> em outros
                        casos.
                    </para>
                    <para>Comparação de igualdade entre operandos com tipos de dados
                        incompatíveis retorna <literal>%f</literal>.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Exemplos</title>
        <programlisting role="example"><![CDATA[ 
//comparações elemento a elemento
(1:5)==3
(1:5)<=4 
(1:5)<=[1 4 2 3 0]
1<[]
list(1,2,3)~=list(1,3,3)
"foo"=="bar"
sparse([1,2;4,5;3,10],[1,2,3]) == sparse([1,2;4,5;3,10],[1,2,3])

//comparações objeto a objeto
(1:10)==[4,3]
'foo'==3
1==[]
list(1,2,3)==1

isequal(list(1,2,3),1)
isequal(1:10,1)

//comparação com conversão de tipo
int32(1)==1
int32(1)<1.5
int32(1:5)<int8(3)
p=poly(0,'s','c')
p==0
p/poly(1,'s','c')==0
 ]]></programlisting>
    </refsection>
    <refsection>
        <title> Ver Também </title>
        <simplelist type="inline">
            <member>
                <link linkend="less">less</link>
            </member>
            <member>
                <link linkend="greater">greater</link>
            </member>
            <member>
                <link linkend="boolean">boolean</link>
            </member>
            <member>
                <link linkend="isequal">isequal</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
