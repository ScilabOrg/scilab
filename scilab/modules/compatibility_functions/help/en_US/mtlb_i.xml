<?xml version="1.0" encoding="UTF-8"?>
<!--
    * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
    * Copyright (C) 2004-2007 - INRIA - Vincent COUVERT 
    * 
    * This file must be used under the terms of the CeCILL.
    * This source file is licensed as described in the file COPYING, which
    * you should have received as part of this distribution.  The terms
    * are also available at    
    * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
    *
    -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:lang="en" xml:id="mtlb_i">
    <refnamediv>
        <refname>mtlb_i</refname>
        <refpurpose>Matlab insertion emulation function</refpurpose>
    </refnamediv>
    <refsection>
        <title>Description</title>
        <para>Matlab and Scilab insertion behave differently in some particular cases:</para>
        <itemizedlist>
            <listitem>
                <para>
                    When inserting a matrix in a variable: Matlab automatically adjusts output
                    variable to fit with matrix to insert but not Scilab.
                    For example, with A=1, A([1,2,3,4])=[1,2;3,4]) returns an error in Scilab
                    while in Matlab we get A=[1,2,3,4]. If values miss comparing to indexes,
                    Matlab fills output value with 0.
                </para>
            </listitem>
            <listitem>
                <para>
                    When inserting data into a character string matrix: due to the fact that character string matrices
                    in Matlab can be addressed as any other matrix (each character can be adressed), insertion in such a type of
                    matrix does not differ from other. But in Scilab it can't be done so...<literal>mtlb_is</literal> is an alternative.
                </para>
            </listitem>
        </itemizedlist>
        <para>
            The function <literal>A=mtlb_i(A,k,B)</literal> is used by
            <literal>mfile2sci</literal> to replace <literal>A(k)=B</literal> when it was not
            possible to know what were the operands while porting Matlab code to Scilab. This function will
            determine the correct semantic at run time. If you want to have a
            more efficient code it is possible to replace <literal>mtlb_i</literal> calls:
        </para>
        <itemizedlist>
            <listitem>
                <para>    
                    If <literal>A</literal> is not a vector
                    <literal>A=mtlb_i(A,k,B)</literal> may be replaced by <literal>A(k)=B</literal>
                </para>
            </listitem>
            <listitem>
                <para>    
                    If <literal>A</literal> and <literal>B</literal> are both row or column vectors
                    <literal>A=mtlb_i(A,k,B)</literal> may be replaced by <literal>A(k)=B</literal>
                </para>
            </listitem>
        </itemizedlist>
        <para>
            <warning>
                Caution: <literal>mtlb_i</literal> has not to be used for hand coded functions.
            </warning>
        </para>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="MatlabScilab_character_strings">Matlab-Scilab_character_strings</link>
            </member>
            <member>
                <link linkend="mtlb_is">mtlb_is</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
