<?xml version="1.0" encoding="UTF-8"?>
<!--
    * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
    * Copyright (C) 2004-2007 - INRIA - Vincent COUVERT 
    * 
 * Copyright (C) 2012 - 2016 - Scilab Enterprises
 *
 * This file is hereby licensed under the terms of the GNU GPL v2.0,
 * pursuant to article 5.3.4 of the CeCILL v.2.1.
 * This file was originally licensed under the terms of the CeCILL v2.1,
 * and continues to be available under such terms.
 * For more information, see the COPYING file which you should have received
 * along with this program.
 * === LICENSE_END ===
    *
    -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:lang="en" xml:id="mtlb_eval">
    <refnamediv>
        <refname>mtlb_eval</refname>
        <refpurpose>Matlab eval emulation function</refpurpose>
    </refnamediv>
    <refsection>
        <title>Description</title>
        <para>
            Scilab equivalent for Matlab <literal>eval</literal> is different according to its inputs and outputs
        </para>
        <para>
            The function <literal>mtlb_eval(str1,str2)</literal> is used by
            <literal>mfile2sci</literal> to replace <literal>eval</literal> because it was not possible to know
            what were the inputs while porting Matlab code to Scilab. This function will
            determine the correct semantic at run time. If you want to have a
            more efficient code it is possible to replace <literal>mtlb_eval</literal> calls:
        </para>
        <itemizedlist>
            <listitem>
                <para>
                    When called with one input and no output,
                    <literal>mtlb_eval(str1)</literal> may be replaced by <literal>evstr(str1)</literal>
                    if <literal>str1</literal> is a valid Scilab expression
                    or by <literal>execstr(str1)</literal> 
                    if <literal>str1</literal> is a valid Scilab instruction.
                </para>
            </listitem>
            <listitem>
                <para>
                    When called with one input and one output,
                    <literal>val=mtlb_eval(str1)</literal> may be replaced by <literal>val=evstr(str1)</literal>
                    if <literal>str1</literal> is a valid Scilab instruction.
                </para>
            </listitem>
            <listitem>
                <para>
                    When called with two inputs and no output,
                    <literal>mtlb_eval(str1,str2)</literal> may be replaced by:
                    <literal>if execstr(str1,"errcatch")&lt;&gt;0 then execstr(str2);end</literal>
                    if <literal>str1</literal> and <literal>str2</literal> are valid Scilab instructions.
                </para>
            </listitem>
            <listitem>
                <para>
                    When called with more than one output and one input,
                    <literal>[val1,val2,...]=mtlb_eval(str1)</literal> may be replaced by
                    <literal>execstr("[val1,val2,...]"+str1)</literal>
                    if <literal>str1</literal> is a valid Scilab instruction.
                </para>
            </listitem>
            <listitem>
                <para>
                    When called with two inputs and more than one output,
                    <literal>[val1,val2,...]=mtlb_eval(str1,str2)</literal> may be replaced by:
                </para>
                <programlisting role=""><![CDATA[ 
if execstr("[val1,val2,...]"+str1,"errcatch")<>0 then
  execstr("[val1,val2,...]"+str2);
end	  
 ]]></programlisting>
                <para>
                    if <literal>str1</literal> and <literal>str2</literal> are valid Scilab instructions.
                </para>
            </listitem>
        </itemizedlist>
        <para>
            <warning>
                Caution: <literal>mtlb_eval</literal> has not to be used for hand coded functions.
            </warning>
        </para>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="evstr">evstr</link>
            </member>
            <member>
                <link linkend="execstr">execstr</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
