<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2009  - DIGITEO - Sylvestre LEDRU
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry version="5.0-subset Scilab" xml:id="cwritemat" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns5="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:db="http://docbook.org/ns/docbook">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>

  <refnamediv>
    <refname>cwritemat (obsolete)</refname>

    <refpurpose>Write a single double or a matrix of double into Scilab memory
    using call_scilab. Note that it is the default datatype in
    Scilab. Starting with Scilab 5.2, this function is obsolete. See <link linkend="Double_management_writing_API">API_Scilab: Double writing</link> for remplacement.</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <synopsis>int C2F(cwritemat)(char *name, int *m, int *n, int *mat, unsigned long name_len);</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Arguments</title>

    <variablelist>
      <varlistentry>
        <term>name</term>

        <listitem>
          <para>The name of the future Scilab variable</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>m</term>

        <listitem>
          <para>Number of rows</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>n</term>

        <listitem>
          <para>Number of columns</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>mat</term>

        <listitem>
          <para>The actual matrix of double (array of double). Note that it is
          going to be stored in Scilab columnwise.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>name_len</term>

        <listitem>
          <para>The length of the variable <emphasis>name</emphasis> (fortran
          compatibility)</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>C2F</term>

        <listitem>
          <para>C2F is just a macro which provides to this function the
          ability to be called from fortran</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>

  <refsection>
    <title>Description</title>

    <para>This help describes how to use the function cwritemat.</para>

    <para>Using this function will basically do the same as <emphasis>A=[ 1 3
    4 2 ];</emphasis> but straight into Scilab memory with call_scilab.</para>
  </refsection>

  <refsection>
    <title>Examples</title>

    <programlisting role="example"><![CDATA[ 
// This example shows how to write a Scilab matrix of double in Scilab engine
// * Write a matrix into Scilab
// * B=[1 4 2 3; 
// *    3 9 8 2 ]
// * Note that it is done column by column
// See: modules/call_scilab/examples/basicExamples/readwritematrix.c

// StartScilab
double B[] = {1,3,4,9,2,8,3,2};   /* Declare the matrix */
int rowB = 2, colB = 4; /* Size of the matrix */
char variableNameB[] = "B";

C2F(cwritemat)(variableNameB, &rowB, &colB, B, strlen(variableNameB)); /* Write it into Scilab's memory */

printf("\n");
printf("Display from Scilab of B:\n");
SendScilabJob("disp(B);"); /* Display A */
 ]]></programlisting>
  </refsection>

  <refsection>
    <title>See Also</title>

    <simplelist type="inline">
      <member>
	<link linkend="call_scilab">Call_Scilab</link>
       </member>
       <member>
	<link linkend="api_scilab">api Scilab</link>
       </member>
       <member>
	<link linkend="Double_management_reading_API">API_Scilab: Double reading</link>
       </member>
       <member>
	<link linkend="Double_management_writing_API">API_Scilab: Double writing</link>
       </member>
       <member>
	<link linkend="SendScilabJob">SendScilabJob</link>
       </member>
       <member>
	<link linkend="StartScilab">StartScilab</link>
       </member>
       <member>
	<link linkend="DoubleManagement_callscilab">Double Management</link>
       </member>
       <member>
	<link linkend="creadmat">creadmat</link>
      </member>
    </simplelist>
  </refsection>

  <refsection>
    <title>Authors</title>

    <para>Sylvestre Ledru</para>
  </refsection>
</refentry>
