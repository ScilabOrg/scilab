<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2009  - DIGITEO - Sylvestre LEDRU
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry version="5.0-subset Scilab" xml:id="cwritechain" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns5="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:db="http://docbook.org/ns/docbook">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>

  <refnamediv>
    <refname>cwritechain (obsolete)</refname>

    <refpurpose>Write a single string into Scilab memory using
    call_scilab. Starting with Scilab 5.2, this function is obsolete. See <link linkend="String_management_writing_API">API_Scilab: String writing</link> for remplacement.</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <synopsis>int C2F(cwritechain)(char *name, int *myStringSize, char *myString, unsigned long name_len, unsigned long myString_len);</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Arguments</title>

    <variablelist>
      <varlistentry>
        <term>name</term>

        <listitem>
          <para>The name of the future Scilab variable</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>myStringSize</term>

        <listitem>
          <para>The length of the string which is going to be write into
          Scilab memory</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>myString</term>

        <listitem>
          <para>The actual String (char *)</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>name_len</term>

        <listitem>
          <para>The length of the variable <emphasis>name</emphasis> (fortran
          compatibility)</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>myString_len</term>

        <listitem>
          <para>The length of the string (fortran compatibility)</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>C2F</term>

        <listitem>
          <para>C2F is just a macro which provides to this function the
          ability to be called from fortran</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>

  <refsection>
    <title>Description</title>

    <para>This help describes how to use the function cwritechain.</para>

    <para>Using this function will basically do the same as <emphasis>A = "my
    own String";</emphasis> but straight into Scilab memory with
    call_scilab.</para>
  </refsection>

  <refsection>
    <title>Examples</title>

    <programlisting role="example"><![CDATA[ 
// This example shows how to write a Scilab string in Scilab engine
// It is the equivalent to A="my Message"; in Scilab interpretor
// See: modules/call_scilab/examples/basicExamples/readwritestring.c

// StartScilab
char *myString = "my Message";   /* Declare the string */
char variableName[] = "A"; / * The name of the future variable in Scilab */
int sizeOfMyString=strlen(myString);

C2F(cwritechain)(variableName, &sizeOfMyString  , myString, strlen(variableName), sizeOfMyString); /* Write it into Scilab's memory */

printf("Display from Scilab of A:\n");
SendScilabJob("disp(A);"); /* Display A */
 ]]></programlisting>
  </refsection>

  <refsection>
    <title>See Also</title>

    <simplelist type="inline">
      <member><link linkend="call_scilab">Call_Scilab</link>,<link linkend="api_scilab">api Scilab</link>,<link linkend="String_management_reading_API">API_Scilab: String reading</link>,  <link linkend="String_management_writing_API">API_Scilab: String writing</link>, 
        <link linkend="SendScilabJob">SendScilabJob</link>
        <link linkend="StartScilab">StartScilab</link>
        <link linkend="creadchain">creadchains</link>
        <link linkend="StringManagement_callscilab">String Management</link>
      </member>
    </simplelist>
  </refsection>

  <refsection>
    <title>Authors</title>

    <para>Sylvestre Ledru</para>
  </refsection>
</refentry>
