<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2009  - DIGITEO - Sylvestre LEDRU
 * 
 * Copyright (C) 2012 - 2016 - Scilab Enterprises
 *
 * This file is hereby licensed under the terms of the GNU GPL v2.0,
 * pursuant to article 5.3.4 of the CeCILL v.2.1.
 * This file was originally licensed under the terms of the CeCILL v2.1,
 * and continues to be available under such terms.
 * For more information, see the COPYING file which you should have received
 * along with this program.
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="StartScilab" xml:lang="en">
    <refnamediv>
        <refname>StartScilab</refname>
        <refpurpose>Initializes and starts Scilab engine in Call
            Scilab
        </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <synopsis>BOOL StartScilab(char *SCIpath, char *ScilabStartup, int Stacksize);</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Description</title>
        <para>This fonction starts the Scilab engine. This is mandatory to use
            SendScilabJob functions and to manage Scilab's data.
        </para>
        <para>
            BOOL is just a simple typedef on int (<literal>typedef int
                BOOL
            </literal>
            ). TRUE is defined on 1 (<literal>#define TRUE 1</literal>)
            and FALSE is defined on 0 (<literal>#define FALSE 0</literal>).
        </para>
    </refsection>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>SCIpath</term>
                <listitem>
                    <para>a standard C char* containing the path to Scilab data</para>
                    <para>This argument is mandatory under Linux, Unix or Mac OS
                        X.
                    </para>
                    <para>Under Windows, if SCIpath is NULL, Scilab will find the
                        path.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>ScilabStartup</term>
                <listitem>
                    <para>a standard C char* containing the path to Scilab startup
                        script (scilab.start)
                    </para>
                    <para>If ScilabStartup is NULL, Scilab will use the default path
                        (detected from SCIpath).
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Stacksize</term>
                <listitem>
                    <para>a standard int defining the size of the Scilab stack</para>
                    <para>If Stacksize is zero, Scilab will use the default stacksize of
                        Scilab.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>returns</term>
                <listitem>
                    <para>1 (TRUE) if the operation is successful.</para>
                    <para>0 (FALSE) if an error during initialization occurred.</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="c"> 
            // A simple StartScilab example
            if ( StartScilab(getenv("SCI"), NULL, 0) == FALSE )
            {
            fprintf(stderr,"Error while calling StartScilab\n");
            return -1;
            }
        </programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="call_scilab">Call_Scilab</link>
            </member>
            <member>
                <link linkend="compile_and_run_call_scilab">Compile and run with call_scilab</link>
            </member>
            <member>
                <link linkend="SendScilabJob">SendScilabJob</link>
            </member>
            <member>
                <link linkend="TerminateScilab">TerminateScilab</link>
            </member>
            <member>
                <link linkend="DoubleManagement_callscilab">Double Management</link>
            </member>
            <member>
                <link linkend="BooleanManagement_callscilab">Boolean Management</link>
            </member>
            <member>
                <link linkend="ComplexManagement_callscilab">Complex Management</link>
            </member>
            <member>
                <link linkend="StringManagement_callscilab">String Management</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
