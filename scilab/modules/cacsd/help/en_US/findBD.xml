<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) INRIA - 
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:lang="en" xml:id="findBD">
    <refnamediv>
        <refname>findBD</refname>
        <refpurpose>initial state and system matrices B and D of a discrete-time system</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>[[x0] [,B [,D]] [,V] [,rcnd]] = findBD(jobx0,comuse [,job],A [,B],C [,D],Y [,U,tol,printw,ldwork])</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>jobx0</term>
                <listitem>
                    <para>integer option to specify whether or not the initial state  should be computed:</para>
                    <variablelist>
                        <varlistentry>
                            <term>=  </term>
                            <listitem>
                                <para>1 : compute the initial state x0;</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term>=  </term>
                            <listitem>
                                <para>2 : do not compute the initial state (possibly, because x0 is known to be zero).</para>
                            </listitem>
                        </varlistentry>
                    </variablelist>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>comuse</term>
                <listitem>
                    <para>integer option to specify whether the system matrices B and D should be computed or used:</para>
                    <variablelist>
                        <varlistentry>
                            <term>=  </term>
                            <listitem>
                                <para>1 : compute the matrices B and D, as specified by job;</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term>=  </term>
                            <listitem>
                                <para>2 : use the matrices B and D, as specified by job;</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term>=  </term>
                            <listitem>
                                <para>3 : do not compute/use the matrices B and D.</para>
                            </listitem>
                        </varlistentry>
                    </variablelist>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>job</term>
                <listitem>
                    <para>integer option to determine which of the system matrices B and D should be computed or used:</para>
                    <variablelist>
                        <varlistentry>
                            <term>=  </term>
                            <listitem>
                                <para>1 : compute/use the matrix B only (D is known to be zero);</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term>=  </term>
                            <listitem>
                                <para>2 : compute/use the matrices B and D.</para>
                            </listitem>
                        </varlistentry>
                    </variablelist>
                    <para>
                        job must not be specified if jobx0 = 2 and comuse = 2, or if comuse = 3.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>A</term>
                <listitem>
                    <para>state matrix of the given system</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>B</term>
                <listitem>
                    <para>optional, input matrix of the given system</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>C</term>
                <listitem>
                    <para>output matrix of the given system</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>D</term>
                <listitem>
                    <para>optional, direct feedthrough of the given system</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Y</term>
                <listitem>
                    <para>the t-by-l output-data sequence matrix.  Column  j  of  Y  contains the  t  values of the j-th output component for consecutive time increments.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>U</term>
                <listitem>
                    <para>the t-by-m input-data sequence matrix (input when jobx0 = 1  and comuse = 2, or comuse = 1).  Column  j  of  U  contains the  t  values of the j-th input component for consecutive time increments.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>tol</term>
                <listitem>
                    <para>optional, tolerance used for estimating the rank of
                        matrices. If  tol &gt; 0,  then the given value of  tol  is used as
                        a lower bound for the reciprocal condition number; an m-by-n matrix
                        whose estimated condition number is less than  1/tol  is considered
                        to be of full rank. Default:    m*n*epsilon_machine where
                        epsilon_machine is the relative machine precision.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>printw</term>
                <listitem>
                    <para>optional, switch for printing the warning messages.</para>
                    <variablelist>
                        <varlistentry>
                            <term>=  </term>
                            <listitem>
                                <para>1:  print warning messages;</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term>=  </term>
                            <listitem>
                                <para>0:  do not print warning messages.</para>
                            </listitem>
                        </varlistentry>
                    </variablelist>
                    <para>
                        Default:    printw = 0.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>ldwork</term>
                <listitem>
                    <para>(optional) the workspace size. Default :   computed by the formula LDWORK = MAX( minimum workspace size needed, 2*CSIZE/3, CSIZE - ( m + l )*t - 2*n*( n + m + l ) - l*m ) where CSIZE is the cache size in double precision words.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>x0</term>
                <listitem>
                    <para>initial state vector</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Br</term>
                <listitem>
                    <para>system input matrix</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Dr</term>
                <listitem>
                    <para>system direct feedthrough matrix</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>V</term>
                <listitem>
                    <para>the n-by-n orthogonal matrix which reduces A to a real Schur form (output when jobx0 = 1 or comuse = 1).</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>rcnd</term>
                <listitem>
                    <para>(optional) the reciprocal condition numbers of the matrices involved in rank decisions.</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            findBD  function for estimating the initial state and the system
            matrices B and D of a discrete-time system, using SLICOT routine 
            IB01CD.
        </para>
        <programlisting role=""><![CDATA[ 
   [x0,Br,V,rcnd] = findBD(1,1,1,A,C,Y,U)
[x0,Br,Dr,V,rcnd] = findBD(1,1,2,A,C,Y,U)
      [Br,V,rcnd] = findBD(2,1,1,A,C,Y,U)
    [B,Dr,V,rcnd] = findBD(2,1,2,A,C,Y,U)
      [x0,V,rcnd] = findBD(1,2,1,A,B,C,Y,U)
      [x0,V,rcnd] = findBD(1,2,2,A,B,C,D,Y,U)
        [x0,rcnd] = findBD(2,2)      // (Set x0 = 0, rcnd = 1)
      [x0,V,rcnd] = findBD(1,3,A,C,Y)
 ]]></programlisting>
        <para>
            Note: the example lines above may contain at the end the parameters
            tol, printw, ldwork.
        </para>
        <para>
            FINDBD estimates the initial state and/or the system matrices Br and Dr
            of a discrete-time system, given the system matrices A, C, and possibly
            B, D, and the input and output trajectories of the system.
        </para>
        <para>
            The model structure is :
        </para>
        <programlisting role=""><![CDATA[ 
x(k+1) = Ax(k) + Bu(k),   k >= 1,
y(k)   = Cx(k) + Du(k),
 ]]></programlisting>
        <para>
            where 
            
            x(k)  is the  n-dimensional state vector (at time k),
        </para>
        <para>
            u(k)  is the  m-dimensional input vector,
        </para>
        <para>
            y(k)  is the  l-dimensional output vector,
        </para>
        <para>
            and  A, B, C, and D  are real matrices of appropriate dimensions.
        </para>
    </refsection>
    <refsection>
        <title>Comments</title>
        <variablelist>
            <varlistentry>
                <term>1.</term>
                <listitem>
                    <para>The n-by-m system input matrix B is an input parameter when jobx0 = 1  and comuse = 2, and it is an output parameter when comuse = 1.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>2.</term>
                <listitem>
                    <para>The l-by-m system matrix D is an input parameter when jobx0 = 1,  comuse = 2 and job = 2, and it is an output parameter when comuse = 1  and job = 2.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>3.</term>
                <listitem>
                    <para>The n-vector of estimated initial state x(0) is an output parameter when jobx0 = 1, but also when jobx0 = 2 and comuse &lt;= 2, in which case it is set to 0.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>4.</term>
                <listitem>
                    <para>If ldwork is specified, but it is less than the minimum workspace size  needed, that minimum value is used instead.</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[ 
//generate data from a given linear system
A = [ 0.5, 0.1,-0.1, 0.2;
      0.1, 0,  -0.1,-0.1;
     -0.4,-0.6,-0.7,-0.1;
      0.8, 0,  -0.6,-0.6];
B = [0.8;0.1;1;-1];
C = [1 2 -1 0];
SYS=syslin(0.1,A,B,C);
nsmp=100;
U=prbs_a(nsmp,nsmp/5);
Y=(flts(U,SYS)+0.3*rand(1,nsmp,'normal'));

// Compute R
S=15;L=1;
[R,N,SVAL] = findR(S,Y',U');

N=3;
METH=3;TOL=-1;
[A,C] = findAC(S,N,L,R,METH,TOL);
[X0,B,D] = findBD(1,1,2,A,C,Y',U')
SYS1=syslin(1,A,B,C,D,X0);

Y1=flts(U,SYS1);
clf();plot2d((1:nsmp)',[Y',Y1'])
]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="inistate">inistate</link>
            </member>
            <member>
                <link linkend="findx0BD">findx0BD</link>
            </member>
            <member>
                <link linkend="findABCD">findABCD</link>
            </member>
            <member>
                <link linkend="findAC">findAC</link>
            </member>
            <member>
                <link linkend="findBD">findBD</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
