<?xml version="1.0" encoding="UTF-8"?>

<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:lang="ja" xml:id="macr2lst">
    
    <refnamediv>
        
        <refname>macr2lst</refname>
        
        <refpurpose>リスト変換用の関数</refpurpose>
        
    </refnamediv>
    
    <refsynopsisdiv>
        
        <title>呼び出し手順</title>
        
        <synopsis>lst = macr2lst(function_name)</synopsis>
        
    </refsynopsisdiv>
    
    <refsection>
        
        <title>引数</title>
        
        <variablelist>
            
            <varlistentry>
                
                <term>function_name</term>
                
                <listitem>
                    
                    <para>変換する関数.</para>
                    
                </listitem>
                
            </varlistentry>
            
            <varlistentry>
                
                <term>lst</term>
                
                <listitem>
                    
                    <para>リスト.</para>
                    
                </listitem>
                
            </varlistentry>
            
        </variablelist>
        
    </refsection>
    
    <refsection>
        
        <title>説明</title>
        
        <para>
            
            このプリミティブは,コンパイル済みのScilab関数 <varname>function_name</varname>
            
            を,関数の内部表現をコード化(逆ポーランド表記)したリストに変換します.
            
        </para>
        
        <para>
            
            リストの最初のエントリは関数名,2番目および3番目のエントリは
            
            それぞれ左辺引数および右辺引数の変数名となります.
            
            それ以降のエントリは,基本的な演算子レコードもしくは
            
            <literal>if</literal>, <literal>for</literal>, ... のような制御構造の階層を含むリストのどちらかです.
            
        </para>
        
        <para>
            
            基本的な演算子レコードは, 文字列ベクトルにより記述されます.
            
            その最初の要素はオペコードを表します.
            
        </para>
        
        <informaltable border="1">
            
            <tr>
                
                <td>オペコード</td>
                
                <td>意味</td>
                
                <td>パラメータ</td>
                
            </tr>
            
            <tr>
                
                <td>"0"</td>
                
                <td>無視されるオペコード</td>
                
                <td>なし</td>
                
            </tr>
            
            <tr>
                
                <td>"1"</td>
                
                <td>使用停止</td>
                
                <td/>
                
            </tr>
            
            <tr>
                
                <td>"2"</td>
                
                <td>変数または関数リファレンス</td>
                
                <td>変数名, #rhs, #lhs</td>
                
            </tr>
            
            <tr>
                
                <td>"3"</td>
                
                <td>スタック内に文字列を配置</td>
                
                <td>文字列</td>
                
            </tr>
            
            <tr>
                
                <td>"4"</td>
                
                <td>スタック内に空の行列を配置</td>
                
                <td>なし</td>
                
            </tr>
            
            <tr>
                
                <td>"5"</td>
                
                <td>処理を適用</td>
                
                <td>処理コード, #rhs,#lhs</td>
                
            </tr>
            
            <tr>
                
                <td>"6"</td>
                
                <td>数値をスタックに配置</td>
                
                <td>数値</td>
                
            </tr>
            
            <tr>
                
                <td>"12"</td>
                
                <td>停止コマンド</td>
                
                <td>なし</td>
                
            </tr>
            
            <tr>
                
                <td>"13"</td>
                
                <td>ブレークコマンド</td>
                
                <td>なし</td>
                
            </tr>
            
            <tr>
                
                <td>"14"</td>
                
                <td>中断コマンド</td>
                
                <td>なし</td>
                
            </tr>
            
            <tr>
                
                <td>"15"</td>
                
                <td>行終端記号</td>
                
                <td>なし</td>
                
            </tr>
            
            <tr>
                
                <td>"17"</td>
                
                <td>quit コマンド</td>
                
                <td>なし</td>
                
            </tr>
            
            <tr>
                
                <td>"18"</td>
                
                <td>名前のある変数</td>
                
                <td>変数名</td>
                
            </tr>
            
            <tr>
                
                <td>"19"</td>
                
                <td>再帰的な添え字構造を作成</td>
                
                <td>パスの長さ, 最終添え字の番号</td>
                
            </tr>
            
            <tr>
                
                <td>"20"</td>
                
                <td>関数コール</td>
                
                <td>関数名, #rhs, #lhs </td>
                
            </tr>
            
            <tr>
                
                <td>"23"</td>
                
                <td>名前を指定して変数を作成</td>
                
                <td>変数名</td>
                
            </tr>
            
            <tr>
                
                <td>"24"</td>
                
                <td>0型の変数をスタックに代入</td>
                
                <td>なし</td>
                
            </tr>
            
            <tr>
                
                <td>"25"</td>
                
                <td>プロファイル用レコード</td>
                
                <td>コール数, 消費時間 </td>
                
            </tr>
            
            <tr>
                
                <td>"26"</td>
                
                <td>文字列ベクトルをスタック内に配置</td>
                
                <td>#rows, #columns, 要素のシーケンス</td>
                
            </tr>
            
            <tr>
                
                <td>"27"</td>
                
                <td>組み込みリファレンスをスタックに配置</td>
                
                <td>インターフェイス番号, インターフェイス内の位置, 関数名</td>
                
            </tr>
            
            <tr>
                
                <td>"28"</td>
                
                <td>continue コマンド</td>
                
                <td>なし</td>
                
            </tr>
            
            <tr>
                
                <td>"29"</td>
                
                <td>代入</td>
                
                <td>#lhs, 表示モード, (変数名, #rhs)*</td>
                
            </tr>
            
            <tr>
                
                <td>"30"</td>
                
                <td>論理値式 省略形</td>
                
                <td>型, ジャンプの長さ</td>
                
            </tr>
            
            <tr>
                
                <td>"31"</td>
                
                <td>コメント</td>
                
                <td>コメント</td>
                
            </tr>
            
            <tr>
                
                <td>"99"</td>
                
                <td>return コマンド</td>
                
                <td>なし</td>
                
            </tr>
            
            <tr>
                
                <td> &gt; "100"</td>
                
                <td>組み込みコール (古い)</td>
                
                <td>100*fun, #rhs, #lhs, fin</td>
                
            </tr>
            
        </informaltable>
        
        <para>
            
            <link linkend="fun2string">fun2string</link> 関数は,
            
            初期コードを生成する際に使用できます.
            
        </para>
        
    </refsection>
    
    <refsection>
        
        <title>例</title>
        
        <programlisting role="example"><![CDATA[
//DISPLAY
function y=foo(x,flag)
  if flag then
    y=sin(x)
  else
    y=cos(x)
  end
endfunction
L=macr2lst(foo)
fun2string(L)
 ]]></programlisting>
        
    </refsection>
    
    <refsection role="see also">
        
        <title>参照</title>
        
        <simplelist type="inline">
            
            <member>
                
                <link linkend="macrovar">macrovar</link>
                
            </member>
            
            <member>
                
                <link linkend="fun2string">fun2string</link>
                
            </member>
            
            <member>
                
                <link linkend="macr2tree">macr2tree</link>
                
            </member>
            
            <member>
                
                <link linkend="tree2code">tree2code</link>
                
            </member>
            
        </simplelist>
        
    </refsection>
    
</refentry>

