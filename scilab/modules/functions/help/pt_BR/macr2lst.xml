<?xml version="1.0" encoding="ISO-8859-1"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="macr2lst" xml:lang="en">
    <refnamediv>
        <refname>macr2lst</refname>
        <refpurpose>conversão de função para lista</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Seqüência de Chamamento</title>
        <synopsis>lst = macr2lst(function_name)</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>function_name</term>
                <listitem>
                    <para>a function to be converted.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>lst</term>
                <listitem>
                    <para>a list.</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Descrição</title>
        <para>Esta primitiva converte uma versão compilada do Scilab
            <varname>function_name</varname> em uma lista que codifica a representação
            interna da função (notação polonesa inversa).
        </para>
        <para>A primeira entrada da lista é o nome da função, as segunda e
            terceira são, respectivamente, os vetores das variáveis de lado esquerdo e
            direito (lhs e rhs). As entradas seguintes são registros de operação
            básica ou listas que contém as estruturas de controle hierárquicas como <literal>if</literal>, <literal>for</literal>, ...
        </para>
        <para>Registros de operação básica são descritos por um vetor de strings
            cujo primeiro elemento representa código do operador (op code).
        </para>
        <informaltable border="1">
            <tr>
                <td>op codes</td>
                <td>significado</td>
                <td>parâmetros</td>
            </tr>
            <tr>
                <td>"0"</td>
                <td>opcode ignorado</td>
                <td>nenhum</td>
            </tr>
            <tr>
                <td>"1"</td>
                <td>não mais usado</td>
                <td/>
            </tr>
            <tr>
                <td>"2"</td>
                <td>referência à função ou variável</td>
                <td>nome da variável, #rhs, #lhs</td>
            </tr>
            <tr>
                <td>"3"</td>
                <td>coloca um string na pilha</td>
                <td>um string</td>
            </tr>
            <tr>
                <td>"4"</td>
                <td>coloca uma matriz vazia na pilha</td>
                <td>nenhum</td>
            </tr>
            <tr>
                <td>"5"</td>
                <td>aplica uma operação</td>
                <td>código de operação, #rhs,#lhs</td>
            </tr>
            <tr>
                <td>"6"</td>
                <td>coloca um número na pilha</td>
                <td>o número</td>
            </tr>
            <tr>
                <td>"12"</td>
                <td>comando pause</td>
                <td>nenhum</td>
            </tr>
            <tr>
                <td>"13"</td>
                <td>comando break</td>
                <td>nenhum</td>
            </tr>
            <tr>
                <td>"14"</td>
                <td>comando abort</td>
                <td>nenhum</td>
            </tr>
            <tr>
                <td>"15"</td>
                <td>marca de fim da linha</td>
                <td>nenhum</td>
            </tr>
            <tr>
                <td>"17"</td>
                <td>comando quit</td>
                <td>nenhum</td>
            </tr>
            <tr>
                <td>"18"</td>
                <td>variável nomeada</td>
                <td>nome da variável</td>
            </tr>
            <tr>
                <td>"19"</td>
                <td>cria estrutura de índice recursiva</td>
                <td>comprimento do endereço, número de índices finais</td>
            </tr>
            <tr>
                <td>"20"</td>
                <td>chamada a função</td>
                <td>nome da função, #rhs, #lhs</td>
            </tr>
            <tr>
                <td>"23"</td>
                <td>cria variável a partir do nome</td>
                <td>nome da variável</td>
            </tr>
            <tr>
                <td>"24"</td>
                <td>coloca uma variável de tipo 0 na pilha</td>
                <td>nenhum</td>
            </tr>
            <tr>
                <td>"25"</td>
                <td>registro de perfil</td>
                <td>número da chamada, gasto de tempo</td>
            </tr>
            <tr>
                <td>"26"</td>
                <td>coloca um vetor de strings na pilha</td>
                <td>#linhas, #colunas, seqüência de elementos</td>
            </tr>
            <tr>
                <td>"27"</td>
                <td>coloca uma referência a um builtin na pilha</td>
                <td>número da interface, posição da interface, nome da função</td>
            </tr>
            <tr>
                <td>"28"</td>
                <td>comando continue</td>
                <td>nenhum</td>
            </tr>
            <tr>
                <td>"29"</td>
                <td>atribuição</td>
                <td>#lhs, modo de exibição, (nome da variável, #rhs)*</td>
            </tr>
            <tr>
                <td>"30"</td>
                <td>curto circuito de expressão lógica</td>
                <td>tipo, tamanho do salto (jump)</td>
            </tr>
            <tr>
                <td>"31"</td>
                <td>comentário</td>
                <td>o comentário</td>
            </tr>
            <tr>
                <td>"99"</td>
                <td>comando return</td>
                <td>nenhum</td>
            </tr>
            <tr>
                <td>&gt; "100"</td>
                <td>chamada a um builtin (obsoleto)</td>
                <td>100*fun, #rhs, #lhs, fin</td>
            </tr>
        </informaltable>
        <para>
            A função <link linkend="fun2string">fun2string</link> pode ser usada
            para se gerar o código inicial
        </para>
    </refsection>
    <refsection>
        <title>Exemplos</title>
        <programlisting role="example"><![CDATA[
//EXIBIÇÃO
function y=foo(x,flag)
  if flag then
    y=sin(x)
  else
    y=cos(x)
  end
endfunction
L=macr2lst(foo)
fun2string(L)
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>Ver Também</title>
        <simplelist type="inline">
            <member>
                <link linkend="macrovar">macrovar</link>
            </member>
            <member>
                <link linkend="fun2string">fun2string</link>
            </member>
            <member>
                <link linkend="macr2tree">macr2tree</link>
            </member>
            <member>
                <link linkend="tree2code">tree2code</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
