<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) ????-2008 - INRIA
 *
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:lang="en" xml:id="showprofile">
    <refnamediv>
        <refname>showprofile</refname>
        <refpurpose> extracts and displays execution profiles of a Scilab function</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>showprofile(fun)</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>fun</term>
                <listitem>
                    <para>a Scilab function</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            To use <literal>showprofile</literal> the Scilab function must have been prepared for
            profiling (see exec).
        </para>
        <para>
            For such function, When such a function is executed the systems counts
            how many time each line is executed and how may cpu time is spend for
            each line execution. These data are stored within the function data
            structure.  The <literal>showprofile</literal> function outputs profiling results
            (see <literal>profile</literal>) with text of the function lines.
        </para>
        <para>
            Function text is rebuild with <literal>fun2string</literal>.
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[ 
//define function and prepare it for profiling
deff('x=foo(n)',['if n==0 then'
                 '  x=[]'
                 'else'
                 '  x=0'
                 '  for k=1:n'
                 '    s=svd(rand(n+10,n+10))'
                 '    x=x+s(1)'
                 '  end'
                 'end'],'p')

//call the function
foo(30)

//get execution profiles
showprofile(foo)
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="profile">profile</link>
            </member>
            <member>
                <link linkend="plotprofile">plotprofile</link>
            </member>
            <member>
                <link linkend="fun2string">fun2string</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
