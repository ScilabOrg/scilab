<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) ????-2008 - INRIA
 * Copyright (C) 2013 - Samuel GOUGEON
 * Copyright (C) 2013 - Scilab Enterprises - Simon MARCHETTO
 *
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:lang="en" xml:id="profile">
    <refnamediv>
        <refname>profile</refname>
        <refpurpose>Returns the profiling results of a function</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>c = profile(fun)</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>fun</term>
                <listitem>
                    <para>a Scilab function</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>c</term>
                <listitem>
                    <para>a nx3 matrix containing the profiling results:
                        <itemizedlist>
                            <listitem>
                                <para>
                                    <literal>c(i,1)</literal> : number of times the line i of the function has been executed
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <literal>c(i,2)</literal> : cumulated CPU time [in seconds] spent to execute the line i of the function
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <literal>c(i,3)</literal> : Measurement of the interpreter effort to execute once the line i of the function [arbitrary unit]
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            To use <literal>profile</literal> on a function, the profiling of this function must have been first activated:
            <itemizedlist>
                <listitem>
                    <para>
                        either by using the <link linkend="add_profiling">add_profiling</link> command.
                    </para>
                </listitem>
                <listitem>
                    <para>
                        or if the function has beed defined with the <link linkend="deff">deff</link> command, by setting the optional argument of <link linkend="deff">deff</link> to "p".
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            Once the function executed, calling <literal>profile</literal> returns a matrix, where each row contains the profiling results for the corresponding function line (including the header line of the function), such as the number of calls, and the total CPU time spent in that line, and a measurement of the interpretor effort to execute the line, as following:
        </para>
        <para>
            <informaltable border="1">
                <tr>
                    <td>Number of calls</td><td>Total CPU time (s)</td><td>Interpretor effort</td>
                </tr>
                <tr>
                    <td>1</td><td>0</td><td>0</td>
                </tr>
                <tr>
                    <td>300</td><td>0.1</td><td>0</td>
                </tr>
                <tr>
                    <td>300</td><td>3.59</td><td>5</td>
                </tr>
                <tr>
                    <td>...</td><td>...</td><td>...</td>
                </tr>
            </informaltable>
        </para>
        <para>
            Here we can see that the 3th line of the function has been called 300 times, for a total CPU time of 3.59 seconds.
        </para>
        <para>
            Note: due to the precision limit of CPU time measure (typically one micro second), some executed lines which execution is very fast may appear with a CPU total time of 0.
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[
// Function to be profiled
function x = foo(n)
  if n > 0 then
    x = 0;
    for k = 1:n
      s = svd(rand(n, n));
      x = x + s(1);
    end
  else
    x = [];
  end
endfunction

// Enables the profiling of the function
add_profiling("foo");

// Executes the function
foo(200);

// Returns the function profiling results
profile(foo)
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="add_profiling">add_profiling</link>
            </member>
            <member>
                <link linkend="deff">deff</link>
            </member>
            <member>
                <link linkend="plotprofile">plotprofile</link>
            </member>
            <member>
                <link linkend="showprofile">showprofile</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
