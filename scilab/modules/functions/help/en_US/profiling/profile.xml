<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) ????-2008 - INRIA
 * Copyright (C) 2013 - Samuel GOUGEON : Specify unit of CPU time. Presentation of results c improved
 *
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:lang="en" xml:id="profile">
    <refnamediv>
        <refname>profile</refname>
        <refpurpose>Returns the profiling data of a function</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>c = profile(fun)</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>fun</term>
                <listitem>
                    <para>a Scilab function</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>c</term>
                <listitem>
                    <para>a nx3 matrix containing the execution profiles
                        <itemizedlist>
                            <listitem>
                                <para>
                                    <literal>c(i,1)</literal> : number of times the line #i of the function has been executed
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <literal>c(i,2)</literal> : cumulated CPU time [in seconds] spent to execute the line #i
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <literal>c(i,3)</literal> : Measurement of the interpreter effort to execute once the line #i [arbitrary unit]
                                </para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            To use <literal>profile</literal> on a function, the profiling of this function must be first activated with <link linkend="add_profiling">add_profiling</link>.
        </para>
        <para>
            Then, when this function is executed, the system counts how many times each line is executed, and how many cpu time is spent for
            each line execution [in seconds]. The <literal>profile</literal> function returns these data in the first two columns of the returned matrix.
            The third column gives a measure of interpretor effort for one execution of the corresponding line.
        </para>
        <para>
            Note: the n-th line of <literal>c</literal> corresponds to n-th line of the
            function (including the first line).
        </para>
        <para>
            Due to the precision of the processor clock (typically one
            micro second), some executed lines may appear with a cpu time of 0, even if
            total cpu time really spent is larger.
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[
function x=foo(a, n)
 x=0;
 for i=1:n
   if x<10 then
     x=x+a
   else
     x=x+1
   end
 end
 x=x^2+1
endfunction

add_profiling("foo")
foo(0.1,100) //run the function
profile(foo) //extract profile information
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="add_profiling">add_profiling</link>
            </member>
            <member>
                <link linkend="deff">deff</link>
            </member>
            <member>
                <link linkend="plotprofile">plotprofile</link>
            </member>
            <member>
                <link linkend="showprofile">showprofile</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
