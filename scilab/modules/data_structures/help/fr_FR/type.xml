<?xml version="1.0" encoding="UTF-8"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:lang="fr" xml:id="type">
    <refnamediv>
        <refname>type</refname>
        <refpurpose>Retourne le type d'une variable  </refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Séquence d'appel</title>
        <synopsis> i =type(x)</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Paramètres</title>
        <variablelist>
            <varlistentry>
                <term>x  </term>
                <listitem>
                    <para>
                        objet Scilab
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>i  </term>
                <listitem>
                    <para>entier
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            <literal>type(x)</literal> renvoie un entier donnant le code
            numérique du type de <literal>x</literal> définit comme suit
            :
        </para>
        <variablelist>
            <varlistentry>
                <term>1</term>
                <listitem>
                    <para>matrice réelle ou complexe..</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>2</term>
                <listitem>
                    <para>
                        <link linkend="poly">matrice polynomiale</link>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>4</term>
                <listitem>
                    <para>
                        <link linkend="matrices">matrice booléenne</link>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>5</term>
                <listitem>
                    <para>
                        <link linkend="sparse">matrice creuse</link>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>6</term>
                <listitem>
                    <para>
                        <link linkend="sparse">matrice creuse booléenne</link>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>7</term>
                <listitem>
                    <para>matrice creuse au format Matlab</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>8</term>
                <listitem>
                    <para>
                        matrice d'<link linkend="int8">entiers</link> codés
                        sur 1 (int8), 2 (int16) ou 4 (int32) octets.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>9</term>
                <listitem>
                    <para>
                        matrice de "<link linkend="graphics_entities">handle</link>" sur les objets
                        graphiques.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>10</term>
                <listitem>
                    <para>
                        matrice de <link linkend="strings">chaînes de caractères</link>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>11</term>
                <listitem>
                    <para>fonction non-compilée (code Scilab). Fonction créée
                        par <link linkend="deff">deff</link> avec l'argument
                        'n'.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>13</term>
                <listitem>
                    <para>
                        <link linkend="function">fonction</link> compilée (code Scilab).
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>14</term>
                <listitem>
                    <para>bibliothèque de fonctions.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>15</term>
                <listitem>
                    <para>
                        <link linkend="list">liste</link>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>16</term>
                <listitem>
                    <para>
                        Liste typée (<link linkend="tlist">tlist</link>).
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>17</term>
                <listitem>
                    <para>
                        liste typée orientée matrice (<link linkend="mlist">mlist</link>).
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>128</term>
                <listitem>
                    <para>
                        pointeur (Use case: <link linkend="lufact">lufact</link>).
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>129</term>
                <listitem>
                    <para>polynôme implicite utilisé pour indexer.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>130</term>
                <listitem>
                    <para>
                        Fonction interne Scilab, aussi appellé <emphasis role="italic">primitive</emphasis> (Code C, C++ ou
                        Fortran).
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>0</term>
                <listitem>
                    <para>
                        <emphasis role="italic"> variable
                            nulle
                        </emphasis>
                        .Ce type est principalement utilisé en
                        interne par Scilab. Si une fonction n'a pas pas d'argument
                        de retour déclaré comme <literal>disp</literal>, quand
                        elle est appelée elle retourne une <emphasis role="italic"> variable nulle</emphasis>. Si une fonction
                        est appellée avec un argument de la liste des arguments
                        d'entrée omis comme <literal>foo(a,,b)</literal>
                        l'argument manquant est assigné à la <emphasis role="italic"> variable nulle</emphasis>.
                    </para>
                    <para>
                        Note: Si une <emphasis role="italic"> variable
                            nulle
                        </emphasis>
                        est affectée à un nom, ce nom est
                        supprimé de la liste des variables définies.
                        <literal>x=disp(1)</literal> détruit
                        <literal>x</literal>.
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
        <para>Note: pour certaines variables, à cause de la représentation
            interne, <emphasis role="italic">type(x)</emphasis> retournera
            tlist (16) ou mlist (17). C'est le cas de <emphasis role="italic">rational</emphasis>, <emphasis role="italic">state-space</emphasis>, 
<emphasis role="italic">uitree</emphasis>, <emphasis role="italic">hypermat</emphasis> et <emphasis role="italic">struct</emphasis>. Merci de considérer l'utilisation
            de <link linkend="typeof">typeof</link> à la place.
        </para>
    </refsection>
    <refsection>
        <title>Exemples</title>
        <programlisting role="example"><![CDATA[
a=42;
type(a)

b=%t;
type(b)

c="foo"
type(c)

d=sparse([1,2;4,5;3,10],[1,2,3]);
type(d)

e = tlist(["listtype","field1","field2"], [], []);
type(e)

f=poly(0,"s");
type(f)

g=int8([1 -120 127 312]);
type(g)

h=mlist(['V','name','value'],['a','b';'c' 'd'],[1 2; 3 4]);
type(h)

l = list(1,["a" "b"]);
type(l)

deff('[x]=mymacro(y,z)',['a=3*y+1'; 'x=a*z+y']);
type(mymacro)

deff('[x]=myplus(y,z)','x=y+z','n');
type(myplus)

]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>Voir aussi</title>
        <simplelist type="inline">
            <member>
                <link linkend="typeof">typeof</link>
            </member>
            <member>
                <link linkend="inttype">inttype</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
