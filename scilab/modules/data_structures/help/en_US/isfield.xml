<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2009 - DIGITEO - Pierre MARECHAL <pierre.marechal@scilab.org>
 * Copyright (C) 2013 - Samuel GOUGEON : extension to tlist and mlist
 *
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:lang="en" xml:id="isfield">
    <refnamediv>
        <refname>isfield</refname>
        <refpurpose>checks if the given fieldname exists in a structure, a mlist, a tlist or in a list of these ones</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>bool = isfield(s, fieldname)</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>s</term>
                <listitem>
                    <para>a struct array, a tlist, a mlist or a list of struct arrays, tlist or mlist.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>fieldname</term>
                <listitem>
                    <para>a matrix of strings (if <varname>s</varname> is a struct array, a tlist or a mlist): names of fields to be detected</para>
                    <para>a single string (if <varname>s</varname> is a list of struct arrays, tlist or mlist): name of the field to be detected.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>bool</term>
                <listitem>
                    <para>
                        a matrix of boolean (same format as <varname>fieldname</varname> if <varname>s</varname> is a struct array, a tlist or a mlist, 
                        or same size as <varname>s</varname> (the list) in the other case).
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            This function returns <constant>%t</constant> if the specified structure or tlist or mlist <varname>s</varname> includes the field <varname>fieldname</varname>, regardless of the corresponding value. For a structure, the hidden field <code class="literal">dims</code> is ignored.
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[ 
s = struct("field_1",123,"field_2",456,"field_4",789)
s1 = struct("field_1",123,"field_2",456,"field_3",789)

// Single Fieldname Syntax
isfield( s , "field_1"  )
 
// Multiple Fieldname Syntax
isfield( s , [ "field_1" "field_2" ; "field_3" "field_4" ] )

// with a tlist:
t = tlist(["test" "t" "n","","p"], "Hello", %pi, "anonymous", (1-%z)^3)
isfield(t, ["b" "t" ""])  // =>  F  T  T  (anonymous fields can be detected)

// With a list of struct
isfield(list(s,s1), "field_4")
isfield(list(s,s1), "field_3")

// With a list of struct and tlist
isfield(list(s,t), "field_1")
isfield(list(s,t), "n")
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="struct">struct</link>
            </member>
            <member>
                <link linkend="tlist">tlist</link>
            </member>
            <member>
                <link linkend="mlist">mlist</link>
            </member>
            <member>
                <link linkend="getfield">getfield</link>
            </member>
            <member>
                <link linkend="definedfields">definedfields</link>
            </member>
        </simplelist>
    </refsection>
    <refsection>
        <title>History</title>
        <revhistory>
            <revision>
                <revnumber>5.5.0</revnumber>
                <revremark>
                    Extension to any mlist and tlist. 
                </revremark>
            </revision>
            <revision>
                <revnumber>5.5.1</revnumber>
                <revremark>
                    Extension to list of struct array, mlist and tlist. 
                </revremark>
            </revision>
        </revhistory>
    </refsection>
</refentry>
