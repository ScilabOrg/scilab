<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns5="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="typeof" xml:lang="en">
    <refnamediv>
        <refname>typeof</refname>
        <refpurpose>object type</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Calling Sequence</title>
        <synopsis>[t]=typeof(object)</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>object</term>
                <listitem>
                    <para>a Scilab object</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>t</term>
                <listitem>
                    <para>a string</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            <code>t=typeof(object)</code> returns one of the following
            strings:
        </para>
        <variablelist>
            <varlistentry>
                <term>"constant"</term>
                <listitem>
                    <para>
                        if <varname>object</varname> is a real or complex matrix of double.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"polynomial"</term>
                <listitem>
                    <para>
                        if <varname>object</varname> is a <link linkend="poly">polynomial matrix</link>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"function"</term>
                <listitem>
                    <para>
                        if <varname>object</varname> is a <link linkend="function">function</link> (Scilab code). See also <link linkend="deff">deff</link>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"handle"</term>
                <listitem>
                    <para>
                        if <varname>object</varname> is an <link linkend="graphics_entities">handle</link>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"string"</term>
                <listitem>
                    <para>
                        if <varname>object</varname> is a matrix made of <link linkend="strings">character strings</link>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"boolean"</term>
                <listitem>
                    <para>
                        if <varname>object</varname> is a <link linkend="matrices">boolean matrix</link>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"list"</term>
                <listitem>
                    <para>
                        if <varname>object</varname> is a <link linkend="list">list</link>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"rational"</term>
                <listitem>
                    <para>
                        if <varname>object</varname> is a <link linkend="rational">rational matrix</link> (transfer matrix).
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"state-space"</term>
                <listitem>
                    <para>
                        if <varname>object</varname> is a state-space model (see <link linkend="syslin">syslin</link>).
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"sparse"</term>
                <listitem>
                    <para>
                        if <varname>object</varname> is a (real) <link linkend="sparse">sparse matrix</link>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"boolean sparse"</term>
                <listitem>
                    <para>
                        if <varname>object</varname> is a <link linkend="sparse">boolean sparse matrix</link>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"hypermat"</term>
                <listitem>
                    <para>
                        if <varname>object</varname> is a <link linkend="hypermatrices">hypermatrix</link> (<literal>N</literal>-dimension array with <literal><![CDATA[N<=3]]></literal>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"st"</term>
                <listitem>
                    <para>
                        if <varname>object</varname> is a <link linkend="struct">structure</link>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"ce"</term>
                <listitem>
                    <para>
                        if <varname>object</varname> is a <link linkend="cell">cell</link> array.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"fptr"</term>
                <listitem>
                    <para>
                        if <varname>object</varname> is a built-in Scilab function, called also <emphasis role="italic">gateway</emphasis> (C, C++ or Fortran code).
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"pointer"</term>
                <listitem>
                    <para>
                        if <varname>object</varname> is a pointer (See an use case: <link linkend="lufact">lufact</link>).
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"size implicit"</term>
                <listitem>
                    <para>
                        if <varname>object</varname> is a size implicit polynomial used for indexing. This a purely internal value.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"library"</term>
                <listitem>
                    <para>
                        if <varname>object</varname> is a function <link linkend="library">library</link>.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"int8" or "uint8" or "int16" or "uint16" or "int32" or "uint32"</term>
                <listitem>
                    <para>
                        if <varname>object</varname> is a matrix of [unsigned] integers stored on 8, 16 or 32 bits. (See <link linkend="int8">int</link>)
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
        <para>
            <note>
                Note that if the <varname>object</varname> is a <link linkend="tlist">tlist</link> or <link linkend="mlist">mlist</link>, <function>typeof</function> will return the first string in the first list entry.
            </note>
        </para>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[ 
typeof(1)
typeof(poly(0,'x'))
 
typeof(1/poly(0,'x'))
typeof(%t)
 
w=sprand(100,100,0.001);
typeof(w)
typeof(w==w)
 
deff('y=f(x)','y=2*x');
typeof(f)
 
L=tlist(['V','a','b'],18,'Scilab');
typeof(L)
 
typeof(corelib)
 ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
            <member>
                <link linkend="type">type</link>
            </member>
            <member>
                <link linkend="strings">strings</link>
            </member>
            <member>
                <link linkend="syslin">syslin</link>
            </member>
            <member>
                <link linkend="poly">poly</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
