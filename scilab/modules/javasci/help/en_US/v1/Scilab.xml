<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2008 - INRIA - Allan CORNET
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry version="5.0-subset Scilab" xml:id="javasci.Scilab" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns5="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:db="http://docbook.org/ns/docbook">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>

  <refnamediv>
    <refname>javasci.Scilab (deprecated)</refname>

    <refpurpose>This class provides the basic methods to execute Scilab code
    and scripts. Deprecated: Please use <link linkend="javasci">Javasci v2</link></refpurpose>
  </refnamediv>

  <refsection>
    <title>Description</title>

    <para>This class is static. Since the Scilab environnement is persistant,
    all variables will remain accessible with the Java application.</para>

    <para><emphasis role="bold">Method Summary :</emphasis></para>

    <itemizedlist>
      <listitem>
        <para><emphasis><literal>public static void
        Events()</literal></emphasis> - Execute a Scilab event</para>
      </listitem>

      <listitem>
        <para><emphasis><literal>public static boolean
        HaveAGraph()</literal></emphasis> -Check if there is any scilab
        graphic window open (return True if it is the case).</para>
      </listitem>

      <listitem>
        <para><emphasis><literal>public static boolean Exec(String
        job)</literal></emphasis> - Execute a job in scilab. return true if
        there is no error.</para>
		<para>Note that the given expression must be consistent by itself. Then, a serie of <literal>Exec</literal> defining a function will not work. Please consider calling it with a single string instruction or using a temporary file with the method <literal>ExecuteScilabScript</literal>.</para>
		<para>For example: <literal>Scilab.Exec("function foo(); disp('bar'); endfunction");</literal> will work when <literal>Scilab.Exec("function foo();"); Scilab.Exec("disp('bar');"); Scilab.Exec("endfunction;");</literal> will not work since each statement being processed independently</para>
      </listitem>

      <listitem>
        <para><emphasis><literal>public static native boolean ExistVar(String
        VarName) </literal></emphasis>- Detect if VarName exists in Scilab.
        return true if Varname exist.</para>
      </listitem>

      <listitem>
        <para><emphasis><literal>public static native int TypeVar(String
        VarName)</literal></emphasis> - Return Scilab type of VarName. See
        <link linkend="type">type</link></para>
      </listitem>

      <listitem>
        <para><emphasis><literal>public static native int
        GetLastErrorCode()</literal></emphasis> - Return last Error code. See
        <link linkend="lasterror">lasterror</link></para>
      </listitem>

      <listitem>
        <para><emphasis><literal>public static boolean
        ExecuteScilabScript(String scilabscriptfilename)
        </literal></emphasis>- Execute a scilab script (.sce) return true if
        there is no error.</para>
      </listitem>

      <listitem>
        <para><emphasis><literal>public static native boolean
        Finish()</literal></emphasis> - Terminate scilab (call scilab.quit ,
        close a scilab object)</para>
      </listitem>
    </itemizedlist>
  </refsection>

  <refsection>
    <title>Examples</title>

    <programlisting role="java"><![CDATA[ 
// A Scilab / Java example 
// Filename: ScilabExample.java

import javasci.Scilab;

public class ScilabExample {
	public static void main(String []args){
		String myVar="myVariable";
		Scilab.Exec(myVar+"=(%pi^4)/90;disp(myVariable);"); // Simple display
		if (Scilab.ExistVar(myVar)) {
			System.out.println("Variable "+myVar+" exists. Type: "+Scilab.TypeVar(myVar));
		}
		if (!Scilab.Exec("disp(plop);")) { // Error
			System.err.println("Last error: "+Scilab.GetLastErrorCode()); // Error
		}
		Scilab.Finish();
	}
}
 ]]></programlisting>
  </refsection>

  <refsection role="see also">
<title>See Also</title>

    <simplelist type="inline">
    <member>
        Browse <link type="remote" linkend="javasci/javadoc/index.html">the documentation of Javasci v2.</link>
       </member>
      <member><link linkend="compile_and_run_javasci_v1">Compile and run with Javasci v1</link></member>

      <member><link linkend="SciDouble">SciDouble</link></member>

      <member><link linkend="SciDoubleArray">SciDoubleArray</link></member>

      <member><link linkend="SciString">SciString</link></member>

      <member><link linkend="SciStringArray">SciStringArray</link></member>

      <member><link linkend="type">type</link></member>

      <member><link linkend="lasterror">lasterror</link></member>
    </simplelist>
  </refsection>

  <refsection>
    <title>Authors</title>

    <para>A.C</para>
  </refsection>
</refentry>
