<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2007 - INRIA - Allan CORNET
 * Copyright (C) 2007 - INRIA - Sylvestre LEDRU
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<project name="javasci" default="build-examples">
  <import file="../../build.incl.xml"/>
  <property name="library-v1.name" value="${library.javasci-v1.name}"/>
  <property name="library.name" value="${library.javasci.name}"/>
  <property name="library.title" value="Scilab Java API"/>
  <description>
	Build the Java/Scilab connecter (javasci) module
  </description>
  <!-- Compile sources -->
  <target name="compile-v1" description="Build sources of Javasci v1" depends="init">
    <mkdir dir="${classes.dir}/v1/"/>
    <javac srcdir="src/java/" destdir="${classes.dir}/v1/" classpathref="compile.classpath" deprecation="on" debug="off" verbose="off" listfiles="on" includeAntRuntime="no" includes="javasci/**/*.java" source="6" target="6"/>
  </target>
  <!-- Compile sources -->
  <target name="compile" description="Build sources of Javasci v2" depends="init">
    <mkdir dir="${classes.dir}/v2"/>
    <javac srcdir="src/java/" destdir="${classes.dir}/v2" classpathref="compile.classpath" deprecation="on" debug="off" verbose="off" listfiles="on" includeAntRuntime="no" includes="org/**/*.java" source="6" target="6"/>
  </target>
  <property name="examples.classes.dir" location="${build.dir}/examples/"/>
  <target name="build-examples" description="Build the examples" depends="jar, jar-v1">
    <property name="examples.src.dir" location="examples/others/"/>
    <mkdir dir="${examples.classes.dir}"/>
    <javac srcdir="${examples.src.dir}" destdir="${examples.classes.dir}" classpath="${library.javasci.dir}/${library.javasci-v1.name}" deprecation="on" debug="off" verbose="off" listfiles="on" includeAntRuntime="no" source="6" target="6"/>
  </target>
  <target name="clean-examples" description="clean examples">
    <delete dir="${examples.classes.dir}"/>
  </target>
  <target name="jar-v1" description="Build the jar file" depends="compile-v1">
    <manifestclasspath property="manifest-v1.classpath" jarfile="${build.jar.dir}/${library-v1.name}">
      <classpath location="${library.jvm.dir}/${library.jvm.name}"/>
    </manifestclasspath>
    <jar destfile="${build.jar.dir}/${library-v1.name}" basedir="${classes.dir}/v1/">
      <manifest>
        <attribute name="SciAbstractDataType" value="javasci.SciAbstractDataType"/>
        <attribute name="SciBooleanArray" value="javasci.SciBooleanArray"/>
        <attribute name="SciComplexArray" value="javasci.SciComplexArray"/>
        <attribute name="SciDoubleArray" value="javasci.SciDoubleArray"/>
        <attribute name="SciString" value="javasci.SciString"/>
        <attribute name="BadDataArgumentException" value="javasci.BadDataArgumentException"/>
        <attribute name="SciAbstractArray" value="javasci.SciAbstractArray"/>
        <attribute name="SciBoolean" value="javasci.SciBoolean"/>
        <attribute name="SciComplex" value="javasci.SciComplex"/>
        <attribute name="SciDouble" value="javasci.SciDouble"/>
        <attribute name="Scilab" value="javasci.Scilab"/>
        <attribute name="SciStringArray" value="javasci.SciStringArray"/>
        <attribute name="ClassPath" value="javasci.ClassPath"/>
        <attribute name="LibraryPath" value="javasci.LibraryPath"/>
        <attribute name="Class-Path" value="${manifest-v1.classpath}"/>
      </manifest>
    </jar>
  </target>
  <!-- Create the jar -->
  <target name="jar" description="Build the jar file" depends="compile">
    <manifestclasspath property="manifest.classpath" jarfile="${build.jar.dir}/${library.name}">
      <classpath location="${library.jvm.dir}/${library.jvm.name}"/>
    </manifestclasspath>
    <jar destfile="${build.jar.dir}/${library.name}" basedir="${classes.dir}/v2/">
      <manifest>
        <attribute name="Class-Path" value="${manifest.classpath}"/>
      </manifest>
    </jar>
  </target>
</project>
