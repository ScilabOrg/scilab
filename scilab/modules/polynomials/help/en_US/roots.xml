<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2006-2008 - INRIA
 *
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at
 * http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:lang="en" xml:id="roots">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>
  <refnamediv>
    <refname>roots</refname>
    <refpurpose> roots of polynomials</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <title>Calling Sequence</title>
    <synopsis>[x]=roots(p)
[x]=roots(p,'e')</synopsis>
  </refsynopsisdiv>
  <refsection>
    <title>Parameters</title>
    <variablelist>
      <varlistentry>
        <term>p</term>
        <listitem>
          <para>polynomial with real or complex coefficients  or vector of the
	    polynomial coefficients in decreasing degree order (Matlab
	    compatibility).</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>
  <refsection>
    <title>Description</title>
    <para><literal>x=roots(p)</literal> returns in the complex vector <literal>x</literal> the roots of the
    polynomial <literal>p</literal>. For real polynomials of degree &lt;=100 the fast
      RPOLY algorithm (based on Jenkins-Traub method) is used. In the other cases the roots are computed as the
      eigenvalues of the associated companion matrix. Use
      <literal>x=roots(p,'e')</literal> to force this algorithm in any cases.</para>
  </refsection>
  <refsection>
    <title>Examples</title>
    <programlisting role="example"><![CDATA[

p=poly([0,10,1+%i,1-%i],'x');
roots(p)
A=rand(3,3);roots(poly(A,'x'))    // Evals by characteristic polynomial
spec(A)
 
  ]]></programlisting>
  </refsection>
  <refsection>
    <title>See Also</title>
    <simplelist type="inline">
      <member>
        <link linkend="poly">poly</link>
      </member>
      <member>
        <link linkend="spec">spec</link>
      </member>
      <member>
        <link linkend="companion">companion</link>
      </member>
    </simplelist>
  </refsection>
  <refsection>
    <title>Authors</title>
    <simplelist type="vert">
      <member>Serge Steer (INRIA)</member>
    </simplelist>
  </refsection>
  <refsection>
    <title>Bibliography</title>
    <para>The RPOLY algorithm is described in ACM TOMS 1 (1975) 178-189</para>
  </refsection>
  <refsection>
    <title>Used Functions</title>
    <para>The rpoly.f source codes can be found in the directory routines/control
      of a Scilab source distribution. The
      eigenvalue computation is perfomed using DGEEV and ZGEEV LAPACK codes. </para>
  </refsection>
</refentry>
