<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
 * Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
 * Copyright (C) 2006-2008 - INRIA - Serge STEER
 *
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:ns3="http://www.w3.org/1999/xhtml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org" xml:id="bezout" xml:lang="en">
    <refnamediv>
        <refname>bezout</refname>
        <refpurpose>equação de Bezout para polinômios ou inteiros</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title> Seqüência de Chamamento</title>
        <synopsis>[thegcd,U]=bezout(p1,p2)</synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Parâmetros</title>
        <variablelist>
            <varlistentry>
                <term>p1, p2</term>
                <listitem>
                    <para>dois polinômios reais ou dois escalares inteiros (tipo igual a
                        8)
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Descrição</title>
        <para>
            <literal>[thegcd,U]=bezout(p1,p2)</literal> computa o MDC
            <literal>thegcd</literal> de <literal>p1</literal> e <literal>p2</literal>
            e também uma matriz (2x2) unimodular <literal>U</literal> tal quet:
        </para>
        <para>
            <literal>[p1,p2]*U = [thegcd,0]</literal>
        </para>
        <para>
            O MMC de <literal>p1</literal> e <literal>p2</literal> é dado
            por:
        </para>
        <para>
            <literal>p1*U(1,2)</literal> (or
            <literal>-p2*U(2,2)</literal>)
        </para>
    </refsection>
    <refsection>
        <title>Exemplos</title>
        <programlisting role="example"><![CDATA[ 
// caso polinomial
x=poly(0,'x');
p1=(x+1)*(x-3)^5;p2=(x-2)*(x-3)^3;
[thegcd,U]=bezout(p1,p2)
det(U)
clean([p1,p2]*U)
thelcm=p1*U(1,2)
lcm([p1,p2])

// caso inteiro
i1=int32(2*3^5); i2=int32(2^3*3^2);
[thegcd,U]=bezout(i1,i2)
V=int32([2^2*3^5, 2^3*3^2,2^2*3^4*5]);
[thegcd,U]=gcd(V)
V*U
lcm(V)
 ]]></programlisting>
    </refsection>
    <refsection>
        <title> Ver Também</title>
        <simplelist type="inline">
            <member>
                <link linkend="poly">poly</link>
            </member>
            <member>
                <link linkend="roots">roots</link>
            </member>
            <member>
                <link linkend="simp">simp</link>
            </member>
            <member>
                <link linkend="clean">clean</link>
            </member>
            <member>
                <link linkend="lcm">lcm</link>
            </member>
        </simplelist>
    </refsection>
</refentry>
