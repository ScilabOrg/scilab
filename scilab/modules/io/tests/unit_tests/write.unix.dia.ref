//<-- CLI SHELL MODE -->
// =============================================================================
// Scilab ( http://www.scilab.org/ ) - This file is part of Scilab
// Copyright (C) 2015 - Scilab Enterprises - Sylvain GENIN
//
//  This file is distributed under the same license as the Scilab package.
// =============================================================================
//
path_double = TMPDIR + "/save_double";
path_int = TMPDIR + "/save_int";
path_int2 = TMPDIR + "/save_int2";
path_int3 = TMPDIR + "/save_int3";
path_int4 = TMPDIR + "/save_int4";
path_logic = TMPDIR + "/save_logic";
path_string = TMPDIR + "/save_string";
tst_path = "SCI/modules/io/tests/unit_tests/";
path_double_ref = tst_path+"/save_double_ref_"+getos();
path_int_ref = tst_path + "/save_int_ref_"+getos();
function check_file(computed_file, ref_file)
    fd = mopen(computed_file, "r");
    fdr = mopen(ref_file, "r");
    computed = mgetl(fd);
    expected = mgetl(fdr);
    assert_checkequal(expected, computed);
    mclose(fd);
    mclose(fdr);
endfunction
rand("seed",0);
A=rand(5,3);
write(6,A,"("" | "",3(f10.3,"" | ""))")
 |      0.211 |      0.628 |      0.561 |
 |      0.756 |      0.850 |      0.662 |
 |      0.000 |      0.686 |      0.726 |
 |      0.330 |      0.878 |      0.199 |
 |      0.665 |      0.068 |      0.544 |
write(6,rand(5,7)*10)
   2.3207478970D+00  3.0760907428D+00  2.9222666379D+00  5.0153415976D+0
   9.1847078316D+00  2.8064980218D+00  6.8568959553D+00                                                                                         
   2.3122371966D+00  9.3296162132D+00  5.6642488157D+00  4.3685875833D+0
   4.3733433355D-01  1.2800584640D+00  1.5312166838D+00                                                                                         
   2.1646326315D+00  2.1460078610D+00  4.8264719732D+00  2.6931248093D+0
   4.8185089324D+00  7.7831285959D+00  6.9708506018D+00                                                                                         
   8.8338878145D+00  3.1264199689D+00  3.3217189135D+00  6.3257448655D+0
   2.6395560009D+00  2.1190304495D+00  8.4155184263D+00                                                                                         
   6.5251349472D+00  3.6163610080D+00  5.9350947011D+00  4.0519540152D+0
   4.1481037065D+00  1.1213546665D+00  4.0620247554D+00                                                                                         
write(6,round(rand(5,7)))
   0.0000000000D+00  1.0000000000D+00  0.0000000000D+00  1.0000000000D+0
   1.0000000000D+00  0.0000000000D+00  1.0000000000D+00                                                                                         
   1.0000000000D+00  1.0000000000D+00  1.0000000000D+00  0.0000000000D+0
   0.0000000000D+00  1.0000000000D+00  0.0000000000D+00                                                                                         
   0.0000000000D+00  1.0000000000D+00  1.0000000000D+00  0.0000000000D+0
   0.0000000000D+00  0.0000000000D+00  0.0000000000D+00                                                                                         
   0.0000000000D+00  1.0000000000D+00  0.0000000000D+00  0.0000000000D+0
   1.0000000000D+00  0.0000000000D+00  1.0000000000D+00                                                                                         
   1.0000000000D+00  0.0000000000D+00  0.0000000000D+00  1.0000000000D+0
   1.0000000000D+00  1.0000000000D+00  0.0000000000D+00                                                                                         
write(6,int(rand(5,7)*10))
   2.0000000000D+00  6.0000000000D+00  6.0000000000D+00  5.0000000000D+0
   1.0000000000D+00  7.0000000000D+00  6.0000000000D+00                                                                                         
   8.0000000000D+00  9.0000000000D+00  8.0000000000D+00  5.0000000000D+0
   7.0000000000D+00  0.0000000000D+00  1.0000000000D+00                                                                                         
   8.0000000000D+00  0.0000000000D+00  0.0000000000D+00  8.0000000000D+0
   2.0000000000D+00  5.0000000000D+00  6.0000000000D+00                                                                                         
   5.0000000000D+00  7.0000000000D+00  8.0000000000D+00  0.0000000000D+0
   5.0000000000D+00  3.0000000000D+00  6.0000000000D+00                                                                                         
   9.0000000000D+00  4.0000000000D+00  9.0000000000D+00  5.0000000000D+0
   9.0000000000D+00  2.0000000000D+00  3.0000000000D+00                                                                                         
write(6,"aaa")
aaa
write(6,["aaa","bbb";"ccccc","read me"])
aaa
ccccc
bbb
read me
write(6,int(rand(5,7)*10),"("" | "",7(f10.3,"" | ""))")
 |      0.000 |      4.000 |      7.000 |      4.000 |      9.000 |      4.000 |      4.000 |
 |      5.000 |      2.000 |      5.000 |      7.000 |      5.000 |      7.000 |      2.000 |
 |      3.000 |      0.000 |      2.000 |      8.000 |      5.000 |      7.000 |      9.000 |
 |      2.000 |      6.000 |      6.000 |      2.000 |      5.000 |      9.000 |      1.000 |
 |      5.000 |      3.000 |      0.000 |      4.000 |      5.000 |      8.000 |      4.000 |
//pass from  scilab 6.0
write(6,int32(rand(5,7)*10))
     3    1    0    2    8    6    0                                    
     0    0    1    5    8    7    9                                    
     5    8    4    2    2    3    2                                    
     8    0    7    4    4    7    0                                    
     6    8    9    9    3    5    8                                    
write(path_int,int(rand(5,7)*10));
check_file(path_int, path_int_ref);
mdelete(path_int);
write(path_double,A);
check_file(path_double, path_double_ref);
refMsg = msprintf(_("File ""%s"" already exists or directory write access denied.\n"), path_double);
assert_checkerror("write(path_double,rand(5,7));", refMsg);
mdelete(path_double);
refMsg = msprintf(_("%s: Wrong type for input argument #%d : A string expected.\n"), "write", 2);
assert_checkerror("write(path_logic,[%t, %f; %f, %f]);", refMsg);
mdelete(path_logic);
write(path_string,"aaa");
fd = mopen(path_string, "rt");
solution = "aaa";
result = mgetl(fd);
assert_checkequal(result, solution);
mclose(fd);
mdelete(path_string);
write(path_string,["aaa","bbb";"cccc","scilab"]);
fd = mopen(path_string, "rt");
solution = ["aaa";"cccc";"bbb";"scilab"];
result = mgetl(fd);
assert_checkequal(result, solution);
mclose(fd);
mdelete(path_string);
write(path_int3,1:10,"(10(i3))");
fd = mopen(path_int3, "rt");
solution = "  1  2  3  4  5  6  7  8  9 10";
result = mgetl(fd);
assert_checkequal(result, solution);
mclose(fd);
mdelete(path_int3);
write(path_int4,round(rand(5,7)*10),"(10(i3))");
fd = mopen(path_int4, "rt");
solution = [
"  3  4  0  8  0  1  9";
"  6  1  3  1  9  1  1";
"  4  3  2  9  8  5  4";
" 10  1  2  5  4  4  9";
"  3  8  3  3  8  6  0"];
result = mgetl(fd);
assert_checkequal(result, solution);
mclose(fd);
mdelete(path_int4);
