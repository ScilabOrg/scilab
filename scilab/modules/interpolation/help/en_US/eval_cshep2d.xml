<?xml version="1.0" encoding="ISO-8859-1"?>
<refentry version="5.0-subset Scilab" xml:id="eval_cshep2d" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns5="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:db="http://docbook.org/ns/docbook">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>

  <refnamediv>
    <refname>eval_cshep2d</refname>

    <refpurpose>bidimensional cubic shepard interpolation
    evaluation</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>Calling Sequence</title>

    <synopsis>[zp [,dzpdx, dzpdy [,d2zpdxx,d2zpdxy,d2zpdyy]]] = eval_cshep2d(xp, yp, tl_coef)</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Parameters</title>

    <variablelist>
      <varlistentry>
        <term>xp, yp</term>

        <listitem>
          <para>two real vectors (or matrices) of the same size</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>tl_coef</term>

        <listitem>
          <para>a tlist scilab structure (of type cshep2d) defining a cubic
          Shepard interpolation function (named <literal>S</literal> in the
          following)</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>zp</term>

        <listitem>
          <para>vector (or matrix) of the same size than <literal>xp</literal>
          and <literal>yp</literal>, evaluation of the interpolant
          <literal>S</literal> at these points</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>dzpdx,dzpdy</term>

        <listitem>
          <para>vectors (or matrices) of the same size than
          <literal>xp</literal> and <literal>yp</literal>, evaluation of the
          first derivatives of <literal>S</literal> at these points</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>d2zpdxx,d2zpdxy,d2zpdyy</term>

        <listitem>
          <para>vectors (or matrices) of the same size than
          <literal>xp</literal> and <literal>yp</literal>, evaluation of the
          second derivatives of <literal>S</literal> at these points</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>

  <refsection>
    <title>Description</title>

    <para>This is the evaluation routine for cubic Shepard interpolation
    function computed with <link linkend="cshep2d">cshep2d</link>, that is
    :</para>

    <informalequation>
      <mediaobject>
        <imageobject>
          <imagedata fileref="../mml/eval_cshep2d_equation1.mml" />
        </imageobject>
      </mediaobject>
    </informalequation>
  </refsection>

  <refsection>
    <title>Remark</title>

    <para>The interpolant <emphasis>S</emphasis> is C2 (twice continuously
    differentiable) but is also extended by zero for
    <emphasis>(x,y)</emphasis> far enough the interpolation points. This leads
    to a discontinuity in a region far outside the interpolation points, and
    so, is not cumbersome in practice (in a general manner, evaluation outside
    interpolation points (i.e. extrapolation) leads to very inacurate
    results).</para>
  </refsection>

  <refsection>
    <title>Examples</title>

    <programlisting role="example">
// see example section of cshep2d

// this example shows the behavior far from the interpolation points ...
deff("z=f(x,y)","z = 1+ 50*(x.*(1-x).*y.*(1-y)).^2")
x = linspace(0,1,10);
[X,Y] = ndgrid(x,x);
X = X(:); Y = Y(:); Z = f(X,Y);
S = cshep2d([X Y Z]);
// evaluation inside and outside the square [0,1]x[0,1]
m = 40;
xx = linspace(-1.5,0.5,m);
[xp,yp] = ndgrid(xx,xx);
zp = eval_cshep2d(xp,yp,S);
// compute facet (to draw one color for extrapolation region
// and another one for the interpolation region)
[xf,yf,zf] = genfac3d(xx,xx,zp);
color = 2*ones(1,size(zf,2));
// indices corresponding to facet in the interpolation region
ind=find( mean(xf,"r")&gt;0 &amp; mean(xf,"r")&lt;1 &amp; mean(yf,"r")&gt;0 &amp; mean(yf,"r")&lt;1 );
color(ind)=3;
xbasc();
plot3d(xf,yf,list(zf,color), flag=[2 6 4])
legends(["extrapolation region","interpolation region"],[2 3],1)
xselect()
 </programlisting>
  </refsection>

  <refsection>
    <title>See Also</title>

    <simplelist type="inline">
      <member><link linkend="cshep2d">cshep2d</link></member>
    </simplelist>
  </refsection>

  <refsection>
    <title>Authors</title>

    <simplelist type="vert">
      <member>Robert J. Renka</member>

      <member>B. Pincon (scilab interface)</member>
    </simplelist>
  </refsection>
</refentry>
