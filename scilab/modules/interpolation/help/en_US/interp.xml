<?xml version="1.0" encoding="UTF-8"?>
<refentry version="5.0-subset Scilab" xml:id="interp" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns5="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:db="http://docbook.org/ns/docbook">
  <info>
    <pubdate>$LastChangedDate$</pubdate>
  </info>

  <refnamediv>
    <refname>interp</refname>

    <refpurpose>cubic spline evaluation function</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>Calling Sequence</title>

    <synopsis>[yp [,yp1 [,yp2 [,yp3]]]]=interp(xp, x, y, d [, out_mode])</synopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Parameters</title>

    <variablelist>
      <varlistentry>
        <term>xp</term>

        <listitem>
          <para>real vector or matrix</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>x,y,d</term>

        <listitem>
          <para>real vectors of the same size defining a cubic spline or
          sub-spline function (called <literal>s</literal> in the
          following)</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>out_mode</term>

        <listitem>
          <para>(optional) string defining the evaluation of
          <literal>s</literal> outside the [x1,xn] interval</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>yp</term>

        <listitem>
          <para>vector or matrix of same size than <literal>xp</literal>,
          elementwise evaluation of <literal>s</literal> on
          <literal>xp</literal> (yp(i)=s(xp(i) or yp(i,j)=s(xp(i,j))</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>yp1, yp2, yp3</term>

        <listitem>
          <para>vectors (or matrices) of same size than <literal>xp</literal>,
          elementwise evaluation of the successive derivatives of
          <literal>s</literal> on <literal>xp</literal></para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>

  <refsection>
    <title>Description</title>

    <para>Given three vectors <literal>(x,y,d)</literal> defining a spline or
    sub-spline function (see <link linkend="splin">splin</link>) with
    <literal>yi=s(xi), di = s'(xi)</literal> this function evaluates
    <literal>s</literal> (and <literal>s', s'', s'''</literal> if needed) at
    <literal>xp(i)</literal> :</para>

    <informalequation>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="../mml/interp_equation1.mml" />
        </imageobject>
      </mediaobject>
    </informalequation>

    <para>The <literal>out_mode</literal> parameter set the evaluation rule
    for extrapolation, i.e. for <literal>xp(i)</literal> not in [x1,xn]
    :</para>

    <variablelist>
      <varlistentry>
        <term>"by_zero"</term>

        <listitem>
          <para>an extrapolation by zero is done</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>"by_nan"</term>

        <listitem>
          <para>extrapolation by Nan</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>"C0"</term>

        <listitem>
          <para>the extrapolation is defined as follows :</para>

          <informalequation>
            <mediaobject>
              <imageobject>
                <imagedata align="center"
                           fileref="../mml/interp_equation2.mml" />
              </imageobject>
            </mediaobject>
          </informalequation>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>"natural"</term>

        <listitem>
          <para>the extrapolation is defined as follows
          (<emphasis>p_i</emphasis> being the polynomial defining
          <literal>s</literal> on [x_i,x_{i+1}]) :</para>

          <informalequation>
            <mediaobject>
              <imageobject>
                <imagedata align="center"
                           fileref="../mml/interp_equation3.mml" />
              </imageobject>
            </mediaobject>
          </informalequation>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>"linear"</term>

        <listitem>
          <para>the extrapolation is defined as follows :</para>

          <informalequation>
            <mediaobject>
              <imageobject>
                <imagedata align="center"
                           fileref="../mml/interp_equation4.mml" />
              </imageobject>
            </mediaobject>
          </informalequation>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>"periodic"</term>

        <listitem>
          <para> <literal>s</literal> is extended by periodicity.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsection>

  <refsection>
    <title>Examples</title>

    <programlisting role="example"><![CDATA[ 
// see the examples of splin and lsq_splin

// an example showing C2 and C1 continuity of spline and subspline
a = -8; b = 8;
x = linspace(a,b,20)';
y = sinc(x);
dk = splin(x,y);  // not_a_knot
df = splin(x,y, "fast");
xx = linspace(a,b,800)';
[yyk, yy1k, yy2k] = interp(xx, x, y, dk); 
[yyf, yy1f, yy2f] = interp(xx, x, y, df); 
clf()
subplot(3,1,1)
plot2d(xx, [yyk yyf])
plot2d(x, y, style=-9)
legends(["not_a_knot spline","fast sub-spline","interpolation points"],...
        [1 2 -9], "ur",%f)
xtitle("spline interpolation")
subplot(3,1,2)
plot2d(xx, [yy1k yy1f])
legends(["not_a_knot spline","fast sub-spline"], [1 2], "ur",%f)
xtitle("spline interpolation (derivatives)")
subplot(3,1,3)
plot2d(xx, [yy2k yy2f])
legends(["not_a_knot spline","fast sub-spline"], [1 2], "lr",%f)
xtitle("spline interpolation (second derivatives)")

// here is an example showing the different extrapolation possibilities
x = linspace(0,1,11)';
y = cosh(x-0.5);
d = splin(x,y);
xx = linspace(-0.5,1.5,401)';
yy0 = interp(xx,x,y,d,"C0");
yy1 = interp(xx,x,y,d,"linear");
yy2 = interp(xx,x,y,d,"natural");
yy3 = interp(xx,x,y,d,"periodic");  
clf()
plot2d(xx,[yy0 yy1 yy2 yy3],style=2:5,frameflag=2,leg="C0@linear@natural@periodic")
xtitle(" different way to evaluate a spline outside its domain")
 ]]></programlisting>
  </refsection>

  <refsection>
    <title>See Also</title>

    <simplelist type="inline">
      <member><link linkend="splin">splin</link></member>

      <member><link linkend="lsq_splin">lsq_splin</link></member>
    </simplelist>
  </refsection>

  <refsection>
    <title>Authors</title>

    <para>B. Pincon</para>
  </refsection>
</refentry>
