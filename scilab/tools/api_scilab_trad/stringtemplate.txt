	//get variable address
	sciErr = getVarAddressFromPosition(pvApiCtx, @POSITION@, \&piAddr);
	if(sciErr.iErr)
	{
		printError(\&sciErr, 0);
		return 0;
	}//MYMARK

	//fisrt call to retrieve dimensions
	sciErr = getMatrixOfString(pvApiCtx, piAddr, \&@NBROW@, \&@NBCOL@, NULL, NULL);
	if(sciErr.iErr)
	{
		printError(\&sciErr, 0);
		return 0;
	}

	piLen = (int\*)malloc(sizeof(int) \* @NBROW@ \* @NBCOL@);

	//second call to retrieve length of each string
	sciErr = getMatrixOfString(pvApiCtx, piAddr, \&@NBROW@, \&@NBCOL@, piLen, NULL);
	if(sciErr.iErr)
	{
		printError(\&sciErr, 0);
		return 0;
	}

	@VAR@ = (char\*\*)malloc(sizeof(char\*) \* @NBROW@ \* @NBCOL@);
	for(i = 0 ; i < @NBROW@ \* @NBCOL@ ; i++)
	{
		@VAR@[i] = (char\*)malloc(sizeof(char) \* (piLen[i] + 1));//+ 1 for null termination
	}

	//third call to retrieve data
	sciErr = getMatrixOfString(pvApiCtx, piAddr, \&@NBROW@, \&@NBCOL@, piLen, @VAR@);
	if(sciErr.iErr)
	{
		printError(\&sciErr, 0);
		return 0;
	}
