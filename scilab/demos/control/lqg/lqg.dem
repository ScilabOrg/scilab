// Copyright INRIA
mode(-1);

//display the diagram
x=[5,10,20,40,50,70,80,90];xmin=-10;xmax=100;
y=[22,28,30,32];ymin=12;ymax=40;

xx=[xmin,xmin,x([1 2 2 7 4 6 3 4 5 6 3 3 5 5]);xmax,xmax,x([3,2,7,7,5,8,3,4,5,6,4,4,6,6])];
yy=[ymin,ymax,y([3,1,1,1,3,3,2,2,2,2,2,4,2,4]);ymin,ymax,y([3,3,1,3,3,3,4,4,4,4,2,4,2,4])];
    
scf(0);clf();xselect();
plot2d(xx,yy,ones(1,16),'022');
xstring(28,30,'K');xstring(56,30,'Plant');xstring(12,28.80,'-');
curAxe = gca();
curAxe.title.text = 'PLANT   and   CONTROLLER';

path=get_absolute_file_path('lqg.dem');
s=poly(0,'s');z=poly(0,'z');
x_message(['Simple example of SISO LQG Design';
           'Demo is in file '+path+'lqg.dem';
           'Computes the LQG compensator and plots response'])

n=x_choose(['Continuous time';'Discrete time'],'Select time domain');

select n
	case 0
		return
	case 1
		mode(1)
		s=poly(0,'s');
		str='(s-1)/(s^2-5*s+1)';
		rep=x_dialog('Nominal plant?',str)
		if rep==[] then return,end
		Plant=evstr(rep);
		Plant=syslin('c',Plant);
		mode(-1)
	case 2
		mode(1)
		z=poly(0,'z');
		str='(z+1)/(z^2-5*z+2)'
		rep=x_dialog('Nominal plant?',str)
		if rep==[] then return,end
		Plant=evstr(rep);
		Plant=syslin('d',Plant);
		mode(-1)
end

mode(1)

//Nominal Plant

P22=tf2ss(Plant);    //...in state-space form
[ny,nu,nx]=size(P22);
x_message('Now enter weighting matrices');
rep=x_matrix('x-weighting matrix',eye(nx,nx))
if rep==[] then return,end
Qx=evstr(rep);
rep=x_matrix('u-weighting matrix',eye(nu,nu));
if rep==[] then return,end
Qu=evstr(rep);
bigQ=sysdiag(Qx,Qu);
rep=x_matrix('x-noise covariance matrix',eye(nx,nx))
if rep==[] then return,end
Rx=evstr(rep);
rep=x_matrix('y-noise covariance matrix',eye(ny,ny))
if rep==[] then return,end
Ry=evstr(rep);
bigR=sysdiag(Rx,Ry);
[Plqg,r]=lqg2stan(P22,bigQ,bigR);     //LQG pb as a standard problem
Klqg=lqg(Plqg,r);                     //LQG compensator

disp(spec(h_cl(Plqg,r,Klqg)),'closed loop eigenvalues:');    //Check internal stability
[Slqg,Rlqg,Tlqg]=sensi(P22,Klqg);  //Sensitivity functions

disp(clean(ss2tf(Slqg)),'Sensitivity function');
disp(clean(ss2tf(Tlqg)),'Complementary sensitivity function');

mode(-1);

x_message('Closed-loop response');

resp=['Frequency response';'Time response'];
while %t do
	n=x_choose(resp,'Select response(s)');
	select n
		case 0
			disp("LQG demo stops!");break;
		case 1 then
			mode(1)
			clf(0);scf(0);xselect();bode(Tlqg);xend()
			mode(-1)
		case 2
			if Plant(4)=='c' then
			mode(1)
			defv=['0.1','20'];
			Title='Enter Sampling period and Tmax';
			rep=x_mdialog(Title,['Sampling period?';'Tmax?'],defv)
			if rep==[] then break,end
			dttmax=evstr(rep)
			dt=evstr(dttmax(1));tmax=evstr(dttmax(2));
			t=0:dt/5:tmax;
			n1=x_choose(['Step response?';'Impulse response?'],'Simulation:');
			select n1
				case 1 then
					scf(1);clf();xselect();
					plot2d([t',t'],[(csim('step',t,Tlqg))',ones(t')]);
				case 2 then
					scf(1);clf();xselect();
					plot2d([t',t'],[(csim('impul',t,Tlqg))',0*t']);
			end
			mode(-1)
		elseif Plant(4)=='d' then
			mode(1)
			defv=['30'];
			Title='Tmax?';
			rep=x_mdialog(Title,['Tmax='],defv)
			if rep==[] then break,end
			Tmax=evstr(rep);
			mode(-1)
			n2=x_choose(['Step response?';'Impulse response?'],'Simulation:');
			select n2
				case 0 then
					break;
				case 1 then
					mode(1)
					u=ones(1,Tmax);u(1)=0;
					scf(1);clf();xselect();
					plot2d([(1:Tmax)',(1:Tmax)'],[(dsimul(Tlqg,u))',(ones(1:Tmax)')])
					a=gca();
					a.title.text='LQG, step response';
           a.title.font_size=3;
					mode(-1)
				case 2 then
					mode(1)
					u=zeros(1,Tmax);u(1)=1;
					scf(1);clf();xselect();
					plot2d((1:Tmax)',(dsimul(Tlqg,u))')
					a=gca();
					a.title.text='LQG, impulse response';
           a.title.font_size=3;
					mode(-1)
			end
		end
	end
end

clear s z n str rep Plant P22 ny nu nx Qx Qu bigQ Rx Ry bigR  Plqg r 
clear Klqg Slqg Rlqg Tlqg resp Title dttmax dt t n1 defv Tmax n2 u 
