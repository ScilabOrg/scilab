<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>integral_func_routcos</TITLE>
<META NAME="description" CONTENT="integral_func_routcos">
<META NAME="keywords" CONTENT="integral_func_routcos">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="integral_func_routcos.css">

</HEAD>

<BODY bgcolor="#FFFFFF">

<P>
<DIV ALIGN="CENTER">
Fonction de calcul
<BR><A NAME="tex2html1"
  HREF="./integral_func_routcos.htm">fr</A>

</DIV>
<H2><A NAME="SECTION00010000000000000000"></A><A NAME="integral_func_routcos"></A>
<BR>
integral_func
</H2>

<H3><font color="blue"><A NAME="SECTION00011000000000000000">
Contenu du fichier</A>
</font></H3>
<BR>
<PRE  CLASS="verbatim">#include "scicos_block.h"
#include &lt;math.h&gt;

void  integral_func(scicos_block *block,int flag)
{int i;
  if (flag==0){
    if(block-&gt;ng&gt;0){
      for(i=0;i&lt;block-&gt;nx;++i) {
	if(block-&gt;mode[i]==3){
	  block-&gt;xd[i]=block-&gt;inptr[0][i];
	}else{
	  block-&gt;xd[i]=0.0;
	}
      }
    }else{
      for(i=0;i&lt;block-&gt;nx;++i) {
	block-&gt;xd[i]=block-&gt;inptr[0][i];
      }
    }
  }else if (flag==1||flag==6){
    for(i=0;i&lt;block-&gt;nx;++i) {
      block-&gt;outptr[0][i]=block-&gt;x[i];
    }
  }else if (flag==2&amp;&amp;block-&gt;nevprt==1){
    for(i=0;i&lt;block-&gt;nx;++i) {
      block-&gt;x[i]=block-&gt;inptr[1][i];
    }
  } else if (flag==9){
    for(i=0;i&lt;block-&gt;nx;++i) {
      if (block-&gt;mode[i]==3){
	block-&gt;g[i]=(block-&gt;x[i]-(block-&gt;rpar[i]))*(block-&gt;x[i]-(block-&gt;rpar[block-&gt;nx+i]));
      } else {
	block-&gt;g[i]=block-&gt;inptr[0][i];
      } 
      if (get_phase_simulation()==1) {
	if (block-&gt;inptr[0][i]&gt;=0&amp;&amp;block-&gt;x[i]&gt;=block-&gt;rpar[i]){
	  block-&gt;mode[i]=1;
	}else if (block-&gt;inptr[0][i]&lt;=0&amp;&amp;block-&gt;x[i]&lt;=block-&gt;rpar[block-&gt;nx+i]){
	  block-&gt;mode[i]=2;
	}else {
	  block-&gt;mode[i]=3;
	}
      }
    }
  }
}
</PRE>

<BR>




</BODY>
</HTML>
