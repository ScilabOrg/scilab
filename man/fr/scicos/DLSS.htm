<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">

<!--Converted with LaTeX2HTML 2002-2-1 (1.70)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Discrete state-space system </TITLE>
<META NAME="description" CONTENT="Discrete state-space system ">
<META NAME="keywords" CONTENT="main">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="main.css">

</HEAD>

<BODY bgcolor="#FFFFFF">

<!--Table of Child-Links-->
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>

<UL>
<LI><A NAME="tex2html5034"
  HREF="DLSS.htm#SECTION00585100000000000000">Library</A>
<LI><A NAME="tex2html5035"
  HREF="DLSS.htm#SECTION00585200000000000000">Description</A>
<LI><A NAME="tex2html5036"
  HREF="DLSS.htm#SECTION00585300000000000000">Dialog Box</A>
<LI><A NAME="tex2html5037"
  HREF="DLSS.htm#SECTION00585400000000000000">Default properties</A>
<LI><A NAME="tex2html5038"
  HREF="DLSS.htm#SECTION00585500000000000000">Interfacing function</A>
<LI><A NAME="tex2html5039"
  HREF="DLSS.htm#SECTION00585600000000000000">Computational function (type 4)</A>
</UL>
<!--End of Table of Child-Links-->
<HR>

<H2><A NAME="SECTION00585000000000000000"></A><A NAME="DLSS"></A>
<BR>
Discrete state-space system 
</H2>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfig{file=DLSS.eps,width=90.00pt}$
 -->
<IMG
 WIDTH="143" HEIGHT="81" ALIGN="BOTTOM" BORDER="0"
 SRC="img145.gif"
 ALT="\epsfig{file=DLSS.eps,width=90.00pt}">
</DIV>
<H3><font color="blue"><A NAME="SECTION00585100000000000000">
Library</A>
</font></H3>
Linear

<H3><font color="blue"><A NAME="SECTION00585200000000000000">
Description</A>
</font></H3>
This block realizes a discrete-time linear state-space system. The
system is defined by the <IMG
 WIDTH="96" HEIGHT="35" ALIGN="MIDDLE" BORDER="0"
 SRC="img141.gif"
 ALT="$ (A,B,C,D)$"> matrices and the initial state
<IMG
 WIDTH="22" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="img142.gif"
 ALT="$ x_0$">. The dimensions must be compatible. At the arrival of an input
event on the unique input event port, the state is updated.   

<H3><font color="blue"><A NAME="SECTION00585300000000000000">
Dialog Box</A>
</font></H3>
<DIV ALIGN="CENTER">
<TABLE CELLPADDING=3 BORDER="1">
<TR><TD ALIGN="CENTER">Set discrete linear system parameters</TD>
<TD></TD>
</TR>
<TR><TD ALIGN="CENTER">A matrix</TD>
<TD ALIGN="CENTER">-1</TD>
</TR>
<TR><TD ALIGN="CENTER">B matrix</TD>
<TD ALIGN="CENTER">1</TD>
</TR>
<TR><TD ALIGN="CENTER">C matrix</TD>
<TD ALIGN="CENTER">1</TD>
</TR>
<TR><TD ALIGN="CENTER">D matrix</TD>
<TD ALIGN="CENTER">0</TD>
</TR>
<TR><TD ALIGN="CENTER">Initial state</TD>
<TD ALIGN="CENTER">0</TD>
</TR>
</TABLE>
</DIV>

<UL>
<LI>A matrix: square matrix. The<B>A </B>matrix 
</LI>
<LI>B matrix: the<B>B</B> matrix 
</LI>
<LI>C matrix: the <B>C</B> matrix 
</LI>
<LI>D matrix: the<B>D</B> matrix 
</LI>
<LI>Initial state <IMG
 WIDTH="22" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="img142.gif"
 ALT="$ x_0$">:  vector. The initial state of the system.
</LI>
</UL>

<H3><font color="blue"><A NAME="SECTION00585400000000000000">
Default properties</A>
</font></H3>

<UL>
<LI>always active: no
</LI>
<LI>direct-feedthrough: no
</LI>
<LI>zero-crossing: no
</LI>
<LI>mode: no
</LI>
<LI>number/sizes of inputs: 1 / 1
</LI>
<LI>number/sizes of outputs: 1 / 1
</LI>
<LI>number/sizes of activation inputs: 1 / 1
</LI>
<LI>number/sizes of activation outputs: 0 / 
</LI>
<LI>continuous-time state: no
</LI>
<LI>discrete-time state: yes
</LI>
<LI>name of computational function: <EM>dsslti4</EM>
</LI>
</UL>
<H3><font color="blue"><A NAME="SECTION00585500000000000000">
Interfacing function</A>
</font></H3>
<TT>scilab/macros/scicos_blocks/linear/DLSS.sci</TT>

<H3><font color="blue"><A NAME="SECTION00585600000000000000">
Computational function (type 4)</A>
</font></H3>
<BR>
<PRE>    
#include <memory.h>
#include "scicos_block.h"
#include "../os_specific/sci_mem_alloc.h"  /* malloc */
#include "../machine.h"

extern int C2F(dmmul)();
extern int C2F(dmmul1)();

void dsslti4(scicos_block *block,int flag)
{
  /* Copyright INRIA
     
  Scicos block simulator
  discrete state space linear system simulator
  rpar(1:nx*nx)=A
  rpar(nx*nx+1:nx*nx+nx*nu)=B
  rpar(nx*nx+nx*nu+1:nx*nx+nx*nu+nx*ny)=C */
  
  int un=1,lb,lc,ld;
  int nz=block->nz;
  double* z=block->z;
  double* rpar=block->rpar;
  double* y=block->outptr[0];
  double* u=block->inptr[0];
  int* outsz=block->outsz;
  int* insz=block->insz;
  double *w;
  
  lb=nz*nz;
  
  if (flag ==1 || flag ==6){
    /* y=c*x+d*u */
    lc=lb+nz*insz[0];
    ld=lc+nz*outsz[0];
    if (nz==0) {
      C2F(dmmul)(&rpar[ld],outsz,u,insz,y,outsz,outsz,insz,&un);
    }else{
      C2F(dmmul)(&rpar[lc],outsz,z,&nz,y,outsz,outsz,&nz,&un);
      C2F(dmmul1)(&rpar[ld],outsz,u,insz,y,outsz,outsz,insz,&un);
    }
  }
  else if (flag ==2){
    /* x+=a*x+b*u */
    if (nz!=0){
      w =*block->work;
      memcpy(w,z,nz*sizeof(double));
      C2F(dmmul)(&rpar[0],&nz,w,&nz,z,&nz,&nz,&nz,&un);
      C2F(dmmul1)(&rpar[lb],&nz,u,insz,z,&nz,&nz,insz,&un);
    }
  }
  else if (flag ==4){/* the workspace for temp storage
		      */
    if ((*block->work=
	 scicos_malloc(sizeof(double)*nz))== NULL ) {
      set_block_error(-16);
      return;
    }
  }
  else if (flag ==5){
    scicos_free(*block->work);
  }
}
</PRE>
<HR>
<ADDRESS>
Ramine Nikoukhah
2004-06-22
</ADDRESS>
</BODY>
</HTML>
