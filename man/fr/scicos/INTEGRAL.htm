<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">

<!--Converted with LaTeX2HTML 2002-2-1 (1.70)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Integration </TITLE>
<META NAME="description" CONTENT="Integration ">
<META NAME="keywords" CONTENT="main">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="main.css">

</HEAD>

<BODY bgcolor="#FFFFFF">

<!--Table of Child-Links-->
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>

<UL>
<LI><A NAME="tex2html5195"
  HREF="INTEGRAL.htm#SECTION005814100000000000000">Library</A>
<LI><A NAME="tex2html5196"
  HREF="INTEGRAL.htm#SECTION005814200000000000000">Description</A>
<LI><A NAME="tex2html5197"
  HREF="INTEGRAL.htm#SECTION005814300000000000000">Dialog Box</A>
<LI><A NAME="tex2html5198"
  HREF="INTEGRAL.htm#SECTION005814400000000000000">Default properties</A>
<LI><A NAME="tex2html5199"
  HREF="INTEGRAL.htm#SECTION005814500000000000000">Interfacing function</A>
<LI><A NAME="tex2html5200"
  HREF="INTEGRAL.htm#SECTION005814600000000000000">Computational function (type 4)</A>
</UL>
<!--End of Table of Child-Links-->
<HR>

<H2><A NAME="SECTION005814000000000000000"></A><A NAME="INTEGRAL"></A>
<BR>
Integration 
</H2>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfig{file=INTEGRAL.eps,width=90.00pt}$
 -->
<IMG
 WIDTH="143" HEIGHT="161" ALIGN="BOTTOM" BORDER="0"
 SRC="img162.gif"
 ALT="\epsfig{file=INTEGRAL.eps,width=90.00pt}">
</DIV>
<H3><font color="blue"><A NAME="SECTION005814100000000000000">
Library</A>
</font></H3>
Linear

<H3><font color="blue"><A NAME="SECTION005814200000000000000">
Description</A>
</font></H3>
This block is an integrator. The output is the integral of the input.   

<H3><font color="blue"><A NAME="SECTION005814300000000000000">
Dialog Box</A>
</font></H3>
<DIV ALIGN="CENTER">
<TABLE CELLPADDING=3 BORDER="1">
<TR><TD ALIGN="CENTER">Set Integral block parameters</TD>
<TD></TD>
</TR>
<TR><TD ALIGN="CENTER">Initial Condition</TD>
<TD ALIGN="CENTER">0</TD>
</TR>
<TR><TD ALIGN="CENTER">With re-intialization (1:yes, 0:no)</TD>
<TD ALIGN="CENTER">0</TD>
</TR>
<TR><TD ALIGN="CENTER">With saturation (1:yes, 0:no)</TD>
<TD ALIGN="CENTER">0</TD>
</TR>
<TR><TD ALIGN="CENTER">Upper limit</TD>
<TD ALIGN="CENTER">1</TD>
</TR>
<TR><TD ALIGN="CENTER">Lower limit</TD>
<TD ALIGN="CENTER">-1</TD>
</TR>
</TABLE>
</DIV>

<UL>
<LI>Initial Condition: A vector/scalar initial conditions.
</LI>
<LI>With re-intialization : To reset its state to the  specified
  initial condition based on an external signal select <B>1</B>.
</LI>
<LI>With saturation : If selected, limits the states to a value
  between the Lower saturation limit and Upper saturation limit
  parameters. 
</LI>
<LI>Upper limit:The upper limit for the integral. 
</LI>
<LI>Lower limit:The lower limit for the integral. 
</LI>
</UL>

<H3><font color="blue"><A NAME="SECTION005814400000000000000">
Default properties</A>
</font></H3>

<UL>
<LI>always active: yes
</LI>
<LI>direct-feedthrough: no
</LI>
<LI>zero-crossing: no
</LI>
<LI>mode: no
</LI>
<LI>number/sizes of inputs: 1 / 1
</LI>
<LI>number/sizes of outputs: 1 / 1
</LI>
<LI>number/sizes of activation inputs: 0 / 
</LI>
<LI>number/sizes of activation outputs: 0 / 
</LI>
<LI>continuous-time state: yes
</LI>
<LI>discrete-time state: no
</LI>
<LI>name of computational function: <EM>integral_func</EM>
</LI>
</UL>
<H3><font color="blue"><A NAME="SECTION005814500000000000000">
Interfacing function</A>
</font></H3>
<TT>scilab/macros/scicos_blocks/linear/INTEGRAL.sci</TT>

<H3><font color="blue"><A NAME="SECTION005814600000000000000">
Computational function (type 4)</A>
</font></H3>
<BR>
<PRE>
#include "scicos_block.h"
#include <math.h>

void  integral_func(scicos_block *block,int flag)
{int i;
  if (flag==0){
    if(block->ng>0){
      for(i=0;i<block->nx;++i) {
	if(block->mode[i]==3){
	  block->xd[i]=block->inptr[0][i];
	}else{
	  block->xd[i]=0.0;
	}
      }
    }else{
      for(i=0;i<block->nx;++i) {
	block->xd[i]=block->inptr[0][i];
      }
    }
  }else if (flag==1||flag==6){
    for(i=0;i<block->nx;++i) {
      block->outptr[0][i]=block->x[i];
    }
  }else if (flag==2&&block->nevprt==1){
    for(i=0;i<block->nx;++i) {
      block->x[i]=block->inptr[1][i];
    }
  } else if (flag==9){
    for(i=0;i<block->nx;++i) {
      if (block->mode[i]==3){
	block->g[i]=(block->x[i]-(block->rpar[i]))*(block->x[i]-(block->rpar[block->nx+i]));
      } else {
	block->g[i]=block->inptr[0][i];
      } 
      if (get_phase_simulation()==1) {
	if (block->inptr[0][i]>=0&&block->x[i]>=block->rpar[i]){
	  block->mode[i]=1;
	}else if (block->inptr[0][i]<=0&&block->x[i]<=block->rpar[block->nx+i]){
	  block->mode[i]=2;
	}else {
	  block->mode[i]=3;
	}
      }
    }
  }
}
</PRE>
<HR>
<ADDRESS>
Ramine Nikoukhah
2004-06-22
</ADDRESS>
</BODY>
</HTML>
