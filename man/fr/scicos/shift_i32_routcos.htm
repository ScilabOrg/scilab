<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>shift_i32_routcos</TITLE>
<META NAME="description" CONTENT="shift_i32_routcos">
<META NAME="keywords" CONTENT="shift_i32_routcos">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="shift_i32_routcos.css">

</HEAD>

<BODY bgcolor="#FFFFFF">

<P>
<DIV ALIGN="CENTER">
Fonction de calcul
<BR><A NAME="tex2html1"
  HREF="./shift_i32_routcos.htm">fr</A>

</DIV>
<H2><A NAME="SECTION00010000000000000000"></A><A NAME="shift_i32_routcos"></A>
<BR>
shift_i32
</H2>

<H3><font color="blue"><A NAME="SECTION00011000000000000000">
Contenu du fichier</A>
</font></H3>
<BR>
<PRE  CLASS="verbatim"># include "scicos_block4.h"
# include "../machine.h"
# include &lt;math.h&gt;

void shift_i32(scicos_block *block,int flag)
{
  long *u,*y,v;
  unsigned long k; 
  int *ipar;
  int mu,nu,i,j;

  mu=GetInPortRows(block,1);
  nu=GetInPortCols(block,1);
  u=Getint32InPortPtrs(block,1);
  y=Getint32OutPortPtrs(block,1);
  ipar=GetIparPtrs(block);
  k=pow(2,31);
  if(ipar[0]&gt;=0)
      {for (i=0;i&lt;mu*nu;i++)
	    {if (ipar[1]==0)
            	{y[i]=u[i]&lt;&lt;ipar[0];}
	     else{
		 v=u[i];
		 for(j=0;j&lt;ipar[0];j++)
		     {
		      y[i]=v&amp;k;
                      if (y[i]==0)  y[i]=v&lt;&lt;1;
		      else {
		          y[i]=v&lt;&lt;1;
		          y[i]=(y[i])|(1);
		          }
		      v=y[i];
		      }
                   }
              }
       }
  else
      {for (i=0;i&lt;mu*nu;i++)
            {if (ipar[1]==0)
            	{y[i]=u[i]&gt;&gt;-ipar[0];}
	     else{
		 v=u[i];
		 for(j=0;j&lt;-ipar[0];j++)
		     {
		      y[i]=v&amp;1;
                      if (y[i]==0)
			 {y[i]=v&gt;&gt;1;
			  y[i]=y[i]&amp;(k-1);}
		      else {
		          y[i]=v&gt;&gt;1;
		          y[i]=(y[i])|(k);
		          }
		      v=y[i];
		      }
                   }
              }
      }
}
</PRE>

<BR>




</BODY>
</HTML>
