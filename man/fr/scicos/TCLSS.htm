<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">

<!--Converted with LaTeX2HTML 2002-2-1 (1.70)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>Continuous linear system with jump</TITLE>
<META NAME="description" CONTENT="Continuous linear system with jump">
<META NAME="keywords" CONTENT="main">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="main.css">

</HEAD>

<BODY bgcolor="#FFFFFF">

<!--Table of Child-Links-->
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>

<UL>
<LI><A NAME="tex2html4982"
  HREF="TCLSS.htm#SECTION00582100000000000000">Library</A>
<LI><A NAME="tex2html4983"
  HREF="TCLSS.htm#SECTION00582200000000000000">Description</A>
<LI><A NAME="tex2html4984"
  HREF="TCLSS.htm#SECTION00582300000000000000">Dialog Box</A>
<LI><A NAME="tex2html4985"
  HREF="TCLSS.htm#SECTION00582400000000000000">Default properties</A>
<LI><A NAME="tex2html4986"
  HREF="TCLSS.htm#SECTION00582500000000000000">Interfacing function</A>
<LI><A NAME="tex2html4987"
  HREF="TCLSS.htm#SECTION00582600000000000000">Computational function (type 4)</A>
</UL>
<!--End of Table of Child-Links-->
<HR>

<H2><A NAME="SECTION00582000000000000000"></A><A NAME="TCLSS"></A>
<BR>
Continuous linear system with jump
</H2>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfig{file=TCLSS.eps,width=90.00pt}$
 -->
<IMG
 WIDTH="143" HEIGHT="108" ALIGN="BOTTOM" BORDER="0"
 SRC="img140.gif"
 ALT="\epsfig{file=TCLSS.eps,width=90.00pt}">
</DIV>
<H3><font color="blue"><A NAME="SECTION00582100000000000000">
Library</A>
</font></H3>
Linear

<H3><font color="blue"><A NAME="SECTION00582200000000000000">
Description</A>
</font></H3>
This block realizes a continuous-time linear state-space system with
the possibility of jumps in the state. The number of inputs to this
block is two. The first input is the regular input of the linear
system, the second carries the new value of the state which is copied
into the state when an event arrives at the unique event input port of
this block. That means the state of the system jumps to the value
present on the second input (of size equal to that of the state). The
system is defined by the <IMG
 WIDTH="96" HEIGHT="35" ALIGN="MIDDLE" BORDER="0"
 SRC="img141.gif"
 ALT="$ (A,B,C,D)$"> matrices and the initial state
<IMG
 WIDTH="22" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="img142.gif"
 ALT="$ x_0$">. The dimensions must be compatible. The sizes of inputs and outputs
are adjusted automatically.   

<H3><font color="blue"><A NAME="SECTION00582300000000000000">
Dialog Box</A>
</font></H3>
<DIV ALIGN="CENTER">
<TABLE CELLPADDING=3 BORDER="1">
<TR><TD ALIGN="CENTER">Set continuous linear system parameters</TD>
<TD></TD>
</TR>
<TR><TD ALIGN="CENTER">A matrix</TD>
<TD ALIGN="CENTER">0</TD>
</TR>
<TR><TD ALIGN="CENTER">B matrix</TD>
<TD ALIGN="CENTER">1</TD>
</TR>
<TR><TD ALIGN="CENTER">C matrix</TD>
<TD ALIGN="CENTER">1</TD>
</TR>
<TR><TD ALIGN="CENTER">D matrix</TD>
<TD ALIGN="CENTER">0</TD>
</TR>
<TR><TD ALIGN="CENTER">Initial state</TD>
<TD ALIGN="CENTER">0</TD>
</TR>
</TABLE>
</DIV>

<UL>
<LI>A matrix: square matrix. The<B>A </B>matrix 
</LI>
<LI>B matrix: the<B>B</B> matrix 
</LI>
<LI>C matrix: the <B>C</B> matrix 
</LI>
<LI>D matrix: the<B>D</B> matrix 
</LI>
<LI>Initial state <IMG
 WIDTH="22" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="img142.gif"
 ALT="$ x_0$">:  vector. The initial state of the system.
</LI>
</UL>

<H3><font color="blue"><A NAME="SECTION00582400000000000000">
Default properties</A>
</font></H3>

<UL>
<LI>always active: yes
</LI>
<LI>direct-feedthrough: no
</LI>
<LI>zero-crossing: no
</LI>
<LI>mode: no
</LI>
<LI>number/sizes of inputs: 2 / 1  1
</LI>
<LI>number/sizes of outputs: 1 / 1
</LI>
<LI>number/sizes of activation inputs: 1 / 1
</LI>
<LI>number/sizes of activation outputs: 0 / 
</LI>
<LI>continuous-time state: yes
</LI>
<LI>discrete-time state: no
</LI>
<LI>name of computational function: <EM>tcslti4</EM>
</LI>
</UL>
<H3><font color="blue"><A NAME="SECTION00582500000000000000">
Interfacing function</A>
</font></H3>
<TT>scilab/macros/scicos_blocks/linear/TCLSS.sci</TT>

<H3><font color="blue"><A NAME="SECTION00582600000000000000">
Computational function (type 4)</A>
</font></H3>
<BR>
<PRE> 
#include <math.h>
#include <memory.h>

#include "scicos_block.h"
#include "../machine.h"

extern int C2F(dmmul)();
extern int C2F(dmmul1)();


void tcslti4(scicos_block *block,int flag)
{
  /* Copyright INRIA
   
     Scicos block simulator
     continuous state space linear system simulator
     rpar(1:nx*nx)=A
     rpar(nx*nx+1:nx*nx+nx*nu)=B
     rpar(nx*nx+nx*nu+1:nx*nx+nx*nu+nx*ny)=C
     rpar(nx*nx+nx*nu+nx*ny+1:nx*nx+nx*nu+nx*ny+ny*nu)=D */

  int un=1,lb,lc,ld;
  int nx=block->nx;
  double* x=block->x;
  double* xd=block->xd;
  double* rpar=block->rpar;
  double* y=block->outptr[0];
  double* u1=block->inptr[0];
  double* u2=block->inptr[1];
  int* outsz=block->outsz;
  int* insz=block->insz;
    
  lb=nx*nx;
  lc=lb+nx*insz[0];
  
  if (flag ==1 || flag ==6){
    /* y=c*x+d*u1 */  
    ld=lc+nx*outsz[0];

    C2F(dmmul)(&rpar[lc],outsz,x,&nx,y,outsz,outsz,&nx,&un);
    C2F(dmmul1)(&rpar[ld],outsz,u1,&insz[0],y,outsz,outsz,&insz[0],&un);

  }else if (flag == 2 && block->nevprt == 1){
    /* x+=u2 */
    memcpy(x,u2 ,nx*sizeof(double));
  }else if (flag ==0 && block->nevprt == 0){
    /* xd=a*x+b*u1 */
    C2F(dmmul)(&rpar[0],&nx,x,&nx,xd,&nx,&nx,&nx,&un);
    C2F(dmmul1)(&rpar[lb],&nx,u1,&insz[0],xd,&nx,&nx,&insz[0],&un);
  }
}
</PRE>
<HR>
<ADDRESS>
Ramine Nikoukhah
2004-06-22
</ADDRESS>
</BODY>
</HTML>
