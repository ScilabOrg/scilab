<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>SELECT_m_intfunc</TITLE>
<META NAME="description" CONTENT="SELECT_m_intfunc">
<META NAME="keywords" CONTENT="SELECT_m_intfunc">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="SELECT_m_intfunc.css">

</HEAD>

<BODY bgcolor="#FFFFFF">

<P>
<DIV ALIGN="CENTER">
Fonction d'interfaçage
<BR><A NAME="tex2html1"
  HREF="./SELECT_m_intfunc.htm">fr</A>

</DIV>
<H2><A NAME="SECTION00010000000000000000"></A><A NAME="SELECT_m_intfunc"></A>
<BR>
SELECT_m
</H2>

<H3><font color="blue"><A NAME="SECTION00011000000000000000">
Contenu du fichier</A>
</font></H3>
<BR>
<PRE  CLASS="verbatim">function [x,y,typ]=SELECT_m(job,arg1,arg2)
// Copyright INRIA
x=[];y=[];typ=[]
select job
case 'plot' then
  standard_draw(arg1)
case 'getinputs' then
  [x,y,typ]=standard_inputs(arg1)
case 'getoutputs' then
  [x,y,typ]=standard_outputs(arg1)
case 'getorigin' then
  [x,y]=standard_origin(arg1)
case 'set' then
  x=arg1;
  graphics=arg1.graphics;exprs=graphics.exprs
  model=arg1.model;
  while %t do
    [ok,typ,nin,z0,exprs]=getvalue('Set parameters',..
	['Datatype(1= real double  2=Complex 3=int32 ..)';'number of inputs';'initial connected input'],..
	list('vec',1,'vec',1,'vec',1),exprs)
    if ~ok then break,end
    if z0&gt;nin|z0&lt;=0 then
      message('initial connected input is not a valid input port number')
    elseif ((typ&lt;1)|(typ&gt;8)) message("Datatype is not supported");ok=%f;
    else
      it=typ*ones(1,nin)
      ot=typ
      if ok then
      in=[-ones(nin,1) -2*ones(nin,1)]
      out=[-1 -2]
      [model,graphics,ok]=set_io(model,graphics,list(in,it),list(out,ot),ones(nin,1),[])
      if ok then
	graphics.exprs=exprs;
	model.dstate=z0,
	x.graphics=graphics;x.model=model
	break
      end
      end
    end
  end
case 'define' then
  z0=1
  nin=2

  model=scicos_model()
  model.sim=list('selector_m',4)
  model.in=[-1;-1]
  model.in2=[-2;-2]
  model.intyp=1
  model.out=-1
  model.out2=-2
  model.outtyp=1
  model.evtout=[]
  model.state=[]
  model.rpar=[]
  model.ipar=[] 
  model.firing=[]
  model.evtin=ones(nin,1)
  model.dstate=z0
  model.blocktype='c'
  model.dep_ut=[%t %f]
  
  exprs=[sci2exp(1);sci2exp(nin);sci2exp(z0)]
  gr_i=['xstringb(orig(1),orig(2),''Selector'',sz(1),sz(2),''fill'');']
  x=standard_define([2 2],model,exprs,gr_i)
end
endfunction
</PRE>

<BR>




</BODY>
</HTML>
