<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>WFILE_f</TITLE>
<META NAME="description" CONTENT="WFILE_f">
<META NAME="keywords" CONTENT="WFILE_f">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="WFILE_f.css">

</HEAD>

<BODY bgcolor="#FFFFFF">

<P>
<DIV ALIGN="CENTER">
Bloc Scicos
<BR><A NAME="tex2html1"
  HREF="./WFILE_f.htm">fr</A> - <A NAME="tex2html2"
  HREF="../../eng/scicos/WFILE_f.htm">eng</A>

</DIV>
<H2><A NAME="SECTION00010000000000000000"></A><A NAME="WFILE_f"></A>
<BR>
Ecriture dans un fichier
</H2>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfig{file=WFILE_f.eps,width=90.00pt}$
 -->
<IMG
 WIDTH="143" HEIGHT="101" ALIGN="BOTTOM" BORDER="0"
 SRC="../../images/scicos/WFILE_f_blk.gif"
 ALT="\epsfig{file=WFILE_f.eps,width=90.00pt}">

</DIV>
<BR>

<H3><font color="blue"><A NAME="SECTION00020000000000000000">
Contenu</A>
</font></H3>
<!--Table of Contents-->

<UL CLASS="TofC">
<LI><A NAME="tex2html4"
  HREF="WFILE_f.htm#SECTION00010000000000000000">Ecriture dans un fichier</A>
<UL>
<LI><A NAME="tex2html5"
  HREF="WFILE_f.htm#SECTION00021000000000000000">Palette</A>
<LI><A NAME="tex2html6"
  HREF="WFILE_f.htm#SECTION00022000000000000000">Description</A>
<LI><A NAME="tex2html7"
  HREF="WFILE_f.htm#SECTION00023000000000000000">Boîte de dialogue</A>
<LI><A NAME="tex2html8"
  HREF="WFILE_f.htm#SECTION00024000000000000000">Propriétés par défaut</A>
<LI><A NAME="tex2html9"
  HREF="WFILE_f.htm#SECTION00025000000000000000">Fonction d'interface</A>
<LI><A NAME="tex2html10"
  HREF="WFILE_f.htm#SECTION00026000000000000000">Fonction de calcul (type 0)</A>
<LI><A NAME="tex2html11"
  HREF="WFILE_f.htm#SECTION00027000000000000000">Auteurs</A>
</UL></UL>
<!--End of Table of Contents-->
<H3><font color="blue"><A NAME="SECTION00021000000000000000">
Palette</A>
</font></H3>

<UL>
<LI><A NAME="tex2html3"
  HREF="Sinks_pal.htm">Sinks - Palette Affichage</A>
</LI>
</UL>
<H3><font color="blue"><A NAME="SECTION00022000000000000000">
Description</A>
</font></H3>

<P>
Ajoutez ici un paragraphe pour la description de la fonction  
<BR>
<H3><font color="blue"><A NAME="SECTION00023000000000000000">
Boîte de dialogue</A>
</font></H3>

<DIV ALIGN="CENTER">
<IMG
 WIDTH="477" HEIGHT="205" BORDER="0"
 SRC="../../images/scicos/WFILE_f_gui.gif"
 ALT="\begin{figure}\begin{center}
\epsfig{file=WFILE_f_gui.eps,width=300pt}
\end{center}\end{figure}">
</DIV>

<P>

<UL>
<LI><b>Input size</b>
<BR>   : Type 'vec' de taille 1. La description du paramètre 1.
</LI>
<LI><b>Output file name</b>
<BR>   : Type 'str' de taille 1. La description du paramètre 2.
</LI>
<LI><b>Output Format</b>
<BR>   : Type 'str' de taille 1. La description du paramètre 3.
</LI>
<LI><b>Buffer size</b>
<BR>   : Type 'vec' de taille 1. La description du paramètre 4.
</LI>
</UL>

<H3><font color="blue"><A NAME="SECTION00024000000000000000">
Propriétés par défaut</A>
</font></H3>

<UL>
<LI><b>toujours actif:</b> non
</LI>
<LI><b>direct-feedthrough:</b> oui
</LI>
<LI><b>détection de passage à zéro:</b> non
</LI>
<LI><b>mode:</b> non
</LI>
<LI><b>nombre/taille des entrées régulières:</b> 1 / 1
</LI>
<LI><b>nombre/taille des sorties sorties régulières:</b> 0 / 
</LI>
<LI><b>nombre/taille des entrées évènementielles:</b> 1 / 1
</LI>
<LI><b>nombre/taille des sorties évènementielles:</b> 0 / 
</LI>
<LI><b>possède un état continu:</b> non
</LI>
<LI><b>possède un état discret:</b> oui
</LI>
<LI><b>nom de la fonction de calcul:</b> <EM>writef</EM>
</LI>
</UL>

<H3><font color="blue"><A NAME="SECTION00025000000000000000">
Fonction d'interface</A>
</font></H3>
<TT>WFILE_f.sci</TT>

<H3><font color="blue"><A NAME="SECTION00026000000000000000">
Fonction de calcul (type 0)</A>
</font></H3>
 <SMALL CLASS="TINY">  </SMALL>
<BR>
<PRE  CLASS="verbatim">      subroutine writef(flag,nevprt,t,xd,x,nx,z,nz,tvec,ntvec,
     &amp;     rpar,nrpar,ipar,nipar,u,nu,y,ny)
c     Copyright INRIA

c     Scicos block simulator
c     write input to a binary or formatted file
c     ipar(1) = lfil : file name length
c     ipar(2) = lfmt : format length (0) if binary file
c     ipar(3)          unused
c     ipar(4) = N : buffer length
c     ipar(5:4+lfil) = character codes for file name
c     ipar(5+lfil:4+lfil+lfmt) = character codes for format if any
c
      double precision t,xd(*),x(*),z(*),tvec(*),rpar(*),u(*),y(*)
      integer flag,nevprt,nx,nz,ntvec,nrpar,ipar(*)
      integer nipar,nu,ny


      include '../stack.h'
      integer i,n
      integer mode(2)
c     
      N=ipar(4)
      K=int(z(1))
      lunit=int(z(2))
c
      if(flag.eq.2.and.nevprt.gt.0) then
c     add new point to the buffer
         K=K+1
         z(2+K)=t
         do 01 i=1,nu
            z(2+N+(i-1)*N+K)=u(i)
 01      continue
         z(1)=K
         if(K.lt.N) return
c     write on the file
         if (ipar(2).gt.0) then
c     .     formatted write
            call cvstr(ipar(2),ipar(5+ipar(1)),buf,1)
            do 10 j=1,K
               write(lunit,buf(1:ipar(2)),err=100)
     $              (z(2+N+(i-1)*N+j),i=0,nu)
 10         continue
         else
c     .     unformatted write
            do 11 j=1,K
               write(lunit,err=100) (z(2+N+(i-1)*N+j),i=0,nu)
 11         continue
         endif
         z(1)=0.0d0
      elseif(flag.eq.4) then
c     file opening
         lfil=ipar(1)
         call cvstr(lfil,ipar(5),buf,1)
         lfmt=ipar(2)
         lunit=0
         if(lfmt.gt.0) then
            mode(1)=003
            mode(2)=0
            call clunit(lunit,buf(1:lfil),mode)
            if(err.gt.0) goto 100
         else
            mode(1)=103
            mode(2)=0
            call clunit(lunit,buf(1:lfil),mode)
            if(err.gt.0) goto 100
         endif
         z(1)=0
         z(2)=lunit
         z(3)=t
         call dset(nu*N,0.0d0,z(4),1)
      elseif(flag.eq.5) then
         if(lunit.eq.0) then
            return
         endif
         if(K.ge.1) then
c     write on the file
            lfmt=ipar(2)
            if (lfmt.gt.0) then
c     .        formatted write
               call cvstr(lfmt,ipar(5+ipar(1)),buf,1)
               do 20 j=1,K
                  write(lunit,buf(1:lfmt)) (z(2+N+(i-1)*N+j),i=0,nu)
 20            continue
            else
c     .        unformatted write
               do 21 j=1,K
                  write(lunit) (z(2+N+(i-1)*N+j),i=0,nu)
 21            continue
            endif
         endif
         lfil=ipar(1)
         call clunit(-lunit,buf(1:lfil),mode)
         if(err.gt.0) goto 100
         z(2)=0.0d0
      endif
      return
 100  continue
      err=0
      call basout(io,wte,'File '//buf(1:lfil)//' Cannot be opened')
      flag=-1
      end
</PRE>

<H3><font color="blue"><A NAME="SECTION00027000000000000000">
Auteurs</A>
</font></H3>
<b>Ramine Nikoukhah</b> INRIA

<BR>




</BODY>
</HTML>
