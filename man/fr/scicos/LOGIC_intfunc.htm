<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>LOGIC_intfunc</TITLE>
<META NAME="description" CONTENT="LOGIC_intfunc">
<META NAME="keywords" CONTENT="LOGIC_intfunc">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="LOGIC_intfunc.css">

</HEAD>

<BODY bgcolor="#FFFFFF">

<P>
<DIV ALIGN="CENTER">
Fonction d'interfaçage
<BR><A NAME="tex2html1"
  HREF="./LOGIC_intfunc.htm">fr</A>

</DIV>
<H2><A NAME="SECTION00010000000000000000"></A><A NAME="LOGIC_intfunc"></A>
<BR>
LOGIC
</H2>

<H3><font color="blue"><A NAME="SECTION00011000000000000000">
Contenu du fichier</A>
</font></H3>
<BR>
<PRE  CLASS="verbatim">function [x,y,typ]=LOGIC(job,arg1,arg2)
// Copyright INRIA
  x=[];y=[],typ=[]
  select job
   case 'plot' then
    standard_draw(arg1)
   case 'getinputs' then
    [x,y,typ]=standard_inputs(arg1)
   case 'getoutputs' then
    [x,y,typ]=standard_outputs(arg1)
   case 'getorigin' then
    [x,y]=standard_origin(arg1)
   case 'set' then
    x=arg1
    graphics=arg1.graphics;exprs=graphics.exprs
    model=arg1.model;
    while %t do
      [ok,mat,herit,exprs]=getvalue('Set Logic parameters',..
	  ['Truth table';'Inherit(0=no 1=yes)'],..
	  list('mat',[-1,-2],'vec',1),exprs)
      if ~ok then break,end
      nout=size(mat,2)
      nin=(log(size(mat,1))/log(2))
      u1=floor(nin)
      if (herit&lt;&gt;0) then herit=1;end;
      if (u1&lt;&gt;nin) then message ("The number of rows of the truth table must be a power of two");ok=%f;end
      if (find(mat(:)&lt;&gt;0&amp;mat(:)&lt;&gt;1)&lt;&gt;[]) then message ("number in truth table must be 0 or 1");ok=%f;end
      if ok then
        in=[ones(nin,1) ones(nin,1)]
        out=[ones(nout,1) ones(nout,1)]
        it=5*ones(1,nin)
      	ot=5*ones(1,nout)
      	[model,graphics,ok]=set_io(model,graphics,list(in,it),list(out,ot),ones(1-herit,1),[])
      end
      if ok then
	graphics.exprs=exprs;
	mat=int8(mat);
	model.opar=list(mat);
	x.graphics=graphics;x.model=model;
	break
      end
    end
   case 'define' then
   mat=[0;0;0;1]
   model=scicos_model()
   model.sim=list('logic',4)
   model.in=[1;1]
   model.in2=[1;1]
   model.out=1
   model.out2=1
   model.evtin=1
   model.intyp=[5 5]
   model.outtyp=5
   model.opar=list(int8(mat));
   model.blocktype='c'
   model.firing=%f
   model.dep_ut=[%t %f]
   exprs=[sci2exp(mat);sci2exp(0)]
   gr_i=['xstringb(orig(1),orig(2),[''Logic''],sz(1),sz(2),''fill'');']
   x=standard_define([2 2],model,exprs,gr_i)
  end
endfunction
</PRE>

<BR>




</BODY>
</HTML>
