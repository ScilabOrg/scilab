<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>TIME_DELAY</TITLE>
<META NAME="description" CONTENT="TIME_DELAY">
<META NAME="keywords" CONTENT="TIME_DELAY">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="TIME_DELAY.css">

</HEAD>

<BODY bgcolor="#FFFFFF">

<P>
<DIV ALIGN="CENTER">
Scicos Block
<BR><A NAME="tex2html1"
  HREF="../../fr/scicos/TIME_DELAY.htm">fr</A> - <A NAME="tex2html2"
  HREF="./TIME_DELAY.htm">eng</A>

</DIV>
<H2><A NAME="SECTION00010000000000000000"></A><A NAME="TIME_DELAY"></A>
<BR>
Time delay
</H2>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfig{file=TIME_DELAY.eps,width=90.00pt}$
 -->
<IMG
 WIDTH="143" HEIGHT="101" ALIGN="BOTTOM" BORDER="0"
 SRC="../../images/scicos/TIME_DELAY_blk.gif"
 ALT="\epsfig{file=TIME_DELAY.eps,width=90.00pt}">

</DIV>
<BR>

<H3><font color="blue"><A NAME="SECTION00020000000000000000">
Contents</A>
</font></H3>
<!--Table of Contents-->

<UL CLASS="TofC">
<LI><A NAME="tex2html4"
  HREF="TIME_DELAY.htm#SECTION00010000000000000000">Time delay</A>
<UL>
<LI><A NAME="tex2html5"
  HREF="TIME_DELAY.htm#SECTION00021000000000000000">Palette</A>
<LI><A NAME="tex2html6"
  HREF="TIME_DELAY.htm#SECTION00022000000000000000">Description</A>
<LI><A NAME="tex2html7"
  HREF="TIME_DELAY.htm#SECTION00023000000000000000">Dialog box</A>
<LI><A NAME="tex2html8"
  HREF="TIME_DELAY.htm#SECTION00024000000000000000">Default properties</A>
<LI><A NAME="tex2html9"
  HREF="TIME_DELAY.htm#SECTION00025000000000000000">Interfacing function</A>
<LI><A NAME="tex2html10"
  HREF="TIME_DELAY.htm#SECTION00026000000000000000">Computational function (type 4)</A>
<LI><A NAME="tex2html11"
  HREF="TIME_DELAY.htm#SECTION00027000000000000000">Authors</A>
</UL></UL>
<!--End of Table of Contents-->
<H3><font color="blue"><A NAME="SECTION00021000000000000000">
Palette</A>
</font></H3>

<UL>
<LI><A NAME="tex2html3"
  HREF="Linear_pal.htm">Linear - Linear palette</A>
</LI>
</UL>
<H3><font color="blue"><A NAME="SECTION00022000000000000000">
Description</A>
</font></H3>

<P>
The Transport Delay block delays the input by a specified amount of
time. It can be used to simulate a time delay. At the start of the
simulation, the block outputs the Initial input parameter until the
simulation time exceeds the Time delay parameter, when the block
begins generating the delayed input. The Time delay parameter must be
nonnegative. 

<H3><font color="blue"><A NAME="SECTION00023000000000000000">
Dialog box</A>
</font></H3>

<DIV ALIGN="CENTER">
<IMG
 WIDTH="477" HEIGHT="189" BORDER="0"
 SRC="../../images/scicos/TIME_DELAY_gui.gif"
 ALT="\begin{figure}\begin{center}
\epsfig{file=TIME_DELAY_gui.eps,width=300pt}
\end{center}\end{figure}">
</DIV>

<P>

<UL>
<LI>Delay:The amount of simulation time that the input signal is
  delayed before being propagated to the output. The value must be
  nonnegative. 
</LI>
<LI>initial input: The output generated by the block between the
  start of the simulation and the Time delay. 
</LI>
<LI>Buffer size:The initial memory allocation for the number of
  points to store. 
</LI>
</UL>

<H3><font color="blue"><A NAME="SECTION00024000000000000000">
Default properties</A>
</font></H3>

<UL>
<LI><b>always active:</b> no
</LI>
<LI><b>direct-feedthrough:</b> no
</LI>
<LI><b>zero-crossing:</b> no
</LI>
<LI><b>mode:</b> no
</LI>
<LI><b>number/sizes of inputs:</b> 1 / 1
</LI>
<LI><b>number/sizes of outputs:</b> 1 / 1
</LI>
<LI><b>number/sizes of activation inputs:</b> 0 / 
</LI>
<LI><b>number/sizes of activation outputs:</b> 0 / 
</LI>
<LI><b>continuous-time state:</b> no
</LI>
<LI><b>discrete-time state:</b> no
</LI>
<LI><b>name of computational function:</b> <EM>time_delay</EM>
</LI>
</UL>

<H3><font color="blue"><A NAME="SECTION00025000000000000000">
Interfacing function</A>
</font></H3>
<TT>TIME_DELAY.sci</TT>

<H3><font color="blue"><A NAME="SECTION00026000000000000000">
Computational function (type 4)</A>
</font></H3>
 <SMALL CLASS="TINY">  </SMALL>
<BR>
<PRE  CLASS="verbatim">#include "scicos_block.h"
#include &lt;math.h&gt;
#include "../machine.h"

#if WIN32
#define NULL    0
#endif

extern void sciprint __PARAMS((char *fmt,...));

void time_delay(scicos_block *block,int flag)
{/*  rpar[0]=delay, rpar[1]=init value, ipar[0]=buffer length */
  double* pw,del,t,td,eps;
  int* iw;
  int i,j,k;
  if (flag == 4){/* the workspace is used to store previous values */
    if ((*block-&gt;work=
	 scicos_malloc(sizeof(int)+sizeof(double)* 
		       block-&gt;ipar[0]*(1+block-&gt;insz[0])))== NULL ) {
      set_block_error(-16);
      return;
    }
    eps=1.0e-9; /* shift times to left to avoid replacing 0 */
    pw=*block-&gt;work; 
    pw[0]=-block-&gt;rpar[0]*(block-&gt;ipar[0]-1)-eps;
    for(j=1;j&lt; block-&gt;insz[0]+1;j++){
	pw[block-&gt;ipar[0]*j]=block-&gt;rpar[1];
    }

    for(i=1;i&lt; block-&gt;ipar[0];i++){
      pw[i]=pw[i-1]+block-&gt;rpar[0]-eps;
      for(j=1;j&lt; block-&gt;insz[0]+1;j++){
	pw[i+block-&gt;ipar[0]*j]=block-&gt;rpar[1];
      }
    }
    
    iw=(int *)(pw+block-&gt;ipar[0]*(1+block-&gt;insz[0]));
    *iw=0;
    for (k=0;k&lt;block-&gt;insz[0];k++){
	block-&gt;outptr[0][k]=block-&gt;rpar[1];
    }
  }else  if (flag == 5){
    scicos_free(*block-&gt;work);

  } else if (flag==0||flag==2) {
    if (flag==2) do_cold_restart();
    pw=*block-&gt;work; 
    iw=(int *)(pw+block-&gt;ipar[0]*(1+block-&gt;insz[0]));
    t=get_scicos_time();
    td=t-block-&gt;rpar[0];
    if(td&lt;pw[*iw]){
      sciprint("delayed time=%f but last stored time=%f \r\n", td, pw[*iw]);
      sciprint("Consider increasing the length of buffer in delay block \r\n");
    }

    if (t&gt;pw[(block-&gt;ipar[0]+*iw-1)%block-&gt;ipar[0]]){
      for(j=1;j&lt; block-&gt;insz[0]+1;j++){
	pw[*iw +block-&gt;ipar[0]*j]=block-&gt;inptr[0][j-1];
      }
      pw[*iw]=t;
      /*sciprint("**time is %f. I put %f, in %d \r\n", t,block-&gt;inptr[0][0],*iw);*/
      *iw=(*iw+1)%block-&gt;ipar[0];
 
    }else{
      for(j=1;j&lt; block-&gt;insz[0]+1;j++){
	pw[(block-&gt;ipar[0]+*iw-1)%block-&gt;ipar[0] +block-&gt;ipar[0]*j]=block-&gt;inptr[0][j-1];
      }
      pw[(block-&gt;ipar[0]+*iw-1)%block-&gt;ipar[0]]=t;
      /*sciprint("**time is %f. I put %f, in %d \r\n", t,block-&gt;inptr[0][0],*iw);*/

    }

  } else if (flag==1) {
    pw=*block-&gt;work; 
    iw=(int *) (pw+block-&gt;ipar[0]*(1+block-&gt;insz[0]));
    t=get_scicos_time();
    td=t-block-&gt;rpar[0];

    i=0;j= block-&gt;ipar[0]-1;

    while (j-i&gt;1) {
      k=(i+j)/2;
      if (td&lt;pw[(k+*iw)%block-&gt;ipar[0]]) {
	j=k;
      }else if (td&gt;pw[(k+*iw)%block-&gt;ipar[0]]) {
	i=k;
      }else{
	i=k;
	j=k;
	break;
      }
    }
    i=(i+*iw)%block-&gt;ipar[0];
    j=(j+*iw)%block-&gt;ipar[0];
    del=pw[j]-pw[i];
    /*    sciprint("time is %f. interpolating %d and %d, i.e. %f, %f\r\n", t,i,j,pw[i],pw[j]);
	  sciprint("values are  %f   %f.\r\n",pw[i+block-&gt;ipar[0]],pw[j+block-&gt;ipar[0]]);*/
    if(del!=0.0){
      for (k=1;k&lt;block-&gt;insz[0]+1;k++){
	block-&gt;outptr[0][k-1]=((pw[j]-td)*pw[i+block-&gt;ipar[0]*k] +
			       (td-pw[i])*pw[j+block-&gt;ipar[0]*k])/del;
      }
    }else{
      for (k=1;k&lt;block-&gt;insz[0]+1;k++){
	block-&gt;outptr[0][k-1]=pw[i+block-&gt;ipar[0]*k];
      }
    }
  }
}
</PRE>

<H3><font color="blue"><A NAME="SECTION00027000000000000000">
Authors</A>
</font></H3>
<b>Ramine Nikoukhah</b> INRIA

<BR>




</BODY>
</HTML>
