<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>CMAT3D_intfunc</TITLE>
<META NAME="description" CONTENT="CMAT3D_intfunc">
<META NAME="keywords" CONTENT="CMAT3D_intfunc">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="CMAT3D_intfunc.css">

</HEAD>

<BODY bgcolor="#FFFFFF">

<P>
<DIV ALIGN="CENTER">
Interfacing function
<BR><A NAME="tex2html1"
  HREF="./CMAT3D_intfunc.htm">eng</A>

</DIV>
<H2><A NAME="SECTION00010000000000000000"></A><A NAME="CMAT3D_intfunc"></A>
<BR>
CMAT3D
</H2>

<H3><font color="blue"><A NAME="SECTION00011000000000000000">
File content</A>
</font></H3>
<BR>
<PRE  CLASS="verbatim">function [x,y,typ]=CMAT3D(job,arg1,arg2)
// Copyright INRIA
x=[];y=[];typ=[]
select job
case 'plot' then
  standard_draw(arg1)
case 'getinputs' then
  [x,y,typ]=standard_inputs(o)
case 'getoutputs' then
  x=[];y=[];typ=[];
case 'getorigin' then
  [x,y]=standard_origin(arg1)
case 'set' then
  x=arg1;
  graphics=arg1.graphics;
  exprs=graphics.exprs
  model=arg1.model;
  while %t do
    [ok,vec_x,vec_y,colormap,cmin,cmax,exprs]=getvalue(..
	'Set Scope parameters',..
	['Bounds Vector X (-1 for standard)';
	'Bounds Vector Y (-1 for standard)';
	'ColorMap';
	'Zmin';
	'Zmax'],..
	 list('vec',-1,'vec',-1,'vec',-1,'vec',1,'vec',1),exprs)
    if ~ok then break,end //user cancel modification
    mess=[]
    if size(vec_x,'*')&lt;&gt;size(vec_y,'*') then
    mess=[mess;'Vector X and Vector Y must have the same size';' ']
    ok=%f
    end
    if cmax&lt;=cmin then
      mess=[mess;'Error with minimum and maximum value';' ']
      ok=%f
    end
    if ~ok then
      message(['Some specified values are inconsistent:';' ';mess])
    end
    if ok then
	size_x = size(vec_x,'*');
	size_c=size(colormap(:),1);
	ipar=[cmin;cmax;size_c;size_x];
  	rpar=[colormap(:);vec_x(:);vec_y(:)];
	model.ipar=ipar;
	model.rpar=rpar;
	graphics.exprs=exprs;
	x.graphics=graphics;
        x.model=model;
	break;
    end
  end
case 'define' then
  cmin = 0;
  cmax = 100;
  colormap = jetcolormap(25);
  size_c = 25;
  x=-1;
  y=-1;
  size_x = 1;
  size_y = 1;

  model=scicos_model()
  model.sim=list('cmat3d',4)
  model.in=-1
  model.in2=-2
  model.intyp=1
  model.evtin=1
  model.ipar=[cmin;cmax;size_c;size_x;size_y]
  model.rpar=[colormap(:);x;y]
  model.blocktype='c'
  model.dep_ut=[%t %f]
  
  exprs=[strcat(string(x),' ');
	strcat(string(y),' ');
	string('jetcolormap(25)');
	 string(cmin);
	 string(cmax)];
   gr_i='xstringb(orig(1),orig(2),''Mat. 3D'',sz(1),sz(2),''fill'')'
   x=standard_define([2 2],model,exprs,gr_i)
end
endfunction
</PRE>

<BR>




</BODY>
</HTML>
