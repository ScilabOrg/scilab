<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>CEVENTSCOPE</TITLE>
<META NAME="description" CONTENT="CEVENTSCOPE">
<META NAME="keywords" CONTENT="CEVENTSCOPE">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="CEVENTSCOPE.css">

</HEAD>

<BODY bgcolor="#FFFFFF">

<P>
<DIV ALIGN="CENTER">
Scicos Block
<BR><A NAME="tex2html1"
  HREF="../../fr/scicos/CEVENTSCOPE.htm">fr</A> - <A NAME="tex2html2"
  HREF="./CEVENTSCOPE.htm">eng</A>

</DIV>
<H2><A NAME="SECTION00010000000000000000"></A><A NAME="CEVENTSCOPE"></A>
<BR>
CEVENTSCOPE title
</H2>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfig{file=CEVENTSCOPE.eps,width=90.00pt}$
 -->
<IMG
 WIDTH="143" HEIGHT="152" ALIGN="BOTTOM" BORDER="0"
 SRC="../../images/scicos/CEVENTSCOPE_blk.gif"
 ALT="\epsfig{file=CEVENTSCOPE.eps,width=90.00pt}">

</DIV>
<BR>

<H3><font color="blue"><A NAME="SECTION00020000000000000000">
Contents</A>
</font></H3>
<!--Table of Contents-->

<UL CLASS="TofC">
<LI><A NAME="tex2html4"
  HREF="CEVENTSCOPE.htm#SECTION00010000000000000000">CEVENTSCOPE title</A>
<UL>
<LI><A NAME="tex2html5"
  HREF="CEVENTSCOPE.htm#SECTION00021000000000000000">Palette</A>
<LI><A NAME="tex2html6"
  HREF="CEVENTSCOPE.htm#SECTION00022000000000000000">Description</A>
<LI><A NAME="tex2html7"
  HREF="CEVENTSCOPE.htm#SECTION00023000000000000000">Dialog box</A>
<LI><A NAME="tex2html8"
  HREF="CEVENTSCOPE.htm#SECTION00024000000000000000">Default properties</A>
<LI><A NAME="tex2html9"
  HREF="CEVENTSCOPE.htm#SECTION00025000000000000000">Interfacing function</A>
<LI><A NAME="tex2html10"
  HREF="CEVENTSCOPE.htm#SECTION00026000000000000000">Computational function (type 4)</A>
<LI><A NAME="tex2html11"
  HREF="CEVENTSCOPE.htm#SECTION00027000000000000000">Authors</A>
</UL></UL>
<!--End of Table of Contents-->
<H3><font color="blue"><A NAME="SECTION00021000000000000000">
Palette</A>
</font></H3>

<UL>
<LI><A NAME="tex2html3"
  HREF="Sinks_pal.htm">Sinks - Sinks palette</A>
</LI>
</UL>
<H3><font color="blue"><A NAME="SECTION00022000000000000000">
Description</A>
</font></H3>

<P>
Add here a paragraph of the function description  
<BR>
<H3><font color="blue"><A NAME="SECTION00023000000000000000">
Dialog box</A>
</font></H3>

<DIV ALIGN="CENTER">
<IMG
 WIDTH="477" HEIGHT="193" BORDER="0"
 SRC="../../images/scicos/CEVENTSCOPE_gui.gif"
 ALT="\begin{figure}\begin{center}
\epsfig{file=CEVENTSCOPE_gui.eps,width=300pt}
\end{center}\end{figure}">
</DIV>

<P>

<UL>
<LI><b>Number of event inputs</b>
<BR>
The parameter description 1.
<BR>
Properties : Type 'vec' of size 1.
</LI>
<LI><b>colors c (<SPAN CLASS="MATH"><IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="../../images/scicos/CEVENTSCOPE_img3_eng.gif"
 ALT="$ &gt;$"></SPAN>
0) or mark (<SPAN CLASS="MATH"><IMG
 WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="../../images/scicos/CEVENTSCOPE_img4_eng.gif"
 ALT="$ &lt;$"></SPAN>
0)</b>
<BR>
The parameter description 2.
<BR>
Properties : Type 'vec' of size -1.
</LI>
<LI><b>Output window number (-1 for automatic)</b>
<BR>
The parameter description 3.
<BR>
Properties : Type 'vec' of size 1.
</LI>
<LI><b>Output window position</b>
<BR>
The parameter description 4.
<BR>
Properties : Type 'vec' of size -1.
</LI>
<LI><b>Output window sizes</b>
<BR>
The parameter description 5.
<BR>
Properties : Type 'vec' of size -1.
</LI>
<LI><b>Refresh period</b>
<BR>
The parameter description 6.
<BR>
Properties : Type 'vec' of size 1.
</LI>
</UL>

<H3><font color="blue"><A NAME="SECTION00024000000000000000">
Default properties</A>
</font></H3>

<UL>
<LI><b>always active:</b> no
</LI>
<LI><b>direct-feedthrough:</b> no
</LI>
<LI><b>zero-crossing:</b> no
</LI>
<LI><b>mode:</b> no
</LI>
<LI><b>number/sizes of inputs:</b> 0 / 
</LI>
<LI><b>number/sizes of outputs:</b> 0 / 
</LI>
<LI><b>number/sizes of activation inputs:</b> 1 / 1
</LI>
<LI><b>number/sizes of activation outputs:</b> 0 / 
</LI>
<LI><b>continuous-time state:</b> no
</LI>
<LI><b>discrete-time state:</b> no
</LI>
<LI><b>name of computational function:</b> <EM>cevscpe</EM>
</LI>
</UL>

<H3><font color="blue"><A NAME="SECTION00025000000000000000">
Interfacing function</A>
</font></H3>
<TT>CEVENTSCOPE.sci</TT>

<H3><font color="blue"><A NAME="SECTION00026000000000000000">
Computational function (type 4)</A>
</font></H3>
 <SMALL CLASS="TINY">  </SMALL>
<BR>
<PRE  CLASS="verbatim">/**
   \file cevscpe.c
   \author Benoit Bayol
   \version 1.0
   \date September 2006 - January 2007
   \brief CEVSCPE is a scope that indicates when the clocks is activated
   \see CEVENTSCOPE.sci in macros/scicos_blocks/Sinks/
*/

#include "scoMemoryScope.h"
#include "scoWindowScope.h"
#include "scoMisc.h"
#include "scoGetProperty.h"
#include "scoSetProperty.h"
#include "scicos_block4.h"

/** \fn cscopxy_draw(scicos_block * block, ScopeMemory ** pScopeMemory, int firstdraw)
    \brief Function to draw or redraw the window
*/
void cevscpe_draw(scicos_block * block, ScopeMemory ** pScopeMemory, int firstdraw)
{
  /* Declarations */

  int nipar; //Number of elements in ipar vector
  int i; //As usual
  int * ipar;
  double * rpar; //Integer Parameter
  int nbr_colors; //Number of colors and lines IS ALSO number of channels
  int win; //To give a name to the window
  int color_flag; //0/1 color flag -- NOT USED
  int  * colors; //Begin at ipar[2] and has a measure of 8 max
  int dimension = 2;
  double period; //Refresh Period of the scope is a vector here
  int number_of_subwin;
  int number_of_curves_by_subwin;
  double xmin, xmax, ymin, ymax;
  int win_pos[2], win_dim[2];

  /* Initialization */
  ipar =  GetIparPtrs(block);
  win = ipar[0];
  color_flag = ipar[1];
  rpar = GetRparPtrs(block);
  period = rpar[0];
  nipar = GetNipar(block);
  nbr_colors = nipar-6;
  colors=(int*)scicos_malloc(nbr_colors*sizeof(int));
  for( i = 2 ; i &lt; nbr_colors+2 ; i++)
    {
      colors[i-2] = ipar[i];
    }

  number_of_subwin = 1;
  number_of_curves_by_subwin = nbr_colors;

  ymin = 0;
  ymax = 1;

  win_pos[0] = 100;
  win_pos[1] = 100;
  win_dim[0] = 640;
  win_dim[1] = 400;

  if(firstdraw == 1)
    {
      scoInitScopeMemory(block-&gt;work,pScopeMemory, number_of_subwin, &amp;number_of_curves_by_subwin);
      scoSetLongDrawSize(*pScopeMemory,0,5000);
      scoSetShortDrawSize(*pScopeMemory,0,1);
      scoSetPeriod(*pScopeMemory,0,period);
    }

  xmin = period*scoGetPeriodCounter(*pScopeMemory,0);
  xmax = period*(scoGetPeriodCounter(*pScopeMemory,0)+1);

  scoInitOfWindow(*pScopeMemory, dimension, win, win_pos, win_dim, &amp;xmin, &amp;xmax, &amp;ymin, &amp;ymax, NULL, NULL);
  scoAddTitlesScope(*pScopeMemory,"t","y",NULL);
  scoAddCoupleOfSegments(*pScopeMemory,colors);
  scicos_free(colors);
}

/** \fn void cevscpe(scicos_block * block, int flag)
    \brief the computational function
    \param block A pointer to a scicos_block
    \param flag An integer which indicates the state of the block (init, update, ending)
*/
void cevscpe(scicos_block * block, int flag)
{
  ScopeMemory * pScopeMemory;
  int nbseg = 0;
  int tab[20];
  scoGraphicalObject pShortDraw;
  int i;
  double t;

  switch(flag)
    {
    case Initialization:
      {
	cevscpe_draw(block,&amp;pScopeMemory,1);
	break;
      }

    case StateUpdate:
      {
	t = get_scicos_time();
	/* Charging elements */
	scoRetrieveScopeMemory(block-&gt;work,&amp;pScopeMemory);
	if(scoGetPointerScopeWindow(pScopeMemory) == NULL)
	  {
	    cevscpe_draw(block,&amp;pScopeMemory,0);
	  }

	scoRefreshDataBoundsX(pScopeMemory,t);
	
	/*Not Factorize*/

	for(i = 0 ; i &lt; scoGetNumberOfCurvesBySubwin(pScopeMemory,0) ; i++)
	  {
	    if((GetNev(block)&amp;(1&lt;&lt;i))==(1&lt;&lt;i))
	      {
		tab[nbseg]=i;
		nbseg++;
	      }
	  }

	for(i = 0 ; i &lt; nbseg ; i++)
	  {
	    pShortDraw = scoGetPointerShortDraw(pScopeMemory,0,tab[i]);
	    pSEGS_FEATURE(pShortDraw)-&gt;vx[0] = t;
	    pSEGS_FEATURE(pShortDraw)-&gt;vx[1] = t;
	    pSEGS_FEATURE(pShortDraw)-&gt;vy[0] = i*0.8/nbseg;
	    pSEGS_FEATURE(pShortDraw)-&gt;vy[1] = (i+1)*0.8/nbseg;
	    pSEGS_FEATURE(pShortDraw)-&gt;Nbr1 = 2;
	    pSEGS_FEATURE(pShortDraw)-&gt;Nbr2 = 2;
	  }
	/*End of Not Factorize*/
	scoDrawScopeAmplitudeTimeStyle(pScopeMemory,t);
	break;
      }

    case Ending:
      {
	scoRetrieveScopeMemory(block-&gt;work, &amp;pScopeMemory);
	scoDelCoupleOfSegments(pScopeMemory);
	scoFreeScopeMemory(block-&gt;work,&amp;pScopeMemory);
	break;
      }
    }
}
</PRE>

<H3><font color="blue"><A NAME="SECTION00027000000000000000">
Authors</A>
</font></H3>
<b>enter here the author name</b> Add here the author  references

<BR>




</BODY>
</HTML>
