<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>RELATIONALOP</TITLE>
<META NAME="description" CONTENT="RELATIONALOP">
<META NAME="keywords" CONTENT="RELATIONALOP">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="RELATIONALOP.css">

</HEAD>

<BODY bgcolor="#FFFFFF">

<P>
<DIV ALIGN="CENTER">
Scicos Block
<BR><A NAME="tex2html1"
  HREF="../../fr/scicos/RELATIONALOP.htm">fr</A> - <A NAME="tex2html2"
  HREF="./RELATIONALOP.htm">eng</A>

</DIV>
<H2><A NAME="SECTION00010000000000000000"></A><A NAME="RELATIONALOP"></A>
<BR>
Relational operation
</H2>
<DIV ALIGN="CENTER">
<!-- MATH
 $\epsfig{file=RELATIONALOP.eps,width=90.00pt}$
 -->
<IMG
 WIDTH="143" HEIGHT="122" ALIGN="BOTTOM" BORDER="0"
 SRC="../../images/scicos/RELATIONALOP_blk.gif"
 ALT="\epsfig{file=RELATIONALOP.eps,width=90.00pt}">

</DIV>
<BR>

<H3><font color="blue"><A NAME="SECTION00020000000000000000">
Contents</A>
</font></H3>
<!--Table of Contents-->

<UL CLASS="TofC">
<LI><A NAME="tex2html4"
  HREF="RELATIONALOP.htm#SECTION00010000000000000000">Relational operation</A>
<UL>
<LI><A NAME="tex2html5"
  HREF="RELATIONALOP.htm#SECTION00021000000000000000">Palette</A>
<LI><A NAME="tex2html6"
  HREF="RELATIONALOP.htm#SECTION00022000000000000000">Description</A>
<LI><A NAME="tex2html7"
  HREF="RELATIONALOP.htm#SECTION00023000000000000000">Dialog box</A>
<LI><A NAME="tex2html8"
  HREF="RELATIONALOP.htm#SECTION00024000000000000000">Default properties</A>
<LI><A NAME="tex2html9"
  HREF="RELATIONALOP.htm#SECTION00025000000000000000">Interfacing function</A>
<LI><A NAME="tex2html10"
  HREF="RELATIONALOP.htm#SECTION00026000000000000000">Computational function (type 4)</A>
<LI><A NAME="tex2html11"
  HREF="RELATIONALOP.htm#SECTION00027000000000000000">Authors</A>
</UL></UL>
<!--End of Table of Contents-->
<H3><font color="blue"><A NAME="SECTION00021000000000000000">
Palette</A>
</font></H3>

<UL>
<LI><A NAME="tex2html3"
  HREF="Others_pal.htm">Others - Others palette</A>
</LI>
</UL>
<H3><font color="blue"><A NAME="SECTION00022000000000000000">
Description</A>
</font></H3>

<P>

<P>
It performs logical comparison of its two inputs. 

<H3><font color="blue"><A NAME="SECTION00023000000000000000">
Dialog box</A>
</font></H3>

<DIV ALIGN="CENTER">
<IMG
 WIDTH="477" HEIGHT="93" BORDER="0"
 SRC="../../images/scicos/RELATIONALOP_gui.gif"
 ALT="\begin{figure}\begin{center}
\epsfig{file=RELATIONALOP_gui.eps,width=300pt}
\end{center}\end{figure}">
</DIV>

<P>

<UL>
<LI>Operator: == : Designate the relational operator used to
  compare the two inputs.  
</LI>
<LI>Use zero crossing : Select to enable zero crossing detection. 
</LI>
</UL>

<H3><font color="blue"><A NAME="SECTION00024000000000000000">
Default properties</A>
</font></H3>

<UL>
<LI><b>always active:</b> no
</LI>
<LI><b>direct-feedthrough:</b> yes
</LI>
<LI><b>zero-crossing:</b> no
</LI>
<LI><b>mode:</b> no
</LI>
<LI><b>number/sizes of inputs:</b> 2 / 1  1
</LI>
<LI><b>number/sizes of outputs:</b> 1 / 1
</LI>
<LI><b>number/sizes of activation inputs:</b> 0 / 
</LI>
<LI><b>number/sizes of activation outputs:</b> 0 / 
</LI>
<LI><b>continuous-time state:</b> no
</LI>
<LI><b>discrete-time state:</b> no
</LI>
<LI><b>name of computational function:</b> <EM>relationalop</EM>
</LI>
</UL>

<H3><font color="blue"><A NAME="SECTION00025000000000000000">
Interfacing function</A>
</font></H3>
<TT>RELATIONALOP.sci</TT>

<H3><font color="blue"><A NAME="SECTION00026000000000000000">
Computational function (type 4)</A>
</font></H3>
 <SMALL CLASS="TINY">  </SMALL>
<BR>
<PRE  CLASS="verbatim">#include "scicos_block.h"
#include &lt;math.h&gt;


void relationalop(scicos_block *block,int flag)
{
  int i;
  i=block-&gt;ipar[0];
  if(flag==1){
    if ((block-&gt;ng!=0)&amp;(get_phase_simulation()==2))
      {
	block-&gt;outptr[0][0]=block-&gt;mode[0]-1.0;
      }
    else {
      switch (i)
	{
	case 0:
	  if(block-&gt;inptr[0][0]==block-&gt;inptr[1][0]) {
	    block-&gt;outptr[0][0]=1.0;
	  }else{
	    block-&gt;outptr[0][0]=0.0;
	  }
	  break;
	  
	case 1:
	  if(block-&gt;inptr[0][0]!=block-&gt;inptr[1][0]) {
	    block-&gt;outptr[0][0]=1.0;
	  }else{
	    block-&gt;outptr[0][0]=0.0;
	  }
	  break;
	case 2:
	  if(block-&gt;inptr[0][0]&lt;block-&gt;inptr[1][0]) {
	    block-&gt;outptr[0][0]=1.0;
	  }else{
	    block-&gt;outptr[0][0]=0.0;
	  }
	  break;    
	case 3:
	  if(block-&gt;inptr[0][0]&lt;=block-&gt;inptr[1][0]) {
	    block-&gt;outptr[0][0]=1.0;
	  }else{
	    block-&gt;outptr[0][0]=0.0;
	  }
	  break;   
	case 4:
	  if(block-&gt;inptr[0][0]&gt;=block-&gt;inptr[1][0]) {
	    block-&gt;outptr[0][0]=1.0;
	  }else{
	    block-&gt;outptr[0][0]=0.0;
	  }
	  break;   
	case 5:
	  if(block-&gt;inptr[0][0]&gt;block-&gt;inptr[1][0]) {
	    block-&gt;outptr[0][0]=1.0;
	  }else{
	    block-&gt;outptr[0][0]=0.0;
	  }
	  break;
	}
    }

  }else if(flag==9){
    block-&gt;g[0]=block-&gt;inptr[0][0]-block-&gt;inptr[1][0];
    if (get_phase_simulation()==1) {
      switch (i)
	{
	case 0:
	  if(block-&gt;inptr[0][0]==block-&gt;inptr[1][0]) {
	    block-&gt;mode[0]=(int)2.0;
	  }else{
	    block-&gt;mode[0]=(int)1.0;
	  }
	  break;
	  
	case 1:
	  if(block-&gt;inptr[0][0]!=block-&gt;inptr[1][0]) {
	    block-&gt;mode[0]=(int)2.0;
	  }else{
	    block-&gt;mode[0]=(int)1.0;
	  }
	  break;
	case 2:
	  if(block-&gt;inptr[0][0]&lt;block-&gt;inptr[1][0]) {
	    block-&gt;mode[0]=(int)2.0;
	  }else{
	    block-&gt;mode[0]=(int)1.0;
	  }
	  break;    
	case 3:
	  if(block-&gt;inptr[0][0]&lt;=block-&gt;inptr[1][0]) {
	    block-&gt;mode[0]=(int)2.0;
	  }else{
	    block-&gt;mode[0]=(int)1.0;
	  }
	  break;   
	case 4:
	  if(block-&gt;inptr[0][0]&gt;=block-&gt;inptr[1][0]) {
	    block-&gt;mode[0]=(int)2.0;
	  }else{
	    block-&gt;mode[0]=(int)1.0;
	  }
	  break;   
	case 5:
	  if(block-&gt;inptr[0][0]&gt;block-&gt;inptr[1][0]) {
	    block-&gt;mode[0]=(int)2.0;
	  }else{
	    block-&gt;mode[0]=(int)1.0;
	  }
	  break;
	}
    }
  }
}
</PRE>

<H3><font color="blue"><A NAME="SECTION00027000000000000000">
Authors</A>
</font></H3>
<b>Ramine Nikoukhah</b> INRIA

<BR>




</BODY>
</HTML>
