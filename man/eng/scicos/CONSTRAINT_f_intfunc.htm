<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<!--Converted with LaTeX2HTML 2002-2-1 (1.71)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>CONSTRAINT_f_intfunc</TITLE>
<META NAME="description" CONTENT="CONSTRAINT_f_intfunc">
<META NAME="keywords" CONTENT="CONSTRAINT_f_intfunc">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META NAME="Generator" CONTENT="LaTeX2HTML v2002-2-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="CONSTRAINT_f_intfunc.css">

</HEAD>

<BODY bgcolor="#FFFFFF">

<P>
<DIV ALIGN="CENTER">
Interfacing function
<BR><A NAME="tex2html1"
  HREF="./CONSTRAINT_f_intfunc.htm">eng</A>

</DIV>
<H2><A NAME="SECTION00010000000000000000"></A><A NAME="CONSTRAINT_f_intfunc"></A>
<BR>
CONSTRAINT_f
</H2>

<H3><font color="blue"><A NAME="SECTION00011000000000000000">
File content</A>
</font></H3>
<BR>
<PRE  CLASS="verbatim">function [x,y,typ]=CONSTRAINT_f(job,arg1,arg2)
// Copyright INRIA
x=[];y=[];typ=[]
select job
case 'plot' then
  standard_draw(arg1)
case 'getinputs' then
  [x,y,typ]=standard_inputs(arg1)
case 'getoutputs' then
  [x,y,typ]=standard_outputs(arg1)
case 'getorigin' then
  [x,y]=standard_origin(arg1)
case 'set' then
  x=arg1
  graphics=arg1.graphics;exprs=graphics.exprs
  model=arg1.model;
  while %t do
    [ok,num,exprs]=getvalue('Set Constraint block parameters',..
	'Set number of constraints',list('vec',1),exprs)
    if ~ok then break,end
    if num&lt;=0 then
      message('number of constraints must be &gt; 0 ')
    else
      [model,graphics,ok]=check_io(model,graphics,num,num,[],[])
      if ok then
	graphics.exprs=exprs
	model.state=zeros(4*num,1)
	model.out=num
	model.in=num
//	model.rpar=[num]
	x.graphics=graphics;x.model=model
	break
      end
    end
  end
  
  
 case 'define' then
  x0=[0;0;0;0]
  model=scicos_model()
  model.sim=list('constraint',10001)
  model.in=1
  model.out=1
  model.state=x0
  model.blocktype='c'
  model.dep_ut=[%f %t]
  exprs='1'
  gr_i=['xstringb(orig(1),orig(2),''=0    ?'',sz(1),sz(2),''fill'');']
  x=standard_define([2 2],model,exprs,gr_i)
end
endfunction
</PRE>

<BR>




</BODY>
</HTML>
