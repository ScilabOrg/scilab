<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "../../manrev.dtd">
<MAN>
  <LANGUAGE>eng</LANGUAGE>
  <TITLE>getf</TITLE>
  <TYPE>Scilab Function</TYPE>
  <DATE>April 1993</DATE>
  <SHORT_DESCRIPTION name="getf"> defining a function from a file</SHORT_DESCRIPTION>
  <CALLING_SEQUENCE>
    <CALLING_SEQUENCE_ITEM>getf(file-name [,opt])  </CALLING_SEQUENCE_ITEM>
  </CALLING_SEQUENCE>
  <PARAM>
    <PARAM_INDENT>
      <PARAM_ITEM>
        <PARAM_NAME>filename</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: Scilab string.</SP>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
      <PARAM_ITEM>
        <PARAM_NAME>opt</PARAM_NAME>
        <PARAM_DESCRIPTION>
          <SP>: optional character string</SP>
          <PARAM_INDENT>
            <PARAM_ITEM>
              <PARAM_NAME>&quot;c&quot;  </PARAM_NAME>
              <PARAM_DESCRIPTION>
                <SP>: loaded functions are &quot;compiled&quot; to be more efficient (default)</SP>
              </PARAM_DESCRIPTION>
            </PARAM_ITEM>
            <PARAM_ITEM>
              <PARAM_NAME>&quot;n&quot;  </PARAM_NAME>
              <PARAM_DESCRIPTION>
                <SP>: loaded functions are not &quot;compiled&quot;</SP>
              </PARAM_DESCRIPTION>
            </PARAM_ITEM>
            <PARAM_ITEM>
              <PARAM_NAME>&quot;p&quot;  </PARAM_NAME>
              <PARAM_DESCRIPTION>
                <SP>: loaded functions are  &quot;compiled&quot; and prepared for profiling (see profile)</SP>
              </PARAM_DESCRIPTION>
            </PARAM_ITEM>
          </PARAM_INDENT>
        </PARAM_DESCRIPTION>
      </PARAM_ITEM>
    </PARAM_INDENT>
  </PARAM>
  <DESCRIPTION>
    <P> loads one or several functions (see <VERB>functions</VERB>)
    defined in the file <VERB>'file-name'</VERB>.  The string
    <VERB>opt='n'</VERB> means that the functions are not compiled
    (pre-interpreted) when loaded. This can be useful for some
    debugging purpose (see <VERB>comp</VERB>). By default, functions
    are compiled when loaded (i.e. <VERB>opt='c'</VERB> is used).</P>

    <P> In the file a function must begin by a &quot;syntax
    definition&quot; line as follows:</P>
    <VERBATIM>
<![CDATA[
function [y1,...,yn]=foo(x1,...,xm)
   ]]>
    </VERBATIM>
    <P>
    The following lines contain a sequence of scilab instructions.</P>
    <P>
    The &quot;syntax definition&quot; line gives the &quot;full&quot;
    calling syntax of this function. The <VERB>yi</VERB> are output
    variables calculated as functions of input variables
    <VERB>xi</VERB> and variables existing in Scilab when the function
    is executed. Shorter input or output argument list may be
    used.</P>
    <P>
    Many functions may be written in the same file. A function is
    terminated by an <VERB>endfunction</VERB> keyword. For
    compatibility with previous versions a function may also be
    terminated by the following <VERB>function</VERB> keyword or the
    <VERB>EOF</VERB> mark. For that reason it is not possible to load
    function containing nested function definition using the
    <VERB>getf</VERB> function.</P>

    <P><VERB>getf</VERB> is an obsolete way for loading functions into
    scilab from a file. It is replaced by the <VERB>exec</VERB> function. Note that  functions in a file should be  terminated by an
    <VERB>endfunction</VERB> keyword.  The <VERB>exec</VERB> function supposes  <VERB>opt=='c'</VERB>.</P>
  </DESCRIPTION>
  <EXAMPLE>
<![CDATA[
getf('SCI/macros/xdess/plot.sci')

getf SCI/macros/xdess/plot.sci
 ]]>
  </EXAMPLE>
  <SEE_ALSO>
    <SEE_ALSO_ITEM>
      <LINK>functions</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>function</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>genlib</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>getd</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>exec</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>edit</LINK>
    </SEE_ALSO_ITEM>
    <SEE_ALSO_ITEM>
      <LINK>comp</LINK>
    </SEE_ALSO_ITEM>
  </SEE_ALSO>
</MAN>
